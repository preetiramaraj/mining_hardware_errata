Criticality	Manufacturer	Chip	Linux_BSP_Status	Revisions Impacted	Workaround	Failure	Details	Fix Status	Core	Error Category
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 The software workaround to prevent this issue it to switch to analog bypass mode (0x1E), prior to entering DSM, and then, revert to the normal bypass mode, when exiting from DSM. 	Analog: Transition from Deep Sleep Mode to LDO Bypass Mode may cause the slow response of the VDDARM_CAP output 	 Normally, the VDDARM_CAP supply takes only approximately 40 Î¼s to raise to the correct voltage when exiting from Deep Sleep (DSM) mode, if the LDO is enabled. If the LDO bypass mode is selected, the VDDARM_CAP supply voltage will drop to approximately 0 V when entering and when exiting from DSM, even though the VDDARM_IN supply is already stable, the VDDARM_CAP supply will take about 2 ms to rise to the correct voltage. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not needed in the BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The BSP does not use ARM global timer. The configuration and logic of the kernel does not make use of the Global Timer. If the Global timer is used, the workaround documented by ARM should be followed. Due to limitations of this timer specifically in low power mode operation we do not recommend the use of this ARM Global timer		 Because the erratum only happens when the Global Timer is programmed in âsingle-shotâ mode, that is, when it does not use the auto-increment feature, a first possible workaround could be to program the Global Timer to use the auto-increment feature. If this solution does not work, a second workaround could be to modify the Interrupt Handler to avoid the offending sequence. This is achieved by clearing the Global Timer flag after having incremented the Comparator register value. Then, the correct code sequence for the Interrupt Handler should look as below: 1. Read the ICCIAR (Interrupt Acknowledge) register 2. Modify the comparator value to set it to a higher value 3. Clear the Global Timer flag 4. Clear the Pending Status information for Interrupt 27 (Global Timer interrupt) in the Distributor of the Interrupt Controller. 5. Write the ICCEOIR (End of Interrupt) register 	ARM: 740657âGlobal Timer can send two interrupts for the same event 	 The Global Timer can be programmed to generate an interrupt request to the processor when it reaches a given programmed value. Due to the erratum, when the Global Timer is programmed not to use the auto-increment feature, it might generate two interrupt requests instead of one. Conditions: The Global Timer Control register is programmed with the following settings: â¢ Bit[3] = 1âb0 â Global Timer is programmed in âsingle-shotâ mode â¢ Bit[2] = 1âb1 â Global Timer IRQ generation is enabled â¢ Bit[1] = 1âb1 â Global Timer value comparison with Comparator registers is enabled â¢ Bit[0] = 1âb1 â Global Timer count is enabled With these settings, an IRQ is generated to the processor when the Global Timer value reaches the value programmed in the Comparator registers. The Interrupt Handler then performs the following sequence: 1. Read the ICCIAR (Interrupt Acknowledge) register 2. Clear the Global Timer flag 3. Modify the comparator value to set it to a higher value 4. Write the ICCEOIR (End of Interrupt) register Under these conditions, due to the erratum, the Global Timer might generate a second (spurious) interrupt request to the processor at the end of this Interrupt Handler sequence. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase (UBOOT) starting in release imx_3.0.35_4.1.0		 A software workaround is available for this erratum that requires setting bit[6] in the undocumented Diagnostic Control register, placed in CP15 c15 0 c0 1. The bit can be written in Secure state only, with the following Read/Modify/Write code sequence: Chip Errata for the i.MX 6Dual/6Quad and i.MX 6DualPlus/6QuadPlus, Rev. 6.1, 06/2016 MRC p15,0,rt,c15,c0,1 ORR rt,rt,#0x40 MCR p15,0,rt,c15,c0,1 When this bit is set, the âfast lookupâ optimization in the Store Buffer is disabled, which will prevent the failure to happen. Setting this bit has no visible impact on the overall performance or power consumption of the processor. 	ARM: 743622âFaulty logic in the Store Buffer may lead to data corruption 	 Under very rare conditions, a faulty optimization in the CortexÂ®-A9 store buffer might lead to data corruption. Conditions: The code sequence which exhibits the failure requires at least five cacheable writes in 64-bit data chunk: â¢ Three of the writes must be in the same cache line â¢ Another write must be in a different cache line â¢ All of the above four writes hit in the L1 data cache â¢ A fifth write is required in any of the above two cache lines that fully writes a 64-bit data chunk With the above code sequence, under very rare circumstances, this fifth write might get corrupted, with the written data either being lost, or being written in another cache line. The conditions under which the erratum can occur are extremely rare, and require the coincidence of multiple events and states in the Cortex-A9 micro-architecture. As an example: letâs assume A, Aâ, Aâ, and Aâââ are all in the same cache lineâB and Bâ are in another cache line. The following code sequence might trigger the erratum: STR A STR Aâ STR Aââ STR B STR Aâââ (or STR Bâ) At the time where the first four STR are in the Cortex-A9 store buffer, and the fifth STR arrives at a very precise cycle in the Store Buffer input stage, then the fifth STR might not see its cache line dependency on the previous STR instructions. Because of this, in cases when the cache line A or B gets invalidated due to a coherent request from another CPU, the fifth STR might write in a faulty cache line, causing data corruption. An alternative version of the erratum might happen even without a coherent request â In the case when the fifth STR is a 64-bit write in the same location as one of A, Aâ, Aââ, then the erratum might also be exhibited. Note that this is a quite uncommon scenario because it requires a first write to a memory location that is immediately and fully overwritten. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not needed because this erratum will not be encountered in normal device operation. The Freescale Linux BSP does not support this optional profiling feature. Users may add Chip Errata for the i.MX 6Dual/6Quad and i.MX 6DualPlus/6QuadPlus, Rev. 6.1, 06/2016 support for this profiling feature as required, but should ensure the multiple errata impacting the ARM PMU are considered especially for multi-core usage		 The main workaround for this erratum is to poll the performance counter. The maximum increment in a single cycle for a given event is 2. Therefore, polling can be infrequent as no counter can increment by more than 2^32 in fewer than 2 billion cycles. If the main usage model for performance counters is collecting values over a long period, then polling can be used to collect values (and reset the counter) rather than waiting for an overflow to occur. Polling can be done infrequently and overflow avoided. If the main usage model for performance counters relies on presetting the counter to some value and waiting for an overflow to occur, then polling can be used to detect when an overflow event has been missed. An overflow can be determined to have been missed if the unsigned value in the counter is less than the value preset into the counter. Again, polling can be done infrequently because of the number of cycles it would need for this check to fail. In the case that the erratum was triggered and an overflow event was missed, that counter sample can be thrown away or the true value can be reconstructed. An alternative workaround is to configure two counters to be triggered by the same event, staggering their initial count values by 1. This will result in the rollover being triggered by at least counter. This alternative workaround works for all Cortex-A9 events but the three following ones, due to the fact these three events can increment by 2 in a single cycle: - 0x68 â Instructions coming out of the core renaming stage - 0x73 â Floating-point instructions - 0x74 â NEON instructions For these 3 events, only the first workaround is applicable to fix the defect. 	ARM/MP: 751469 â Overflow in PMU counters may not be detected 	 Overflow detection logic in the Performance Monitor Counters is faulty, and under certain timing conditions, the overflow may remain undetected. In this case, the Overflow Flag Status register (PMOVSR) is not updated as it should, and no interrupt is reported on the corresponding PMUIRQ line. It is important to notice that the Cycle counter is not affected by this erratum. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase (UBOOT) starting in release imx_3.0.35_4.1.0		 A software workaround is available for this erratum that involves setting bit[11] in the undocumented Diagnostic Control register, placed in CP15 c15 0 c0 1. This bit can be written in Secure state only, with the following Read/Modify/Write code sequence: MRC p15,0,rt,c15,c0,1 ORR rt,rt,#0x800 MCR p15,0,rt,c15,c0,1 When it is set, this bit prevents CP15 maintenance operations to be interrupted. Using this software workaround is not expected to cause any visible impact on the system. 	ARM/MP: 751472âAn interrupted ICIALLUIS operation may prevent the completion of a following broadcast operation 	 In an MPCore configuration with two or more processors working in SMP mode with maintenance operation broadcast enabled, if a processor is interrupted while executing an ICIALLUIS operation, and performs another broadcast maintenance operation during its Interrupt Service Routine, then this second operation might not be executed on other processors in the cluster. Conditions: The erratum requires an MPCore configuration with two or more CPUs working in SMP mode. One processor has interrupts enabled, and Cache and TLB maintenance broadcast enabled too (ACTLR.FW=1âb1). This processor executes an ICIALLUIS (invalidates all instruction caches Inner Shareable to Point of Unification). This instruction is executed on the processor, and also broadcast to other processors in the MPCore cluster. The processor then receives an interrupt (IRQ or FIQ), which interrupts the ICIALLUIS operation. During the Interrupt Service Routine, the processor executes any other Cache or TLB maintenance operation which is also broadcast to other processors in the MPCore cluster. If the other processors in the cluster receive this second maintenance operation before having completed the first ICIALLUIS operation, then the erratum occurs, as the other processors will not execute the second maintenance operation. This is because there is no âstackingâ mechanism for acknowledge answers between the processors, so that the acknowledge request sent to signify the completion of the ICIALLUIS will be interpreted by the originating processor as an acknowledge for the second maintenance operation. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not needed in the BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. Linux BSP keeps ACTRL[2:1]=2âb00		 The workaround for this erratum requires not enabling the automatic Data Prefetcher by keeping ACTRL[2:1]=2âb00, which is the default value on exit from reset. Although this feature might show significant performance gain on a few synthetic benchmarks, it usually has no impact on real systems. It means, this workaround is not expected to cause any visible impact on final products. 	ARM: 751473âUnder very rare circumstances, Automatic Data prefetcher can lead to deadlock or data corruption 	 Under very rare timing circumstances, the automatic Data prefetcher might cause address hazard issues, possibly leading to a data corruption or a deadlock of the processor. Conditions: The erratum can only happen when the Data Cache and MMU are enabled in the following cases: â¢ On all memory regions marked as Write-Back Non-Shared, when the Data Prefetcher in L1 is enabled (ACTLR[2]=1âb1), regardless of the ACTLR.SMP bit. â¢ On all memory regions marked as Write-Back Shared, when the Data Prefetch Hint in L2 is enabled (ACTLR[1]=1âb1), and when the processor is in SMP mode (ACTLR.SMP=1âb1). 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	The Linux BSP does not use this debug featureâthe ARM workaround should be followed. Software workaround is not needed because this erratum will not be encountered in normal device operation		 In case, a watchpoint is set on any of the first 3 bytes of a 4 KB memory region, and unaligned accesses are not being faulted, then the erratum might happen. The workaround then requires setting a guard watchpoint on the last byte of the previous page, and dealing with any âfalse positiveâ matches as and when they occur. 	ERR003723 ARM: 751476âMay miss a watchpoint on the second part of an unaligned access that crosses a page boundary 	 Under rare conditions, a watchpoint on the second part of an unaligned access that crosses a 4 KB page boundary and that is missed in the micro-TLB for the second part of its request might be undetected. The erratum requires a previous conditional instruction that accesses the second 4 KB memory region (= where the watchpoint is set), is missed in the micro-TLB, and is condition failed. The erratum also requires that no other micro-TLB miss occurs between this conditional failed instruction and the unaligned access. This implies that the unaligned access must hit in the micro-TLB for the first part of its request. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 The workaround for this erratum involves adding a DSB in the ASID switch code sequence. The ARM architecture only mandates ISB before and after the ASID switch. Adding a DSB prior to the ASID switch ensures that the Page Table Walk completes prior to the ASID change, so that no stale entry can be allocated in the micro-TLB. The examples in the ARM Architecture Reference Manual for synchronizing the change in the ASID and TTBR need to be changed as follows: The sequence: Change ASID to 0 ISB Change Translation Table Base Register ISB Change ASID to new value becomes DSB Change ASID to 0 ISB Change Translation Table Base Register ISB DSB Change ASID to new value the sequence: Change Translation Table Base Register to the global-only mappings ISB Change ASID to new value ISB Change Translation Table Base Register to new value becomes Change Translation Table Base Register to the global-only mappings ISB DSB Change ASID to new value ISB Change Translation Table Base Register to new value and the sequence: Set TTBCR.PD0 = 1 ISB Change ASID to new value Change Translation Table Base Register to new value ISB Set TTBCR.PD0 = 0 becomes Set TTBCR.PD0 = 1 ISB DSB Change ASID to new value Change Translation Table Base Register to new value ISB Set TTBCR.PD0 = 0 	ARM: 754322âPossible faulty MMU translations following an ASID switch 	 A microTLB entry might be corrupted following an ASID switch, possibly corrupting subsequent MMU translations. The erratum requires execution of an explicit memory access, which might be speculative. This memory access misses in the TLB and cause a translation table walk. The erratum occurs when the translation table walk starts before the ASID switch code sequence, but completes after the ASID switch code sequence. In this case, a new entry is allocated in the microTLB for the TLB entry for this translation table walk, but corresponding to the old ASID. Because the microTLB does not record the ASID value, the new MMU translation, which should happen with the new ASID following the ASID switch, might hit this stale microTLB entry and become corrupted. Note that there is no Trustzone Security risk because the Security state of the access is held in the microTLB, and cannot be corrupted. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not needed because this erratum will not be encountered in normal device operation.The Freescale Linux BSP does not support this optional profiling feature. Users may add support for this profiling feature as required, but should ensure the multiple errata impacting the ARM PMU are considered especially for multi-core usage		 Count ISB instructions along with event 0x90. The user should subtract this ISB count from the results obtained in events 0x0C and 0x0D, to obtain the precise count of software change of PC (0x0C) and immediate branches (0x0D). 	ARM: 725631âISB is counted in Performance Monitor events 0x0C and 0x0D 	 The ISB is implemented as a branch in the Cortex-A9 micro-architecture. This implies that events 0x0C (software change of PC) and 0x0D (immediate branch) are asserted when an ISB occurs. This is not compliant with the ARM architecture. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not needed because this erratum will not be encountered in normal device operation		 The workaround for this erratum requires always accessing the MIDR at its original address, 0xD00, and not at any of its alias addresses. 	ERR003726 ARM: 729817âMainID register alias addresses are not mapped on Debug APB interface 	 The ARM Debug Architecture specifies registers 838 and 839 as âAlias of the MainID registerâ. They should be accessible through the APB Debug interface at addresses 0xD18 and 0xD1C. In Cortex-A9, the two alias addresses are not implemented. A read access at any of these two addresses returns 0, instead of the MIDR value. Note that read accesses to these two registers through the internal CP14 interface are trapped to UNDEF, which is compliant with the ARM Debug architecture. So, the erratum only applies to the alias addresses through the external Debug APB interface. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not needed because this erratum will not be encountered in normal device operation		 There are a selection of workarounds with increasing complexity and decreasing impact. In each case, the impact is a loss of performance when debugging: â¢ Do not use stall mode â¢ Do not use stall mode when doing load/store operations â¢ Always check for a sticky abort after issuing a load/store operation in stall mode (the cost of this probably means the above second workaround is a preferred alternative) â¢ Always check for a sticky abort after issuing a load/store operation in stall mode, before issuing any further instructions that might corrupt important target state (such as, further load/store instructions, instructions that write to âliveâ registers [VFP, CP15, etc.]) 	ARM: 729818âIn debug state, next instruction is stalled when sdabort flag is set, instead of being discarded 	 When the processor is in debug state, an instruction written to the ITR after a Load/Store instruction that aborts gets executed on clearing the SDABORT_l, instead of being discarded. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not needed because this erratum will not be encountered in normal device operation. The Freescale Linux BSP does not support this optional profiling feature. Users may add support for this profiling feature as required, but should ensure the multiple errata impacting the ARM PMU (Performance Monitoring Unit) are considered especially for multi-core usage		 No workaround is possible to achieve the required functionality of counting how many Neon instructions are executed (or renamed) in the processor. 	ERR003728 ARM: 740661âEvent 0x74 / PMUEVENT[38:37] may be inaccurate 	 Event 0x74 counts the total number of Neon instructions passing through the register rename pipeline stage. Due to the erratum, the âstallâ information is not taken into account. So, one Neon instruction that remains for n cycles in the register rename stage is counted as n Neon instructions. As a consequence, the count of event 0x74 might be corrupted, and cannot be relied upon. The event is also reported externally on PMUEVENT[38:37], which suffers from the same inaccuracy. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not needed because this erratum will never be encountered in normal device operation.The Freescale Linux BSP does not support this optional profiling feature. Users may add support for this profiling feature as required, but should ensure the multiple errata impacting the ARM PMU (Performance Monitoring Unit) are considered especially for multi-core usage		 No workaround is possible to achieve the required functionality of counting how many instructions are precisely passing through the register rename pipeline stage. 	ARM: 740663âEvent 0x68 / PMUEVENT[9:8] may be inaccurate 	 Event 0x68 counts the total number of instructions passing through the register rename pipeline stage. Under certain conditions, some branch-related instructions might pass through this pipeline stage without being counted. As a consequence, event 0x68 might be inaccurate, lower than expected. The event is also reported externally on PMUEVENT[9:8], which suffers from the same inaccuracy. Conditions: The erratum occurs when the following conditions are met: â¢ Events are enabled â¢ One of the PMU counters is programmed to count event 0x68 â number of instructions passing through the register rename stage. Alternatively, an external component counts, or relies on, PMUEVENT[9:8]. â¢ A program, containing the following instructions, is executed: â A Branch immediate, without Link â An ISB instruction â An HB instruction, without Link and without parameter, in Thumb2EE state â An ENTERX or LEAVEX instruction, in Thumb2 or Thumb2EE state â¢ The program executed is causing some stalls in the processor pipeline Under certain timing conditions specific to the Cortex-A9 micro-architecture, a cycle stall in the processor pipeline might âhideâ the instructions mentioned above, thus ending with a corrupted count for event 0x68, or a corrupted value on PMUEVENT[9:8] during this given cycle. If the âhiddenâ instruction appears in a loop, the count difference can be significant. As an example, letâs consider the following loop: loop mcr 15, 0, r2, cr9, cr12, {4} adds r3, #1 cmp.w r3, #loop_number bne.n loop The loop contains four instructions; so, the final instruction count should (approximately) be four times the number of executed loops. In practice, the MCR is causing a pipeline stall that âhidesâ the branch instruction (bne.n); so, only three instructions are counted per loop, and the final count appears as three times the number of executed loops. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not needed in the BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. Users should check their custom OS and either avoid the code sequence or apply the ARM recommended workaround. The ARM recommended workaround does have a performance impact		 The primary workaround might be to avoid the offending code sequence, that is, not to use uncacheable LDM when making intensive use of PLD instructions. In case the above workaround cannot be done, another workaround for this erratum can be to set bit[20] in the undocumented Control register, which is placed in CP15 c15 0 c0 1. This bit needs to be written with the following Read/Modify/Write code sequence: MRC p15,0,r0,c15,c0,1 ORR r0,r0,#0x00100000 MCR p15,0,r0,c15,c0,1 Setting this bit causes all PLD instructions to be treated as NOPs, with the consequence that code sequences usually using the PLDs, such as the memcpy() routine, might suffer from a visible performance drop. 	ARM: 743623âBad interaction between a minimum of seven PLDs and one Non-Cacheable LDM can lead to a deadlock 	 Under very rare circumstances, a deadlock can happen in the processor when it is handling a minimum of seven PLD instructions, shortly followed by one LDM to an uncacheable memory location. The LDM is treated as uncacheable in the following cases: â¢ The LDM is performed while the Data Cache is OFF â¢ The LDM is targeting a memory region marked as Strongly Ordered, Device, Normal Memory Non-Cacheable, or Normal Memory Write-Through â¢ The LDM is targeting a memory region marked as Shareable Normal Memory Write-Back, and the CPU is in AMP mode. Conditions: The code sequence that exhibits this erratum requires at least seven PLDs, shortly followed by one LDM, to an uncacheable memory region. The erratum happens when the LDM appears on the AXI bus before any of the seven PLDs. This can possibly happen if the first PLD is a miss in the micro-TLB; in that case, it needs to perform a TLB request which might not be serviced immediately because the mainTLB is already performing a Page Table Walk for another resource (for example, instruction side), or because the PLD request itself to the mainTLB is missing and causing a Page Table Walk. Also note that the above conditions are not sufficient to recreate the failure, as additional rare conditions on the internal state of the processor are necessary to exhibit the errata. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	The BSP uses correct MMU settings and does not present conditions that can cause an imprecise external abort. BSP has exception handlers for such aborts		 A possible workaround for this erratum is to protect all memory regions that can return an imprecise external abort with the correct MMU settings, to prevent any external aborts. 	ARM: 743626âAn imprecise external abort, received while the processor enters WFI, may cause a processor deadlock 	 An imprecise external abort received while the processor is ready to enter into WFI state might cause a processor deadlock. Explicit memory transactions can be completed by inserting a DSB before the WFI instruction. However, this does not prevent memory accesses generated by previously issued PLD instructions page table walks associated with previously issued PLD instructions or as a result of the PLE engine. If an external abort is returned as a result of one of these memory accesses after executing a WFI instruction, the processor can cause a deadlock. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not needed because this erratum will never be encountered in normal device operation. Software workaround not applicable to the BSP since it is a debug feature. Users should use the ARM recommended workaround if using this debug feature in their application		 The debugger tools can find the expected PC value and instruction state by reading the DBGPCSR register, and consider it as described in the Description section. No fix scheduled Linux BSP Status: Software workaround is not needed because this erratum will never be encountered in normal device operation. Software workaround not applicable to the BSP since it is a debug feature. Users should use the ARM recommended workaround if using this debug feature in their application	ERR003732 ARM: 751471âDBGPCSR format is incorrect 	 About the DBGPCSR register, the ARM architecture specifies that: â¢ DBGPCSR[31:2] contains sampled value of bits [31:2] of the PC. The sampled value is an instruction address plus an offset that depends on the processor instruction set state. â¢ DBGPCSR[1:0] contains the meaning of PC sample value, with the following permitted values: â 0b00 ((DBGPCSR[31:2] << 2) - 8) references an ARM state instruction â 0bx1 ((DBGPCSR[31:1] << 1) - 4) references a Thumb or ThumbEE state instruction â 0b10 IMPLEMENTATION DEFINED This field encodes the processor instruction set state, so that the profiling tool can calculate the true instruction address by subtracting the appropriate offset from the value sampled in bits [31:2] of the register. In Cortex-A9, the DBGPCSR samples the target address of executed branches (but possibly still speculative to data aborts), with the following encodings: â¢ DBGPCSR[31:2] contains the address of the target branch instruction, with no offset â¢ DBGPCSR[1:0] contains the execution state of the target branch instruction: â 0xb00 for an ARM state instruction â 0xb01 for a Thumb2 state instruction â 0xb10 for a Jazelle state instruction â 0xb11 for a Thumb2EE state instruction 		Cortex A-9	
	NXP	IMX6DQ	Software workaround not needed in the BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 The workaround for this erratum can be not to use conditional LDREX along with non-conditional STREX. â¢ If no conditional LDREX is used, the erratum cannot be triggered. â¢ If conditional LDREX is used, the associated STREX should be conditional too with the same condition, so that even if the exclusive monitor is set by the condition failed LDREX, the following STREX will not be executed because it will be condition failed too. For most situations this will naturally be the case anyway. 	ERR003733 ARM: 751480âConditional failed LDREXcc can set the exclusive monitor 	 A conditional LDREX might set the internal exclusive monitor of the Cortex-A9 even when its condition fails. So, any subsequent STREX that depends on this LDREXcc might succeed when it should not. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	No software workaround can be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 There is no practical software workaround for the failure. 	ARM: 752519âAn imprecise abort may be reported twice on non-cacheable reads 	 When two outstanding read memory requests to device or non-cacheable normal memory regions are issued by the Cortex-A9, and the first one receives an imprecise external abort, then the second access might falsely report an imprecise external abort. Conditions: The erratum can only happen in systems which can generate imprecise external aborts on device or non-cacheable normal memory regions accesses. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ			 The recommended workaround for this erratum involves inserting a DMB operation after the faulty write operation in code sequences that might be affected by this erratum. This ensures visibility of the written data by any external agent. 	ERR003735 ARM: 754323âRepeated Store in the same cache line may delay the visibility of the Store 	 The Cortex-A9 implements a small counter that ensures the external visibility of all stores in a finite amount of time, causing an eventual drain of the merging store buffer. This is to avoid an earlier issue, where written data could potentially remain indefinitely in the Store Buffer. This store buffer has merging capabilities, and will continue merging data as long as the write accesses are performed in the same cache line. The issue that causes this erratum is that the draining counter is reset each time a new data merging is performed. When a code sequence is looping, and keeps on writing data in the same cache line, then the external visibility of the written data might not be ensured. A livelock situation might consequently occur in case any external agent is relying on the visibility of the written data, and that the writing processor cannot be interrupted while doing its writing loop. Conditions: The erratum can only happen on normal memory regions. Two example scenario, which might trigger the erratum, are described below: â¢ The processor keeps on incrementing a counter: writing the same word at the same address. The external agent (possibly another processor) is polling on this address, waiting for any update of the counter value to proceed. The store buffer will keep on merging the updated value of the counter in its cache line, so that the external agent will never see any updated value, possibly leading to livelock. â¢ The processor writes a value in a given word to indicate completion of its task, then keeps on writing data in an adjacent word in the same cache line. The external agent keeps on polling the first word memory location to check when the processor has completed its task. The situation is the same as above, as the cache line might remain indefinitely in the merging store buffer, creating a possible livelock in the system. 	No fix scheduled Software workaround is not needed because this erratum will not be encountered in normal device operation. However, the ARM Linux kernel common code has added the necessary DMB in places to ensure the visibility of the written data to any external agent.The workaround for this erratum is to insert a DMB operation after the faulty write operation in code sequences that this erratum might affect, to ensure the visibility of the written data to any external agent. The BSP does use DMBs however the specific condition or scenario is not seen in kernel code	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not implemented because this erratum will never be encountered in normal device operation		 There is no practical workaround for this erratum. The only possible way to reset the Sticky Pipeline Advance bit is to assert the nDBGRESET input pin on the processor. This obviously has the side effect to reset all debug resources in the concerned processor, and any other additional Coresight components nDBGRESET is connected to. 	ERR003736 ARM: 756421âSticky Pipeline Advance bit cannot be cleared from debug APB accesses 	 The Sticky Pipeline Advance bit is bit[25] of the DBGDSCR register. This bit enables the debugger to detect whether the processor is idle. This bit is set to 1 every time the processor pipeline retires one instruction. A write to DBGDRCR[3] clears this bit. The erratum is that the Cortex-A9 does not implement any debug APB access to DBGDRCR[3]. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. Software workaround not applicable to the BSP as instruction encodings are not generated by compiler		 A possible workaround for this erratum is to modify the instruction encoding with bits[15:12]=4.b1111, so that the instruction is truly treated as a NOP by the Cortex-A9. If the instruction encoding cannot be modified, the UNDEFINED exception handler has to cope with this case, and emulate the expected behavior of the instruction, that is, do nothing (NOP), before returning to normal program execution. 	ARM: 757119âSome âUnallocated memory hintâ instructions generate an UNDEFINED exception instead of being treated as NOP 	 The ARM architecture specifies that ARM opcodes of the form 11110 100x001 xxxx xxxx xxxx xxxx xxxx are âUnallocated memory hint (treat as NOP)â if the core supports the MP extensions, as the Cortex-A9 does. The errata is that the Cortex-A9 generates an UNDEFINED exception when bits [15:12] of the instruction encoding are different from 4âb1111, instead of treating the instruction as a NOP. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. Parity is not supported on i.MX 6 series. See erratum ERR005187 regarding the BSP interaction with the parity interrupt		 There is no workaround for this erratum. 	ERR003738 ARM/MP: 751475âParity error may not be reported on full cache line access (eviction / coherent data transfer / cp15 clean operations) 	 In the Data cache, parity error detection is faulty. Parity error may not be not detected when the line exits from the Data cache, due to a line replacement, or due to a coherent request from another processor or from the ACP, or because of a CP15 cache clean operation. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 None 	ARM: 751470âImprecise abort on the last data of a cache linefill may not be detected 	 Data linefills are returned as 4-beat bursts of 64-bit data on the AXI bus. When the first three beat of data are valid, and the fourth one aborts, then the abort is not detected by the processor logic and no abort exception is taken. The processor then behaves as if no abort is reported on the line. It can allocate the line in its Data Cache, and use the aborted data during its program flow. Conditions: The processor needs to work with Data Cache enabled, and access some cacheable memory regions (Write Back, either Shared or Non-Shared). The memory system underneath the processor needs to be able to generate aborts in this memory region, and must be able to generate aborts with a granularity smaller than the cache line. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround which disables the double linefill feature is integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 The only workaround to this erratum is to disable the double linefill feature. This is the behavior by default. 	ERR003740 ARM/PL310: 752271âDouble linefill feature can cause data corruption [i.MX 6Dual/6Quad only] 	 The double linefill feature is controlled by bit 30 of the Prefetch Control Register. The L2C-310 cache line length is 32-byte. Therefore, by default, on each L2 cache miss, L2C-310 issues 32-byte linefills, 4 x 64-bit read bursts, to the L3 memory system. L2C-310 can issue 64-byte linefills (double linefills), 8 x 64-bit read bursts, on an L2 cache miss. When the L2C-310 is waiting for the data from L3, it performs a lookup on the second cache line targeted by the 64-byte linefill. When it misses in the L2 cache, it identifies a victim for future allocation. If such a victim already contains a dirty entry, the latter must be evicted before the second part of the double linefill is allocated. For this purpose, the double linefill slot issues a request to the Eviction Buffer. Due to this erratum, such an eviction request can be missed, leading to the loss of dirty data in the L2 cache. Conditions: This problem occurs when the following conditions are met: â¢ The double linefill feature is enabled. â¢ The L2 cache contains dirty data. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The bit[10] âHigh Priority for SO and Dev reads enableâ of the PL310 Auxiliary Control Register is not enabled in the BSP		 A workaround is only necessary in systems that are able to issue a continuous flow of SO or Device reads. In such a case, the workaround is to disable the âHigh Priority for SO and Dev readsâ feature. This is the behavior by default. 	ARM/PL310: 729815âThe âHigh Priority for SO and Dev readsâ feature can cause Quality of Service issues to cacheable read transactions 	 The âHigh Priority for SO and Dev readsâ feature can be enabled by setting the bit[10] of the PL310 Auxiliary Control Register to 1. When enabled, it gives priority to Strongly Ordered and Device reads over cacheable reads in the PL310 AXI master interfaces. When PL310 receives a continuous flow of SO or Device reads, this can prevent cacheable reads, which are misses in the L2 cache, from being issued to the L3 memory system. Conditions: The erratum occurs when the following conditions are met: â¢ The bit[10] âHigh Priority for SO and Dev reads enableâ of the PL310 Auxiliary Control Register is set to 1 â¢ PL310 receives a cacheable read that is a miss in the L2 cache â¢ PL310 receives a continuous flow of SO or Device reads that take all address slots in the master interface 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 There is no workaround for this erratum. A workaround is not expected to be necessary for this erratum either. 	ERR003743 ARM/PL310: 754670âA continuous write flow can stall a read targeting the same memory area 	 In the ARM L2 cache controller, PL310, hazard checking is done on bits [31:5] of the address. When a read with Normal Memory (cacheable or not) attributes is received by PL310, hazard checking is performed with the active writes of the store buffer. If an address matching is detected, the read is stalled till the write completes. Due to this erratum, a continuous flow of writes can stall a read targeting the same memory area. Conditions: The erratum occurs when the following conditions are met: â¢ PL310 receives a continuous write traffic targeting the same address marked with Normal Memory attributes â¢ While treating this flow, PL310 receives a read targeting the same 32-byte memory area 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not implemented because this erratum will never be encountered in normal device operation. Users should ensure their tool chain has the recommended workaround. For more information about integrating the workaround inside tool chains, please refer to the Programmer Advice Notice related to this erratum, ARM UAN 0004A. (http://infocenter.arm.com/help/topic/com.arm.doc.uan0004a/UAN0004A_a9_read_read.pdf		 The vast majority of multi-processing code is not written in a style which exposes the erratum. So, the erratum is expected to affect very specific areas of code which rely on this read ordering behavior. A first workaround for this erratum consists in using LDREX instead of standard LDR in volatile memory places where a strict read ordering is required. An alternative solution consists in inserting a DMB between the affected LDR which requires this strict ordering rule. This is the recommended workaround for tool chains integration. 	ARM/MP: 761319âOrdering of read accesses to the same memory location may not be ensured 	 The ARM architecture, and general rules of coherency, requires reads to the same memory location to be observed in order. Due to some internal replay path mechanisms, the Cortex-A9 can see a read access bypassed by a following read access to the same memory location, thus not observing the values in program order. Conditions: It can only happen on memory regions marked as Normal Memory Write-Back Shared. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 To work around this erratum, ARM recommends to: â¢ Ensure there is no false sharing (on a cache line size alignment) for both self modifying code and data to be cleaned to an external agent, like a DMA engine. â¢ Set bit[0] in the undocumented SCU diagnostic control register located at offset 0x30 from the PERIPHBASE address. Setting this bit disables the âmigratory bitâ feature. This forces a dirty cache line to be evicted to the lower memory subsystemâwhich is both the point of coherency and the point of unificationâwhen it is being read by another processor. Note that this bit can be written, but is always Read as Zero. â¢ Insert a DSB instruction in front of the cache maintenance operation. Note that if the cache maintenance operation is executed within a loop with no other memory operations, ARM only recommends adding a DSB prior to entering the loop. Note that the atomicity between the DSB and the cache maintenance operation might not be ensured because an interrupt may still be taken between the two instructions. However, setting the âdisable migratory lineâ bit and inserting the DSB in front of the cache maintenance operation will very significantly decrease the probability to trigger the erratum when false sharing for writes to either self-modifying code memory regions or DMA regions, on a cache line granularity, which is likely to be the case. With these workarounds, the likely occurrence of this erratum is sufficiently low that the erratum does not limit or severely impair the intended use of specified features. 	ERR004325 ARM/MP: 764369âData or unified cache line maintenance operation by MVA may not succeed on an Inner Shareable memory region 	 Under certain timing circumstances, a data or unified cache line maintenance operation by MVA targeting an Inner Shareable memory region might fail to proceed up to either the Point of Coherency or to the Point of Unification of the system. This is likely to affect self modifying code. Conditions: The erratum requires a Cortex-A9 MPCore configuration with two processors or more, working in SMP mode, with the broadcasting of CP15 maintenance operations enabled. The following scenario illustrates how the erratum can happen: â¢ One CPU performs a data or unified cache line maintenance operation by MVA targeting a memory region that is locally dirty. â¢ A second CPU issues a memory request targeting this same memory location within the same time frame. A race condition might occur, resulting in the cache operation not being performed up to the specified Point, either Coherency or Unification. The following maintenance operations are affected: â¢ DCIMVAC: Invalidate data or unified cache line by MVA to PoC â¢ DCCMVAC: Clean data or unified cache line by MVA to PoC â¢ DCCMVAU: Clean data or unified cache line by MVA to PoU â¢ DCCIMVAC: Clean and invalidate data or unified cache line by MVA to PoC The erratum might arise when the second CPU is performing either of: â¢ A read request resulting from any Load instruction; the Load can be a speculative one. â¢ A write request resulting from any Store instruction. â¢ A data prefetch resulting from a PLD instruction; the PLD might be a speculative one. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used.The Freescale Linux BSP does not support this optional profiling feature. Users may add support for this profiling feature as required, but should ensure the multiple errata impacting the ARM PMU (Performance Monitoring Unit) are considered especially for multi-core usag		 No workaround is possible to achieve the required functionality of counting how many instructions are precisely passing through the register rename pipeline stage, when the code contains some MRC or MCR instructions. 	ERR004326 ARM/MP: 761321âMRC and MCR are not counted in event 0x68 	 Event 0x68 counts the total number of instructions passing through the Register rename pipeline stage. The erratum is that MRC and MCR instructions are not counted in this event. The event is also reported externally on PMUEVENT[9:8], which suffers from the same defect. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not implemented because this erratum will never be encountered in normal device operation. Users that require this debug feature should implement the recommended ARM workaround		 The workaround for this erratum consists in temporarily setting the DBGSWENABLE bit to 1 so that the DBGPRSR and DBGOSLSR registers can be accessed as expected. There is no other workaround for this erratum. 	ARM/MP: 764319âRead accesses to DBGPRSR and DBGOSLSR may generate an unexpected UNDEF 	 CP14 read accesses to the DBGPRSR and DBGOSLSR registers generate an unexpected UNDEFINED exception when the DBGSWENABLE external pin is set to 0, even when the CP14 accesses are performed from a privileged mode. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The BSP does not dynamically enable/disable data cache during run-time and thus avoids the PLD instruction with the data cache off		 In the case where a system is impacted by this erratum, a software workaround is available which consists in setting bit [20] in the undocumented Control register, which is placed in CP15 c15 0 c0 1. This bit needs to be written with the following Read/Modify/Write code sequence: MRC p15,0,r0,c15,c0,1 ORR r0,r0,#0x00100000 MCR p15,0,r0,c15,c0,1 Setting this bit causes all PLD instructions to be treated as NOPs, with the consequence that code sequences usually using the PLDs, such as the memcpy() routine, might suffer from a visible performance drop. So, if this workaround is applied, ARM strongly recommends restricting its usage to periods of time where the Data Cache is disabled. 	ERR005175 ARM/MP: 771221âPLD instructions may allocate data in the Data Cache regardless of the Cache Enable bit value 	 Preload Data (PLD) instructions prefetch and allocate any data marked as Write-Back (either Write-Allocate or Non-Write-Allocate, Shared or Non-Shared), regardless of the processor configuration settings, including the Data Cache Enable bit value. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not implemented because this erratum will never be encountered in normal device operation. Users should use ARM recommended workaround if using this debug trace feature		 To work around the erratum, the ISB must be replaced by one of the events causing the change to be visible. In particular, replacing the ISB by a MOVS PC to the next instruction will achieve the correct functionality. 	ARM/MP: 771224âVisibility of Debug Enable access rights to enable/disable tracing is not ensured by an ISB 	 According to the ARM architecture, any change in the Authentication Status Register should be made visible to the processor after an exception entry or return, or an ISB. Although this is correctly achieved for all debug-related features, the ISB is not sufficient to make the changes visible to the trace flow. As a consequence, the WPTTRACEPROHIBITEDn signal(s) remain stuck to their old value up to the next exception entry or return, or to the next serial branch, even when an ISB is executed. A serial branch is one of the following: â¢ Data processing to PC with the S bit set (for example, MOVS pc, r14) â¢ LDM pc ^ 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase in all releases. Software workaround is to enable branch prediction which is enabled by default in the BSP GA release		 The following two workarounds are available for this erratum: â¢ Turn on the branch prediction. â¢ Remove the DSB in the middle of the LDREX/STREX sequence. If a DSB is truly required, it is strongly recommended to place it before the LDREX/STREX sequence, and implement the LDREX/STREX sequence as recommended by the ARM architecture. 	ERR005185 ARM/MP: 771225âSpeculative cacheable reads to aborting memory region clear the internal exclusive monitor, may lead to livelock 	 On Cortex-A9, when a cacheable read receives an external abort, the aborted line is allocated as invalid in the Data Cache, and any allocation in the Data Cache clears the internal exclusive monitor. So, if a program executes a LDREX/STREX loop which keeps on receiving an abort answer in the middle of the LDREX/STREX sequence, then the LDREX/STREX sequence never succeeds, leading to a possible processor livelock. As an example, the following code sequence might exhibit the erratum: loop LDREX ... DSB STREX CMP BNE loop .... LDR (into aborting region) The LDREX/STREX does not succeed on the first pass of the loop, and the BNE is mispredicted, so, the LDR afterwards is speculatively executed. So, the processor keeps on executing: LDR to aborting region (this speculative LDR now appears âbeforeâ the LDREX and DSB) LDREX DSB STREX The LDR misses in L1, and never gets allocated as valid because it is aborting The LDREX is executed, and sets the exclusive monitor The DSB is executed. It waits for the LDR to complete, which aborts, causing an allocation (as invalid) in the Data Cache, which clears the exclusive monitor The STREX is executed, but the exclusive monitor is now cleared, so the STREX fails The BNE might be mispredicted again, so the LDR is speculatively executed again, and the code loops back on the same failing LDREX/STREX sequence. Conditions: The erratum happens in systems which might generate external aborts in answer to cacheable memory requests. If the program reaches a stable state where the internal exclusive monitor keeps on being cleared in the middle of the LDREX/STREX sequence, then the processor might encounter a livelock situation. In practice, this scenario seems very unlikely to happen because several conditions might prevent the erratum from happening: â¢ Usual LDREX/STREX code sequences do not contain any DSB, so that it is very unlikely that the system would return the abort answer precisely in the middle of the LDREX/STREX sequence on each iteration. â¢ Some external irritators (for example, interrupts) might happen and cause timing changes which might exit the processor from its livelock situation. â¢ Branch prediction is very usually enabled, so the final branch in the loop will usually be correctly predicted after a few iterations of the loop, preventing the speculative LDR to be issued, so that the next iteration of the LDREX/STREX sequence will succeed. Workarounds: The following two workarounds are available for this erratum: â¢ Turn on the branch prediction. â¢ Remove the DSB in the middle of the LDREX/STREX sequence. If a DSB is truly required, it is strongly recommended to place it before the LDREX/STREX sequence, and implement the LDREX/STREX sequence as recommended by the ARM architecture. Proposed Solution: No fix scheduled Linux BSP Status: Software workaround implemented in Linux BSP codebase in all releases. Software workaround is to enable branch prediction which is enabled by default in the BSP GA release	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not needed in the BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. BSP ignores any assertion on the PARITYFAIL[7:6] bits by masking the ARM -GIC parity interrupt 125. Please note that the i.MX6 does not support the parity feature and hence should not be enabled		 Because parity errors on the BTAC and GHB RAMs are not reported when the dynamic branch prediction is not enabled, the workaround consists in enabling parity error detection (ACTLR[9]), prior to enabling dynamic branch prediction (SCTLR[11]). In systems where branch prediction is enabled while parity error detection remains disabled, the workaround consists in ignoring any assertion on the PARITYFAIL[7:6] bits. 	ERR005187 ARM/MP: 771223âParity errors on BTAC and GHB are reported on PARITYFAIL[7:6], regardless of the Parity Enable bit value 	 PARITYFAIL signal bits [7] and [6] are expected to report parity errors occurring on the BTAC and GHB RAMs, when the parity error detection logic is enabled (ACTLR[9]=1âb1). The erratum is that the Parity Enable bit, ACTLR[9], is not taken into account by the logic driving PARITYFAIL[7:6]. As a consequence, any parity error on the BTAC or GHB RAM will be reported on PARITYFAIL[7] or [6], even when parity error detection is not enabled. Conditions: The erratum happens on all configurations that have implemented parity support on the BTAC or GHB RAMs when dynamic branch prediction is enabled (SCTLR[11]=1âb1). 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ			 The following two software workarounds are available for systems affected by this erratum: â¢ Use write-through memory attributes for all cacheable accesses targeting PL310. â¢ Disable the logic responsible for generating RAM errors. This can imply disabling parity in PL310 and/or disabling DATAERR and TAGERR generation in the RAM array, depending on the implementation. 	ARM/PL310: 780370âDATAERR, TAGERR, and Tag parity errors are incorrectly sampled by the eviction buffer, leading to data corruption 	 The PL310 L2 cache controller implements error logic to indicate errors have occurred when accessing the L2 cache RAM array. The following error information is available when accessing the RAM array: â¢ DATAERR (or DATAERR[3:0] if data banking is implemented) from Data RAM â¢ TAGERR[7:0] (or TAGERR[15:0] if 16 ways are implemented) from Tag RAM â¢ Parity error on Tag or Data RAM if parity is implemented This information is associated with each individual RAM access, and is only meant to be sampled by the PL310 internal access requestor at precise cycles, depending on the programmable latencies of the accessed RAM (see Technical Reference Manual (TRM) for more information on RAM latencies). More specifically, when an eviction is handled by the PL310 eviction buffer, both Tag and Data RAMs are accessed to get the whole eviction information. When either DATAERR or TAGERR is asserted high, or a tag parity error is detected during that process, the error information is captured by the eviction buffer, which cancels the corresponding eviction as a result. Due to this erratum, the eviction buffer can incorrectly sample error information. As a result, an eviction can be wrongly cancelled and dirty data can be lost, leading to data corruption. Note that data parity error is not part of this erratum. The reason is that this type of error information is not taken into account by the eviction buffer. This means that an eviction is always sent to the L3 memory system, regardless of whether a Data parity error has been detected or not, when accessing its data in the L2 cache. Conditions: The erratum occurs when the following conditions are met: â¢ The L2 cache contains dirty cache lines â¢ The eviction buffer accesses Tag and Data RAMs to get dirty cache line information before replacement â¢ While the eviction buffer accesses the RAMs, a tag parity error is detected, or DATAERR or TAGERR are asserted HIGH, but this error information is not meant to be captured by the eviction buffer (it may be directed to another PL310 block or DATAERR may be transiently asserted high before the end of the Data RAM latency period) â¢ The eviction buffer incorrectly samples the error information and cancels the corresponding eviction 	No fix schedule	Cortex A-9	
	NXP	IMX6DQ				Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The erratum only affects configurations which implement the parity support option. i.MX6 parity is not supported. In the Freescale Linux implementation, the parity error detection is disabled and GIC parity interrupt 125, is masked in the BSP. The parity feature is disabled by default and should not be enabled			Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 If a write access needs to be made visible to an L3 external agent, the workaround for this erratum consists of using a Cache Sync operation in order to force the PL310 Store Buffer to drain. This is illustrated in the following pseudo-code sequence: STR // to be made visible to L3 DSB CACHE_SYNC. In r3p2, a counter is implemented so that slots are automatically drained after 256 cycles of presence in the store buffer. The i.MX 6Dual/6Quad has PL310-BU-00000-r3p1-50rel0. 	ERR005199 ARM/MP: 769419âNo automatic Store Buffer drain, visibility of written data requires an explicit Cache Sync operation [i.MX 6Dual/6Quad Only] 	 The PL310 Store Buffer does not have any automatic draining mechanism. Any written data might consequently remain in this buffer, invisible to the rest of the system. In case an L3 external agent keeps on polling this memory location, waiting to see the update of the written data to make any further progress, then a system livelock might happen. Conditions: The erratum can only happen on Normal Memory regions. The following scenario is an example which can exhibit the erratum, where an L3 agent might loop infinitely waiting for the notification from CPU for an unbounded amount of time: â¢ An L3 agent is waiting for notification from CPU before making progress. â¢ CPU attached to PL310 issues such notification via a write access, which stays in PL310 store buffer. â¢ No additional activity forcing the store buffer to drain is received by PL310. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0. BSP software workaround sets prefetch offset to 0 or 15 to avoid this erratum		 A workaround for this erratum is to program the prefetch offset with any value except 23. 	ARM/MP: 765569âPrefetcher can cross 4 KB boundary if offset is programmed with value 23 	 When prefetch feature is enabled (bits [29:28] of the Auxiliary or Prefetch Control Register set HIGH), the prefetch offset bits of the Prefetch Control Register (bits [4:0]) permits to configure the advance taken by the prefetcher compared to the current cache line. Refer to the TRM for more information. One requirement for the prefetcher is not to go beyond a 4 KB boundary. If the prefetch offset is set to 23 (5'b10111), this requirement is not fulfilled and the prefetcher can cross a 4 KB boundary. This problem occurs when the following conditions are met: 1. One of the Prefetch Enable bits (bits [29:28] of the Auxiliary or Prefetch Control Register) is set HIGH. 2. The prefetch offset bits are programmed with value 23 (5'b10111). 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used.The Freescale Linux BSP does not support this optional profiling feature. Users may add support for this profiling feature as required, but should ensure the multiple errata impacting the ARM PMU (Performance Monitoring Unit) are considered especially for multi-core usage		 There is no workaround to this erratum. 	ERR005382 ARM/MP: 775419âPMU event 0x0A (exception return) might count twice the LDM PC ^ instructions with base address register write-back 	 The LDM PC ^ instructions with base address register write-back might be counted twice in the PMU event 0x0A, which is counting the number of exception returns. The associated PMUEVENT[11] signal is also affected by this erratum, and might be asserted twice by a single LDM PC ^ instruction with base address register write-back. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround, adding a DSB at the beginning of the abort exception handler) is integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 A simple workaround for this erratum is to add a DSB at the beginning of the abort exception handler. 	ARM/MP: 775420âA data cache maintenance operation that aborts, followed by an ISB and without any DSB in-between, might lead to deadlock 	 Under certain micro-architectural circumstances, a data cache maintenance operation that aborts, followed by an ISB and with no DSB occurring between these events, might lead to processor deadlock. Conditions: The erratum occurs when the following conditions are met: â¢ Some write operations are handled by the processor, and take a long time to complete. The typical situation is when the write operation (STR, STM, â¦) has missed in the L1 Data Cache. â¢ No memory barrier (DMB or DSB) is inserted between the write operation and the data cache maintenance operation mentioned in condition 3. â¢ A data cache maintenance operation is performed, which aborts due to its MMU settings. â¢ No memory barrier (DMB or DSB) is inserted between the data cache maintenance operation in previous condition and the ISB in next condition. Any other kind of code can be executed here, starting with the abort exception handler, following the aborted cache maintenance operation. â¢ An ISB instruction is executed by the processor. â¢ No memory barrier (DMB or DSB) is inserted between the ISB in previous condition and the read or write operation in next condition. â¢ A read or write operation is executed. With the above conditions, an internal âData Side drain requestâ signal might remain sticky, causing the ISB to wait for the Data Side to be empty, which never happens because the last read or write operation waits for the ISB to complete. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ			 The recommended workaround is to place a DMB instruction before each Load-Exclusive / Store-Exclusive loop sequence, to ensure that no pending write request can interfere with the execution of the Load-Exclusive or Store-Exclusive instructions. The implementation of this workaround can be restricted to code regions which have access to Strongly Ordered memory. 	ERR005385 ARM/MP: 782772âA speculative execution of a Load-Exclusive or Store-Exclusive instruction after a write to Strongly Ordered memory might deadlock the processor 	 Under certain timing circumstances, a processor might deadlock when the execution of a write to a Strongly Ordered memory region is followed by the speculative execution of a Load-Exclusive or a Store-Exclusive instruction that is mis-speculated. The mis-speculation can be due to either the Load-Exclusive or Store-Exclusive instruction being conditional, and failing its condition code check, or to the Load-Exclusive or Store-Exclusive instruction being speculatively executed in the shadow of a mispredicted branch. Conditions: The erratum requires the following conditions: â The processor executes a write instruction to a Strongly Ordered memory region â The processor speculatively executes a Load-Exclusive or Store-Exclusive instruction that is either: a) A conditional instruction b) An instruction in the shadow of a conditional branch. â The Load-Exclusive or Store-Exclusive instruction is cancelled because the speculation was incorrect, because either: a) The conditional Load-Exclusive or Store-Exclusive instruction failed its condition-code check b) The conditional branch was mispredicted, so that all subsequent instructions speculatively executed must be flushed, including the Load-Exclusive or Store-Exclusive. The erratum also requires additional timing conditions to be met. These are specific to each platform, and are not controllable by software. These timing conditions includes the fact that the response to the Strongly Ordered write from the external memory system must be received at the same time as the mis-speculation is identified in the processor. 	No fix scheduled Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. There are some cases where Linux ends up with Strongly Ordered memory (MT_UNCACHED or pgprot_noncached). Freescale has checked that these are not used in the BSP. Users should check their application and OS to see if errata conditions met and apply recommended ARM work around if applicable	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above.The Linux community has not incorporated a workaround for this erratu		 The recommended workaround is to perform a clean and invalidate operation on the cache line that contains the translation entry before updating the entry, to ensure that the write operation misses in the Data Cache. This workaround prevents the micro-architectural conditions for the erratum from happening. Interrupts must be temporarily disabled so that no interrupt can be taken between the maintenance operation and the translation entry update. This avoids the possibility of the interrupt service routine bringing the cache line back in the cache. Note that inserting a DSB instruction immediately after writing the new translation table entry significantly reduces the probability of hitting the erratum, but it is not a complete workaround. 	ERR005386 ARM/MP: 782773âUpdating a translation entry to move a page mapping might erroneously cause an unexpected translation fault 	 Under certain conditions specific to the Cortex-A9 micro-architecture, a write operation that updates a Cacheable translation table entry might cause both the old and the new translation entry to be temporarily invisible to translation table walks, thus erroneously causing a translation fault. Conditions: The erratum occurs when the following conditions are met: â¢ The processor has its Data Cache and MMU enabled. â¢ The TTB registers are set to work on Cacheable descriptors memory regions. â¢ The processor is updating an existing Cacheable translation table entry, and this write operation hits in the L1 Data Cache. â¢ A hardware translation table walk is attempted. The hardware translation table walk can be either due to an Instruction fetch, or due to any other instruction execution that requires an address translation, including any load or store operation. This hardware translation walk must attempt to access the entry being updated in condition 2, and that access must hit in the L1 Data Cache. In practice, this scenario can happen when an operating system (OS) is changing the mapping of a physical page. The OS might have an existing mapping to a physical page (the old mapping), but wants to move the mapping to a new page (the new mapping). To do this, the OS might: 1. Write a new translation entry, without cancelling the old one. At this point the physical page is accessible using either the old mapping or the new mapping. 2. Execute a DSB instruction followed by an ISB instruction pair, to ensure that the new translation entry is fully visible. 3. Remove the old entry. Due to the erratum, this sequence might fail because it can happen that neither the new mapping, nor the old mapping, is visible after the new entry is written, causing a Translation fault. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. There are some cases where Linux ends up with Strongly Ordered memory (MT_UNCACHED or pgprot_noncached). Freescale has checked that these are not used in the BSP. Users should check their application and OS to see if errata conditions met and apply recommended ARM work around if applicable		 The workaround for this erratum is to insert a DMB or DSB instruction between the write to Strongly Ordered memory region and the LDREX instruction. 	ERR005387 ARM/MP: 782774âA spurious event 0x63, âSTREX passed,â can be reported on an LDREX that is preceded by a write to Strongly Ordered memory region 	 A write to Strongly Ordered memory region, followed by the execution of an LDREX instruction, can cause the âSTREX passedâ event to be signaled even if no STREX instruction is executed. As a result, the event 0x63 count might be faulty, reporting too many âSTREX passedâ events. This erratum also affects the associated PMUEVENT[27] signal. This signal will report the same spurious events. Conditions: The erratum occurs when the following conditions are met: â¢ The processor executes a write instruction to a Strongly Ordered memory region. â¢ The processor executes an LDREX instruction. â¢ No DSB instruction is executed, and there is no exception call or exception return, between the write and the STREX instructions. Under these conditions, if the write instruction to Strongly Ordered memory region receives its acknowledge (BRESP response on AXI) while the LDREX is being executed, the erratum can happen. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used.The Freescale Linux BSP does not support this optional profiling feature. Users may add support for this profiling feature as required, but should ensure the multiple errata impacting the ARM PMU (Performance Monitoring Unit) are considered especially for multi-core usage		 Provide at least 4 JTAG_TCK clock cycles following POR if the PMU, PTM and ETB functions will be used. A free-running JTAG_TCK can also be used. 	ARM: Debug/trace functions (PMU, PTM and ETB) are disabled with absence of JTAG_TCK clock after POR 	 When JTAG_TCK is not toggling after power-on reset (POR), the ARM PMU, PTM, and ETB stay in their disabled states so various debug and trace functions are not available. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 This erratum can be worked around by setting bit[4] of the undocumented Diagnostic Control register to 1. This register is encoded as CP15 c15 0 c0 1. This bit can be written in Secure state only, with the following Read/Modify/Write code sequence: MRC p15,0,rt,c15,c0,1 ORR rt,rt,#0x10 MCR p15,0,rt,c15,c0,1 When it is set, this bit causes the DMB instruction to be decoded and executed like a DSB. Using this software workaround is not expected to have any impact on the overall performance of the processor on a typical code base. - Inserting a nonconditional Load or Store instruction in the loop between each DMB - Inserting additional instructions in the loop, such as NOPs, to prevent the processor from seeing back-to-back DMB instructions. - Making the processor executing the short loop take regular interrupts. 	ERR007006 ARM/MP:794072-- Short loop including a DMB instruction might cause a denial of service 	 A processor which continuously executes a short loop containing a DMB instruction might prevent a CP15 operation broadcast by another processor from making further progress, thus causing a denial of service. The erratum requires the following conditions: â¢ Two or more processors are working in SMP mode (ACTLR.SMP=1) â¢ One of the processors continuously executes a short loop containing at least one DMB instruction. â¢ Another processor executes a CP15 maintenance operation that is broadcast. This requires that this processor has enabled the broadcasting of CP15 operations (ACTLR.FW=1) For the erratum to occur, the short loop containing the DMB instruction must meet all of the following additional conditions: â¢ No more than 10 instructions other than the DMB are executed between each DMB â¢ No nonconditional Load or Store, or conditional Load or Store which pass the condition code check, are executed between each DMB When all the conditions for the erratum are met, the short loop creates a continuous stream of DMB instructions. This might cause a denial of service, by preventing the processor executing the short loop from executing the received broadcast CP15 operation. As a result, the processor that originally executed the broadcast CP15 operation is stalled until the execution of the loop is interrupted. Note that because the process issuing the CP15 broadcast operation cannot complete operation, it cannot enter any debug mode, and cannot take any interrupt. If the processor executing the short loop also cannot be interruptedâfor example if it has disabled its interruptsâor if no interrupts are routed to this processor, this erratum might cause a system livelock. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not needed in the BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The BSP has the MMU enabled when it performs BTAC flush in LPM entry. When kernel is running, the MMU is kept enabled until DSM is entered and ARM core power is gated		 The recommended workaround is to invalidate all entries in the BTAC, by executing a BPIALL operation (invalidate entire branch prediction array) followed by a DSB, before disabling the MMU. Another possible workaround is to disable branch prediction when disabling the MMU, and keep branch prediction disabled until the MMU is re-enabled. 	ERR007007 ARM/MP: 794073 -- Speculative instruction fetches with MMU disabled might not comply with architectural requirements 	 When the MMU is disabled, the ARM processor must follow some architectural rules regarding speculative fetches and the addresses to which these can be initiated. These rules avoid potential read accesses to read-sensitive areas. For more information about these rules, see the description of âBehavior of instruction fetches when all associated MMUs are disabledâ in the ARM Architecture Reference Manual, ARMv7-A and ARMv7-R edition. A Cortex-A9 processor usually operates with both the MMU and branch prediction enabled. If the processor operates in this condition for any significant amount of time, the BTAC (branch target address cache) will contain branch predictions. If the MMU is then disabled, but branch prediction remains enabled, these stale BTAC entries can cause the processor to violate the rules for speculative fetches. The erratum can occur only if the following sequence of conditions is met: 1. MMU and branch prediction are enabled. 2. Branches are executed. 3. MMU is disabled, and branch prediction remains enabled. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. Users should confirm if the conditions apply in their specific OS and apply the ARM recommended workaround if necessary		 There are several possible workarounds: 1. Add a DMB after clearing a communication variable: STR r0, [r1] ; clear the communication variable DMB ; ensure the previous STR is complete Also, any IRQ or FIQ handler must execute a DMB at the start to ensure the clearing of any communication variable is complete. 2. Ensure there is no other data using the same naturally aligned 64-bit memory location as the communication variable: ALIGN 64 communication_variable DCD 0 unused_data DCD 0 LDR r1,= communication_variable 3. Use a Store-Exclusive to clear the communication variable, rather than a non-Exclusive store. 	ARM/MP: 794074 --A write request to Uncacheable Shareable memory region might be executed twice 	 Under certain timing circumstances specific to the Cortex-A9 microarchitecture, a write request to an Uncacheable, Shareable, Normal memory region might be executed twice, causing the write request to be sent twice on the AXI bus. This might happen when the write request is followed by another write into the same naturally aligned doubleword memory region, without a DMB between the two writes. The repetition of the write usually has no impact on the overall behavior of the system, unless the repeated write is used for synchronization purposes. The erratum requires the following conditions: â¢ A write request is performed to an Uncacheable, Shareable, Normal memory region. â¢ Another write request is performed into the same naturally doubleword-aligned memory region. This second write request must not be performed to the exact same bytes as the first store. A write request to Normal memory region is treated as Uncacheable in the following cases: 1. The write request occurs while the data cache is disabled. 2. The write request is targeting a memory region marked as Normal Memory Non-Cacheable or Cacheable Write-Through. 3. The write request is targeting a memory region marked as Normal Memory Cacheable Write-Back and Shareable, and the CPU is in AMP mode. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase starting in release imx_3.14.38_6qp_ga		 This erratum can be worked round by setting bit[22] of the undocumented Diagnostic Control Register to 1. This register is encoded as CP15 c15 0 c0 1. The bit can be written in Secure state only, with the following Read/Modify/Write code sequence: MRC p15,0,rt,c15,c0,1 ORR rt,rt,#0x00400000 MCR p15,0,rt,c15,c0,1 When this bit is set, the processor is unable to switch into Read-Allocate (streaming) mode, which means this erratum cannot occur. Setting this bit could possibly result in a visible drop in performance for routines that perform intensive memory accesses, such as memset() or memcpy(). However, the workaround is not expected to create any significant performance degradation in most standard applications. 	ARM (CA9): 845369 â Under very rare timing circumstances, transition into streaming mode might create a data corruption 	 Under very rare timing circumstances, a data corruption might occur on a dirty cache line that is evicted from the L1 Data Cache due to another cache line being entirely written. The erratum requires the following conditions: â¢ The CPU contains a dirty line in its data cache. â¢ The CPU performs at least four full cache line writes, one of which is causing the eviction of the dirty line. â¢ Another CPU, or the ACP, is performing a read or write operation on the dirty line. The defect requires very rare timing conditions to reach the point of failure. These timing conditions depend on the CPU micro-architecture, and are not controllable in software: â¢ The CPU must be in a transitional mode that might be triggered by the detection of the first two full cache line writes. â¢ The evicted line must remain stalled in the eviction buffer, which is likely to be caused by a congested write traffic. â¢ The other coherent agent, either another CPU in the cluster or the ACP, must perform its coherency request on the evicted line while it is in the eviction buffer. This erratum only occurs when two or more processors are enabled. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase starting in release imx_3.10.53_1.1.0_ga		 This erratum can be worked around by setting bit[21] of the undocumented Diagnostic Control Register to 1. This register is encoded as CP15 c15 0 c0 1. The bit can be written in Secure state only, with the following Read/Modify/Write code sequence: MRC p15,0,rt,c15,c0,1 ORR rt,rt,#0x200000 When this bit is set, the âdirect evictionâ optimization in the Bus Interface Unit is disabled, which means this erratum cannot occur. Setting this bit might prevent the Cortex-A9 from utilizing the full bandwidth when performing intensive full cache line writes, and therefore a slight performance drop might be visible. In addition, this erratum cannot occur if at least one of the following bits in the Diagnostic Control Register is set to 1: - bit [23] â Disable Read-Allocate mode - bit [22] â Disable Write Allocate Wait mode 	ARM (CA9): 761320âFull cache line writes to the same memory region from at least two processors might deadlock the processor 	 Under very rare circumstances, full cache line writes from (at least) 2 processors on cache lines in hazard with other requests may cause arbitration issues in the SCU, leading to processor deadlock. To trigger the erratum, at least three agents need to be working in SMP mode, and accessing coherent memory regions. Two or more processors need to perform full cache line writes, to cache lines which are in hazard with other access requests in the SCU. The hazard in the SCU happens when another processor, or the ACP, is performing a read or a write of the same cache line. The following example describes one scenario that might cause this deadlock: - CPU0 performs a full cache line write to address A, then a full cache line write to address B - CPU1 performs a full cache line write to address B, then a full cache line write to address A - CPU2 performs read accesses to addresses A and B Under certain rare timing circumstances, the requests might create a loop of dependencies, causing a processor deadlock. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not implemented because this erratum will never be encountered in normal device operation.The Freescale Linux BSP does not support this optional profiling feature		 There is no workaround for this erratum. The Freescale Linux BSP does not enable this optional profiling feature by default. Users may add support for this profiling feature as required, but should ensure the multiple ARM errata impacting the ARM PMU are considered. 	"ARM: 795769 - âWrite Context ID"" event is updated on read access "	 When selected, the Write Context ID event (event 0x0B) of the Performance Monitoring Unit (PMU) increments a counter whenever an instruction that writes to the Context ID register, CONTEXTIDR, is architecturally executed. However this erratum means that an instruction that reads the Context ID register also updates this counter. The erratum can happen under the following conditions: 1. A PMU counter is enabled, by setting the PMCNTENSET.Px bit to 1 (x identifies a single event counter, and takes a value from 0 to 7). 2. The âWrite Context IDâ event is mapped to this selected PMU counter: a. The chosen PMU counter is selected, by setting PMSELR.SEL to x (the same value as in condition 1). b. The âWrite Context IDâ event is mapped to this selected PMU, by setting PMXEVTYPER.evtCount to 0x0B. 3. The PMU is enabled, by setting the PMCR.E bit to 1. 4. A read access occurs to the CONTEXTIDR. In this situation the PMU updates the counter when it should not. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not implemented because this erratum will never be encountered in normal device operation, as this erratum is related to a debug feature		 No software workaround available as this erratum is related to a debug feature. Users should not rely on the DBGPRSR.SR bit during the debug session. 	ERR009743 ARM: 799770 - DBGPRSR Sticky Reset status bit is set to 1 by the CPU debug reset instead of by the CPU non-debug reset 	 DBGPRSR.SR, bit [3], is the Sticky Reset status bit. The ARM architecture specifies that the processor sets this bit to 1 when the non-debug logic of the processor is in reset state. Because of this erratum, the Cortex-A9 processor sets this bit to 1 when the debug logic of the processor is in reset state, instead of when the non-debug logic of the processor is in reset state. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used.The Freescale Linux BSP does not enable this Parity feature and is disabled by default in all BSP releases. The BSP also ignores any assertion on the PARITYFAIL [7:6] bits by masking the ARM-GIC parity interrupt 125. Please note that the i.MX6 does not support the parity feature (disabled by default) and hence should not be enabled by users		 The following software workarounds can be used to avoid this erratum: 1) Disable parity by setting bit [21] of the Auxiliary Control Register to 0 (this is the default condition). 2) Program the read access latency of the Data RAM to the minimum value acceptable for the implementation plus one (bits [6:4] of the Data RAM Latency Control Register). Note that this workaround can affect performance. 	ARM/PL310: 796171 When data banking is implemented, data parity errors can be incorrectly generated 	 When parity is implemented and enabled in the PL310 Level-2 Cache Controller, for each read from the Data RAM, parity of the read data DATARD[255:0] is compared with stored parity bits in dedicated RAMs present on DATAPRD[31:0]. If the comparison does not match, the error is reported using an interrupt mechanism consisting of dedicated registers (Raw and Masked Interrupt registers). This erratum occurs when the following conditions exist: 1) Parity is enabled (bit[21] of the Auxiliary Control Register is set to 1) 2) Read access latency on Data RAM is programmed with a value > 0x0 (bits [6:4] of the Data RAM Latency Register) When the conditions above are met, parity checking between DATARD and DATAPRD occurs during a two cycle window, including one cycle earlier than expected. If, in the early cycle, DATARD and DATAPRD are not stable yet, parity comparison might fail. In this case, an error is reported by the Interrupt registers, where no actual error exists. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 Software should check the EXPORT_CONTROL fuse in OCOTP to determine if the crypto accelerators are available or not instead of reading the CAAM CHANUM register. 	ERR004320 CAAM: Three encryption functions may show up as available, even though they are not 	 In the CAAM block, the availability of the AES, DES and RC4 crypto accelerators are controlled by the EXPORT_CONTROL fuse. If this fuse is blown these crypto accelerators are not available. There is also a CAAM CHANUM register (AES is bits [3:0], DES is bits [7:4] and RC4 is bits [11:8]) that shows the number of crypto accelerators available for each type of crypto operation. When this fuse is blown, this register should show that there are 0 of each encryption accelerator. However, it actually shows that 1 is available. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 The software workaround for this erratum is to clear the error code after the blob is decapsulated by reading the status register and ignoring its contents. 	CAAM: False read access error 	 CAAM secure memory has settable access permissions. One setting is to create a protected key partition, which can be accessed by CAAM to read a key, but that cannot be read or written by any other hosts. The purpose is to provide a place to store secret keys that cannot be compromised by any software. In order to store a key into such a partition, which does not allow a write access to occur, there is an access bit labeled SMBLOB (Secure Memory Blob), which allows CAAM to write data to the partition from a decapsulated blob, or to read the data from the partition in order to package it into a blob. The issue found is that CAAM logs a read access error into a status register when it decapsulates a blob and writes the contents to the protected key partition. This logging of the read access error into a status register does not appear to have any other affect. It does not prevent the blob contents from being correctly written to the protected key partition. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 The Internal 16 Kb RAM accesses (CAAM) should not be cached. Users should ensure that the MMU table does not have this 16 Kb region mapped as cacheable memory region to prevent incorrect accesses. 	ERR004348 CAAM: Internal 16 Kb RAM (CAAM) does not support wrapped accesses 	 The internal 16 Kb RAM (CAAM - Secure memory) does not support wrapped accesses. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not needed in the BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 There are two workarounds for this issue. They both prevent CAAM from issuing multiple AXI read transactions with different AXI-IDs. The workarounds are as follows: â¢ Workaround 1: The first workaround is to only issue a single descriptor to CAAM at a time. CAAM will not pre-fetch a second descriptor, as there is no second descriptor. HAB uses this approach. HAB in i.MX 6 Series only issues one descriptor at a time. â¢ Workaround 2: The second workaround is for cases where multiple descriptors will be issued to CAAM, (for example, a Linux device driver). In this case, CAAM can be configured to only issue one AXI transaction at a time by setting the CAAM AXI pipeline depth to 1. This will prevent multiple outstanding transactions, and thus multiple transactions with different AXI-IDs. This is done by setting the AXIPIPE field of the CAAM Master Configuration Register (MCFGR) to 1. The workaround seems to have minimal impact on the performance. 	CAAM: CAAM cannot handle interleaved READ data âbeatsâ returned by two different slaves in the system, in reply to two different AXI-ID accesses 	 The CAAM can issue several transactions with different AXI-IDs but its AXI master port does not handle interleaved data properly. The faulty behavior is expected to occur when working in DDR interleaving mode. For example, one access with ID X is directed to DDR0, while almost simultaneously, another access with different AXI-ID is passed to the second DDR controller. This way the data âbeatsâ of the two AXI-IDs may be replied interleaved. CAAM has two sources of transactionsâfirst, the Job Queue controller, which fetches jobs and prepares descriptors to be run, and second, the DECO, which executes the descriptors. With a single DECO, there are less chances of the Job Queue controller and DECO to overlap while performing AXI read requests. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase starting in release GA L3.0.35_1.1.0		 Use REG_BYPASS_COUNTER (RBC) to hold off interrupts when the PGC unit is in the middle of the power-down sequence. The counter needs to be set/cleared only when there are no interrupts pending. The counter needs to be enabled as close to the WFI (Wait For Interrupt) state as possible. The following equation can be used to aid determination of the RBC counter value: RBC_COUNT Ã (1/32K RTC Frequency) â¥ (25 + PDNSCR_SW2ISO) Ã (1/IPG_CLK Frequency) PDNSCR_ISO2SW = PDNSCR_ISO = 1 (counts in IPG_CLK clock domain) 	ERR006223 CCM: Failure to resume from Wait/Stop mode with power gating 	 When entering Wait/Stop mode with power gating of the ARM core(s), if an interrupt arrives during the power-down sequence, the system could enter an unexpected state and fail to resume. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase. A patch is included in both BSP kernels v3.10.9 and v3.0.35		 Software workaround: 1) Software should trigger IRQ #32 (IOMUX) to be always pending by setting IOMUX_GPR1_GINT 2) Software should then unmask IRQ #32 in GPC before setting CCM Low-Power mode 3) Software should mask IRQ #32 right after CCM Low-Power mode is set (set bits 0â1 of CCM_CLPCR) 	CCM: When improper low-power sequence is used, the SoC enters low power mode before the ARM core executes WFI 	 When software tries to enter Low-Power mode with the following sequence, the SoC enters Low-Power mode before the ARM core executes the WFI instruction: 1. Set CCM_CLPCR[1:0] to 2âb00 2. ARM core enters WFI 3. ARM core wakeup from an interrupt event, which is masked by GPC or not visible to GPC, such as an interrupt from a local timer 4. Set CCM_CLPCR[1:0] to 2âb01 or 2âb10 5. ARM core executes WFI Before the last step, the SoC enters WAIT mode if CCM_CLPCR[1:0] is set to 2âb01, or STOP mode if CCM_CLPCR[1:0] is set to 2âb10. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 The input and output clocks to the asynchronous clock multiplexer are required to be gated prior to switching the source clock. The recommended software workaround is to shut down the clocks to the asynchronous clock multiplexor (CS2CDR: LDB_DIx_CLK_SEL) by disabling the respective PLLs and PFDs prior to performing the clock switch. After the clock switch is performed the input and output clocks of the multiplexer are re-enabled. Users must ensure that the PFDs are reset after the respective PLLs are locked. It is recommended to perform the LDB clock switch early in the boot process to minimize the clocking impact. Please refer to Engineering Bulletin EB821 : LDB Clock Switch Procedure and i.MX6 Asynchronous Clock Switching Guidelines for further details on the issue and recommended software workaround procedure. No fix scheduled Linux BSP Status: Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0	ERR009219 CCM: Asynchronous clock switching can cause unpredictable behavior [i.MX 6Dual/6Quad Only] 	 Certain applications require the source clock of the LVDS Display Bridge (LDB) to be modified to accommodate various display clock frequency requirements. The clock source can be modified by programming an asynchronous clock multiplexer (CCM_CS2CDR[LDB_DIx_CLK_SEL]) in software. Asynchronous multiplexers or glitchy multiplexers, enable the clock to switch immediately after the multiplexer select is changed. Because both clock sources to the multiplexer are asynchronous, switching the clocks from one source to the other can cause a glitch to be generated, regardless of the input clock source. This immediate switch of two asynchronous clock domains can cause the output clock to glitch. If the input and output clocks are not gated, this clock glitch can propagate to the logic that follows the clock multiplexer, causing the logic to behave unpredictably. A clock gate has not been implemented after the asynchronous clock multiplexer for the LDB_DI0_IPU clock and LDB_DI1_IPU clocks. Due to the absence of this clock gate on this LDB_DIx_IPU clock path, a glitch generated when the clock source is switched, can lock up the LDB divider causing a loss of the LDB_DIx_IPU clock under certain conditions. 		Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.14.38_6qp_ga		 This errata is only seen when the SMC (Start Mode Control) bit is set. A modified SDMA script with TX_THRESHOLD = 0 and using only the XCH (SPI Exchange) bit to initiate transfers prevents this errata from occurring. There is an associated performance impact with this workaround. Testing transfers to a SPI-NOR flash showed approximately a 5% drop in write data rates and a 25% drop in read data rates. 	ERR009165 eCSPI: TXFIFO empty flag glitch can cause the current FIFO transfer to be sent twice 	 When using DMA to transfer data to the TXFIFO, if the data is written to the TXFIFO during an active eCSPI data exchange, this can cause a glitch in the TXFIFO empty signal, resulting in the TXFIFO read pointer (TXCNT) not updating correctly, which in turn results in the current transfer getting resent a second time. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 There is no workaround except for not using the SS_CTL[x] = 1 option in the Slave mode. The accurate burst length should always be specified using the BURST_LENGTH parameter. 	eCSPI: Burst completion by SS signal in slave mode is not functional 	 According to the eCSPI specifications, when eCSPI is set to operate in the Slave mode (CHANNEL_MODE[x] = 0), the SS_CTL[x] bit controls the behavior of burst completion. In the Slave mode, the SS_CTL bit should control the behavior of SPI burst completion as follows: â¢ 0âSPI burst completed when (BURST_LENGTH + 1) bits are received â¢ 1âSPI burst completed when the SS input is negated Also, in BURST_LENGTH definition, it is stated âIn the Slave mode, this field takes effect in SPI transfer only when SS_CTL is cleared.â However, the mode SS_CTL[x] = 1 is not functional in Slave mode. Currently, BURST_LENGTH always defines the burst length. According to the SPI protocol, negation of SSB always causes completion of the burst. However, due to the above issue, the data is not sampled correctly in RxFIFO when {BURST_LENGTH+1}mod32 is not equal to {actual burst length}mod32. Therefore, setting the BURST_LENGTH parameter to a value greater than the actual burst does not resolve the issue. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The driver limits the burst length up to 32 bits		 Do not use burst lengths of 32n+1 (where n=0,1, 2,â¦). 	ERR009606 eCSPI: In master mode, burst lengths of 32n+1 will transmit incorrect data 	 When the ECSPI is configured in master mode and the burst length is configured to a value 32n+1 (where n=0,1, 2,â¦), the ECSPI will transmit the portions of the first word in the FIFO twice. For example, if the transmit FIFO is loaded with: [0] 0x00000001 [1] 0xAAAAAAAA And the burst length is configured for 33 bits (ECSPIx_CONREG[BURST_LENGTH]=0x020), the ECSPI will transmit the first bit of word [0] followed by the entire word [0], then transmit the data as expected. The transmitted sequence in this example will be: [0] 0x00000001 [1] 0x00000001 [2] 0x00000000 [3] 0xAAAAAAAA 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 â¢ Use the AUS = 0 mode (default) while connecting the address signals without a shift (for example, A0âA0 and A1âA1). â¢ For AUS=1, for devices larger than 32 MB, it is necessary to build a memory map that takes this shifting into consideration and does not include A[24] line. 	EIM: AUS mode is nonfunctional for devices larger than 32 MB 	 When the AUS bit is set, the address lines of the EIM are unshifted. By default, the AUS bit is cleared and address lines are shifted according to port size (8, 16 or 32 bits). Due to an error, the address bits 27:24 are shifted when AUS=1. For example, CPU address 0xBD00_0000 ([A27:20]=1101 0000 becomes 0xB600_0000 ([A27:20]=0110 0000) on the EIM bus, because A[27:25] is shifted to [A26:24] and A[23:0] is not shifted. As a result A[24] is missed. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not implemented because this erratum will never be encountered in normal device operation		 Because the signals listed above cannot be driven as outputs, interconnect tests on these signals can only be performed if the external devices connected to these pins can drive them as inputs. The boundary scan test generation tool should be configured to test these signals as input-only, if possible. Test of any of the signals that cannot be driven by an external device should be disabled in the boundary scan test generation tool to prevent generation of an incorrect test pattern. 	ERR009218 EIM: Signals fail to drive as outputs during boundary scan test 	 During boundary scan test, a subset of the EIM signals will not be driven as outputs causing the test to fail. The affected signals are: EIM_A[24:16], EIM_DA[15:0], EIM_EB[3:0], EIM_RW, EIM_WAIT and EIM_LBA. This group of signals is incorrectly configured with a drive strength value (DSE) of 3âb000, which causes the signals to be Hi-Z. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 There is no workaround for the throughput limitation. To prevent overrun of the ENET RX FIFO, enable pause frame. 	ENET: 1 Gb Ethernet MAC (ENET) system limitation 	 The theoretical maximum performance of 1 Gbps ENET is limited to 470 Mbps (total for Tx and Rx). The actual measured performance in an optimized environment is up to 400 Mbps. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 The application might want to implement some flow control to ensure the line-rate burst traffic is below 400 Mbps if it only uses consecutive small frames with minimal (96 bit times) or short Inter-frame gap (IFG) time following large frames at such a high rate. The limit does not exist for frames of size larger than 800 bytes. 	ERR005783 ENET: ENET Status FIFO may overflow due to consecutive short frames 	 When the MAC receives shorter frames (size 64 bytes) at a rate exceeding the average line-rate burst traffic of 400 Mbps the DMA is able to absorb, the receiver might drop incoming frames before a Pause frame is issued. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround cannot be implemented to mask this SoC issue, impacting functionality as described above		 None. Channels 1, 3, and 4 can be used for the event capture instead. 	ENET: ENET 1588 channel 2 event capture mode not functional 	 The ENET module provides a 4-channel IEEE 1588 compliant timer that supports event input capture and output compare mode. The capture/compare feature requires the ENET 1588 clock to latch in the correct IEEE 1588 counter value to the Timer Compare Capture Register (ENET_TCCRn). Due to an integration issue, the ENET 1588 clock and Channel 2 event capture/compare signal are both connected to the same GPIO16 pin. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase starting in release L3.0.35_4.0.		 Code can use the transmit frame interrupt flag (ENET_EIR[TXF]) as a method to detect whether the ENET has completed transmission and the ENET_TDAR[TDAR] has been cleared. If ENET_TDAR[TDAR] is detected as cleared when packets are queued and waiting for transmit, then a write to the TDAR bit will restart TxBD processing. 	ERR006358 ENET: Write to Transmit Descriptor Active Register (ENET_TDAR) is ignored 	 If the ready bit in the transmit buffer descriptor (TxBD[R]) is previously detected as not set during a prior frame transmission, then the ENET_TDAR[TDAR] bit is cleared at a later time, even if additional TxBDs were added to the ring and the ENET_TDAR[TDAR] bit is set. This results in frames not being transmitted until there is a 0-to-1 transition on ENET_TDAR[TDAR]. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase starting in release L3.0.35_4.0.		 All of the interrupts can be selected by MUX and output to pad GPIO6. If GPIO6 is selected to output ENET interrupts and GPIO6 SION is set, the resulting GPIO interrupt will wake the system from Wait mode. 	ENET: Only the ENET wake-up interrupt request can wake the system from Wait mode [i.MX 6Dual/6Quad Only] 	 The ENET block generates many interrupts. Only one of these interrupt lines is connected to the General Power Controller (GPC) block, but a logical OR of all of the ENET interrupts is connected to the General Interrupt Controller (GIC). When the system enters Wait mode, a normal RX Done or TX Done does not wake up the system because the GPC cannot see this interrupt. This impacts performance of the ENET block because its interrupts are serviced only when the chip exits Wait mode due to an interrupt from some other wake-up source. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround cannot be implemented to mask this SoC issue, impacting functionality as described above		 Underrun/overrun in the ESAI should be prevented at the system level. If channel swap occurs, the ESAI must be reset according to the reset procedure documented in the reference manual. 	ERR008000 ESAI: ESAI may encounter channel swap when overrun/underrun occurs 	 While using ESAI transmit or receive and an underrun/overrun happens, channel swap may occur. The only recovery mechanism is to reset the ESAI. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround cannot be implemented to mask this SoC issue, impacting functionality as described above		 Use DDR or OCRAM memories when performing exclusive accesses. 	EXSC: Exclusive accesses to certain memories are not supported to full AXI specification 	 Any exclusive operation to PSRAM or other RAM typeâs connected to the EIM returns an incorrect response of âEXOKAYâ, indicating that exclusive writes are always successful. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The BSP does not use CSU		 To prevent unpredictable behavior, prior to accessing the EIM region, set all bits in the EIM CSU_CSL field to 1 so that all accesses are allowed. Specifically: EIM: CSU_CSL31[23:16] = 0xff 	ERR005828 EXSC: Protecting the EIM memory map region causes unpredictable behavior 	 If a write access to the EIM address region is denied due to the CSU access control policy, then, all subsequent write accesses to the EIM region will write unintended data. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		" To transmit a CAN frame, the CPU must prepare a message buffer for transmission by executing the following standard 5-step procedure: 1. Check if the respective interrupt bit is set and clear it. 2. If the message buffer is active (transmission pending), write the ABORT code (0b1001) to the CODE field of the Control/Status word to request an abortion of the transmission. Wait for the corresponding IFLAG to be asserted by polling the IFLAG register or by the interrupt request if enabled by the respective IMASK. Then read back the CODE field to check if the transmission was aborted or transmitted. If backwards compatibility is desired (MCR[AEN] bit negated), just write the INACTIVE code (0b1000) to the CODE field to inactivate the message buffer, but then the pending frame might be transmitted without notification. 3. Write the ID word. 4. Write the data bytes. 5. Write the DLC, Control and CODE fields of the Control/Status word to activate the message buffer. 6. The workaround consists of executing two extra steps: 7. Reserve the first valid mailbox as an inactive mailbox (CODE=0b1000). If RX FIFO is disabled, this mailbox must be message buffer 0. Otherwise, the first valid mailbox can be found using the ""RX FIFO filters"" table in the FlexCAN chapter of the chip reference manual. 8. Write twice INACTIVE code (0b1000) into the first valid mailbox. NOTE The first mailbox cannot be used for reception or transmission process. "	FlexCAN: FlexCAN does not transmit a message that is enabled to be transmitted in a specific moment during the arbitration process 	 FlexCAN does not transmit a message that is enabled to be transmitted in a specific moment during the arbitration process. The following conditions are necessary for the issue to occur: â¢ Only one message buffer is configured to be transmitted â¢ The write which enables the message buffer to be transmitted (write on Control/Status word) happens during a specific clock during the arbitration process. â¢ After this arbitration process occurs, the bus goes to the Idle state and no new message is received on the bus. For example: 1. Message buffer 13 is deactivated on RxIntermission (write 0x0 to the CODE field from the Control/Status word) [First write to CODE] 2. Reconfigure the ID and data fields 3. Enable the message buffer 13 to be transmitted on BusIdle (write 0xC on CODE field) [Second write to CODE] 4. CAN bus keeps in Idle state 5. No write on the Control/Status from any message buffer happens. During the second write to CODE (step 3), the write must happen one clock before the current message buffer 13 to be scanned by arbitration process. In this case, it does not detect the new code (0xC) and no new arbitration is scheduled. The problem can be detected only if the message traffic ceases and the CAN bus enters into Idle state after the described sequence of events. There is no issue if any of the conditions below holds: â¢ Any message buffer (either Tx or Rx) is reconfigured (by writing to its CS field) just after the Intermission field. â¢ There are other configured message buffers to be transmitted â¢ A new incoming message sent by any external node starts just after the Intermission field. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround cannot be implemented to mask this SoC issue, impacting functionality as described above		 None 	GPMI: GPMI does not support the Set Feature command in Toggle mode 	 The NANDF_DQS output is only enabled in program operation for Toggle mode, but the Set Feature command also needs to use the NANDF_DQS signal to write data to the Toggle NAND flash. So the Set Feature command in Toggle mode is not supported. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not implemented because this erratum will never be encountered in normal device operation		 GPU2D should not be mistakenly accessed by software when power-gated. 	ERR004341 GPU2D: Accessing GPU2D when it is power-gated will cause a deadlock in the system 	 Accessing GPU2D when it is power-gated will cause a deadlock in the system. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 There are no software workarounds that completely resolve the issue. The filter blit API can be used instead of the stretch blit for BLIT acceleration; however, there will be a performance impact and might not be suitable for all applications. The issue is not observed when the stretch blit for BLIT acceleration is not used. 	GPU2D: Image quality degradation observed for stretch blits when the stretch factor is exactly an integer [i.MX 6Dual/6Quad Only] 	 GPU2D supports BLIT acceleration by using the Graphics Device Interface (GDI) API. When using the stretch blit GDI API, if the stretch factor is exactly an integer, the resulting image has rendering errors. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Tune applications to access L1 cache and memory requests at 16 byte boundaries to prevent this issue (slight performance impact). 	ERR004300 GPU3D: L1 cache performance drop [i.MX 6Dual/6Quad Only] 	 The GPU3D L1 cache assumes that all memory requests are 16 bytes. If a request is 16 bytes, there are no issues since the data boundary lines up evenly. If a request is not aligned to 16 bytes, the memory controller will split those unaligned requests into two requests, doubling the number of requests processed internally in L1 cache. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 None 	GPU3D: L1 cache âWrite Address Dataâ pairing error [i.MX 6Dual/6Quad Only] 	 This issue causes a data alignment error under the following two corner case conditions: â¢ The last 16 bytes of the cache line are being sent to the memory controller when it is not ready â¢ The memory controllerâs âReadyâ signal is asserted for one cycle. It then reads 8 bytes of data and then the âReadyâ signal becomes de-asserted again. In the design, the memory controller uses the address of the last 8 bytes as the address of the entire cache line. When either of these conditions happens, the last 8 bytes of data are paired with the address of the subsequent cache line, and the entire cache line gets written to the wrong location. The likelihood of hitting this corner case is significantly reduced if the GPU3D core and shader clocks run at the same frequency. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 No workaround at this time. 	ERR005216 GPU3D: Black texels in Android App Singularity 3D [i.MX 6Dual/6Quad Only] 	 Texture attributes might be incorrectly reported by the Setup Engine, when the maximum X and/or Y vertex is very large (X or Y vertex greater than 8 million pixels), and consequently the Texture Engine might sample black texels. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Poll IH_AHBDMAAUD_STAT0 bit 2 to check when DMA transaction is complete 	HDMI: 9000446457âAudio DMA does not generate an interrupt after software stops DMA transaction 	 An intdone interrupt must be generated by the AHB Audio DMA when a DMA stop is requested and a series of AHB transfers is in progress in the AHB bus. Here, AHB Audio DMA does not generate an interrupt (intdone=1, register AHB_DMA_INT) after software forces the DMA to stop (stop_dma_transaction, register AHB_DMA_STOP) between individual AMBA AHB DMA transfers. For instance, assume that the AHB DMA has performed a series of AHB BUS transfers and its internal FIFO is full. The AHB DMA starts requesting more AHB BUS transfers only when the FIFO threshold is reached. In this time period, from the time when the FIFO is full to the time when AHB DMA starts requesting more transfers, any DMA stop request from software is not registered, and the AHB Audio DMA does not generate the intdone bit interrupt, although it stops requesting transactions. Conditions: â¢ Setup the system memory with low bandwidth audio (audio sampling rate: 32 kHz, two active channels) â¢ Configure the AHB Audio DMA with a data buffer larger than twice the configured FIFO size â¢ Start an Audio DMA transfer â¢ Wait for the AHB audio DMA to get bus access and to fill its internal FIFO â¢ Set stop_dma_transaction bit field (AHB_DMA_STOP register) 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 For 2 channels and the whole range of sample rates supported (from 32k to 192k), the workaround consists of setting a threshold of 126 and using unspecified INCR instruction only (other types of INCR forbidden). For multi channel (4, 6, or 8 channels) and the whole range of sample rates supported (from 32k to 192k), the workaround consists in setting a threshold of 126 and using INCR4 instructions only (other types of INCR forbidden). The threshold mentioned above is programmed in the register AHB_DMA_THRSLD 0x00123603 bit[7:0]. The register of INCR type is AHB_DMA_CONF0 0x00123600, with bit 0 cleared (â0â) and with the bits 2:1 determining the INCR type. 	ERR003745 HDMI: 9000440660âAudio DMA fails to stop after ERROR detection 	 When AHB audio DMA Master uses incrementing bursts of unspecified lengths (INCR) and receives an ERROR response in idmahresp[1:0], it does not stop the AHB operation and continues to request data from the AHB BUS until a software forces a stop condition through the AHB_DMA_STOP register. Internally, these requested samples are not forwarded to the AHB Audio DMA Master FIFO, as a consequence an FIFO empty condition is created. This stops the audio samples in the HDMI link. Conditions: â¢ Setup the system memory with audio samples â¢ Start an Audio DMA transfer with incrementing burst of unspecified length (INCR) and all channels enabled (channel allocation = 0xFF) â¢ Force the Slave to send an ERROR in idmahresp[1:0] 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 Solution is, after all controller configuration has been done, write three-four times the same value to any of the above registers (say FC_INVIDCONF with the correct same value three-four times), and then perform soft reset to clock domains. 	HDMI: 8000504668âThe arithmetic unit may get wrong video timing values although the FC_* registers hold correct values 	 Each time one writes to some FC registers, and depending on the clock relation of sfr clk and tmds clk, some of these train of pulses (when these registers are configured in sequence), might not be caught by the arithmetic unit while it is busy processing/updating the first ones, so, it gets wrong video timing values, although the registers FC_* hold correct values. Even a soft reset will not make the arithmetic unit update correctly. Video will still pass correctly to the HDMI, but packets would not because the frame composer is holding internally incorrect video timing and this will quickly build up and overflow the packet FIFOs. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0. Software workaround has been implemented with HDMI audio driver enabled		 The Configuration should obey the following limitation: AHB_DMA_STPADDRX - AHB_DMA_STRADDRX < 8 KB. 	ERR004323 HDMI: The DMA burst read transaction address region is limited to 8 KB 	 The initial DMA burst read transaction address is set using the AHB_DMA_STRADDR0-3 registers. The final DMA burst read transaction address is set using the AHB_DMA_STPADDR0-3 registers. If (AHB_DMA_STPADDRX - AHB_DMA_STRADDRX > 8K), then HDMI will not generate the AHB audio DMA done interrupt. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 For 2 channels and the whole range of sample rates supported (from 32k to 192k), the workaround consists of setting a threshold of 126 and using unspecified INCR instruction only (other types of INCR forbidden). For multi channel (4, 6, or 8 channels) and the whole range of sample rates supported (from 32k to 192k), the workaround consists in setting a threshold of 126 and using INCR4 instructions only (other types of INCR forbidden). The threshold mentioned above is programmed in the register AHB_DMA_THRSLD 0x00123603 bit[7:0]. The register of INCR type is AHB_DMA_CONF0 0x00123600, with bit 0 cleared (â0â) and with the bits 2:1 determining the INCR type. 	HDMI: HDMI Tx audio may have noise due to audio DMA FIFO overflow 	 Due to an issue related to the synchronization between the clock domains to which the HDMI Tx FIFO belongs, incorrect fetches of data from the external memory might be generated for filling up this FIFO, possibly causing its overflow. Workarounds: For 2 channels and the whole range of sample rates supported (from 32k to 192k), the workaround consists of setting a threshold of 126 and using unspecified INCR instruction only (other types of INCR forbidden). For multi channel (4, 6, or 8 channels) and the whole range of sample rates supported (from 32k to 192k), the workaround consists in setting a threshold of 126 and using INCR4 instructions only (other types of INCR forbidden). The threshold mentioned above is programmed in the register AHB_DMA_THRSLD 0x00123603 bit[7:0]. The register of INCR type is AHB_DMA_CONF0 0x00123600, with bit 0 cleared (â0â) and with the bits 2:1 determining the INCR type. Proposed Solution: No fix scheduled Linux BSP Status: Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 To avoid this problem, the software should previously check BCAPS by reading A_HDCPOBS3.FEATURES_1_1 to ensure whether the receiver can support features 1.1 or not. If it does not support, then it should not set A_HDCPCFG0.en11 feature. 	ERR005172 HDMI: Under certain circumstances, the HDCP may transmit incorrect Ainfo value, causing a failure on the receiver side 	 The HDCP specification requires that a feature support search procedure be performed to enable an HDCP link with Features 1.1 active. The HDCP transmitter has to read the HDCP receiver BCAPS to check if it supports Features 1.1, and if this is the case and the HDCP transmitter desires to use Features 1.1, it must enable them on the HDCP receiver by writing 0x02 in the HDCP I2C Ainfo register. It has been found that the HDCP transmitter is using the local configuration register (A_HDCPCFG0.en11 feature bit field register) and sending that data on the Ainfo register, ignoring that the remote HDCP Features 1.1 support has been indicated on the I2S BCAPS register. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0. Software workaround has been implemented with HDMI driver enabled		 The programming flow should be: 1. Program all the controller registers including the frame composer registers. 2. Assert software resets 3. Write (3 or 4 times) in FC_INVIDCONF the final value (this will make sure that the update pulse for the fc_arithlogicunit_div that will update the fc_arithlogicunit_div units is generated) 4. If frame composer packet queue overflow still occurs, then repeat steps 2 and 3 	HDMI: Clarification on HDMI programming procedure to avoid FIFO overflow 	 The tmds reset effect after the frame composer controller registers 0x1000~0x100D setting is that in fc_arithlogicunit the fc_arithlogicunit_div units will be reset: //RSR COMMENT numseqonhtotal = (Htotal - ctrlperiod - LDGB)/(ctrlperiod+ LDGB + dataperiod + TLGB) fc_arithlogicunit_div #(14,5,10) u01_div( .itmdsrstz (itmdsrstz), .itmdsclk (itmdsclk), .idividend (htotalminusctrltotal[13:0]), .idivisor ({3'd0,ctrlplusdata[10:0]} ), .istart (regupdatearithunit[1] ), .oquotient (wi01quotient[4:0] ), .orest (wi01rest[9:0] ), .odone (wi01done ) ); ... ... //RSR COMMENT restofpacketsonhblankwextctrl = (Hblank - extctrlperiod -LDGB - numseqonhblank * (ctrlperiod + LDGB + dataperiod + TLGB) -ctrlperiod - LDGB -TLGB)/32 fc_arithlogicunit_div #(10,5,2) u32_div( .itmdsrstz (itmdsrstz ), .itmdsclk (itmdsclk ), .idividend (wi32dividend[9:0]), .idivisor (10'd32 ), .istart (regi31done ), .oquotient (wi32quotient[4:0]), .orest (/*UNCONNECTED*/ ), .odone (/*UNCONNECTED*/ ) ); //END Division counters******************************************************** The fc_arithlogicunit_div when receive the tmds reset will force theiroutputs to zeros: ... ... //Hold division values********************************************************* always @ (posedge itmdsclk or negedge itmdsrstz) begin if (!itmdsrstz) begin oquotient[(QUOTIENTWIDTH-1):0] <= {QUOTIENTWIDTH{1'b0}}; orest[(RESTWIDTH-1):0] <= {RESTWIDTH{1'b0}}; odone <= 1'b0; end else begin if (wdone) begin oquotient[(QUOTIENTWIDTH-1):0] <=regquotient[(QUOTIENTWIDTH-1):0]; orest[(RESTWIDTH-1):0] <=regdividend[(RESTWIDTH-1):0]; end odone <= wdone; end end//end always hold value So, these units that calculate the remaining periods for the insertion of packets will not have incorrect outputs and will make the frame composer operate incorrectly and cause packet queue overflow. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0. Software workaround has been implemented with HDMI driver enabled		 This procedure assumes that all of the buffers provided to the AHB audio DMA through the AHB_DMA_STRADDR and AHB_DMA_STPADDR registers obey to the rule: (AHB_DMA_STPADDR - AHB_DMA_STRADDR+1) == n x NumberOfChannelEnabled Where n must be an integer. Note that this is only a re-affirmation of a stated usage restriction of AHB audio DMA. The initial ACR packets will contain a null N value but lab tests show that no issues arise from this fact. If for any reason underflow occurs (AHB FIFO empty rises), you must perform the START PROCEDURE. â¢ Initial configuration â Write 8âh00 to ADDR_AUD_N3 â Write 8âh00 to ADDR_AUD_N2 â Write 8âh00 to ADDR_AUD_N1 â Write to ADDR_AUD_CTS3 â Write to ADDR_AUD_CTS3 â Write to ADDR_AUD_CTS2 â Write to ADDR_AUD_CTS1 â¢ START PROCEDURE â Write 8âh00 to ADDR_AUD_N3 â Write 8âh00 to ADDR_AUD_N2 â Write 8âh00 to ADDR_AUD_N1 (starts new DMA operation set the AHB_DMA START bit) â Wait for FIFO full â Program N write to ADDR_AUD_N3 â Write to ADDR_AUD_N2 â Write to ADDR_AUD_N1 	HDMI: HDMI AHB Audio DMA stream misalignment on system initialization 	 When the AHB Audio DMA is started, by setting to 1âb1 for the first time the register field AHB_DMA_START.data_buffer_ready, the AHB Audio DMA will request data from the AHB bus to fill its internal AHB DMA FIFO.It is possible that a AHB DMA FIFO read action occurs during the time window between the first sample stored on the AHB DMA FIFO and when the AHB DMA FIFO has stored, at least, the number of configured audio channels in samples. If this happens, the AHB DMA FIFO will reply with samples that are currently on the AHB Audio FIFO and will repeat the last sample after the empty condition is reached. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0. Software workaround has been implemented with HDMI driver enabled		 For reliable read operations, use the ARM core read command twice targeting the same address, discard the first data read value, and use the second read value. 	HDMI: 9000482480âARM core read operation returns incorrect data for certain HDCP registers 	 When an AHB slave performs a read access operation on the register bank, the data is sampled one SFR clock cycle earlier than required, consequently the data returned may be invalid. The AHB Slave read operation returns incorrect data when SRM/revocation memory read accesses through software registers in the address range 0x00125020 - 0x0012671F. Note this issue only affects the registers associated with HDCP functions. Other HDMI functions are not affected. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used.The BSP configures the I2C frequency to 375 kHz by default		 In order to exactly meet the clock low period requirement at fast speed mode, SCL must be configured to 384 KHz or less. The following clock configuration meets the I2C specification requirements for SCL low for i.MX 6 products: â¢ I2C parent clock PERCLK_ROOT = 24 M OSC â¢ perclk_podf = 1 â¢ PERCLK_ROOT = 24M OSC/perclk_podf = 24 MHz â¢ I2C_IFDR = 0x2A â¢ I2C clock frequency = 24 MHz/64 = 375 kHz 	ERR007805 I2C: When the I2C clock speed is configured for 400 kHz, the SCL low period violates the I2C specification 	 When the I2C module is programmed to operate at the maximum clock speed of 400 kHz (as defined by the I2C spec), the SCL clock low period violates the I2C spec of 1.3 uS min. The user needs to reduce the clock speed to get the SCL low time to meet the 1.3us I2C minimum required. This behavior means the SoC is not compliant to the I2C spec at 400 kHz. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The BSP ensures that the DDR_INPUT bit is set to CMOS input type		 Configure the DDR_INPUT bit in IOMUXC for MIPI_HSI, USB_HSIC, and ENET to â0,â that is, CMOS input type. 	I/O: MIPI_HSI, USB_HSIC, and ENET I/O interfaces should not be configured to Differential input mode 	 DDR3, LPDDR2, MIPI_HSI, USB_HSIC, and ENET I/O interfaces are of the DDR I/O type, thus having the option to work in DDR input mode. This mode requires setting the DRAM_VREF to half the I/O voltage. This reference pad is used in all DDR type I/O interfaces. Since all I/O interfaces do not have a common voltage, configuring more than two I/O interfaces to DDR input mode might not work. Conditions: De-assertion of POR_B when the SoC is powered-up. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.14.52_1.1.0_ga. The BSP implements the IDMAC burst size workaround		 Either - set Y stride line & UV stride to 16 bytes aligned when format is NI/PI 420/422 using SMFC channel or - change the IDMAC burst size of the particular pixel formats from 32 pixels to 16 pixels If the IDMAC bandwidth is enough, there's no impact on the capture performance - it's just a system bandwidth consumption increase due to low payload bursts. But if the IDMAC bandwidth is critical, that is, IDMAC cannot handle 2x number of bursts on time, it will impact on capture performance The capture performance is reduced when the burst size is halved. However this workaround is preferred as the other workaround would be intrusive to software and some existing user space applications would need to be modified. 	ERR009623 IPU: IDMAC burst errors when crossing a 4k boundary using NI/PI 420/422 formats [i.MX 6DualPlus/6QuadPlus Only] 	 The IPU DMA Controller (IDMAC) module has a burst issue when using NI/PI 420/422 formats to perform write operations using Sensor Multi FIFO Controller (SMFC) channels (CH0, CH1, CH2 and CH3). The IDMAC cannot correctly divide the current burst into two bursts when crossing the 4k boundary. When this happens, the image will show some black pixels. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 Apply software reset to MIPI in case the aclk_emi_podf or aclk_emi_sel in the CCM are modified. 	MIPI: Glitch or unknown clock frequency on MIPI input clock may occur in case the CCM source clock is modified 	 The MIPI pixel clock driven by CCM cannot be gated. This results in a potential glitch or an unknown clock frequency when the MIPI pixel clock is changed in CCM. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 None. 	ERR005190 MIPI: CSI2 Data lanes are activated before the HS clock from the CSI Tx side (camera) starts 	 The MIPI CSI2 circuit is enabled by default with all the D-PHY data lanes active and will only disable the lanes that are not required when HS clock is available. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 If a generic short packet with packet data (WC fields) higher that 16âhFFEE is required, the application should disable the video mode transmission and use command mode transmission to issue the command. 	MIPI: Corruption of short command packets with Word Count (WC) greater than 16âhFFEE, during video mode transmission by the MIPI Generic Interface 	 On short packets, the WC[15:0] header field delivers the actual data payload of the packet. However, In long packets, the same field is used to indicate the size of the packetâs payload. Video Mode packet scheduler prevents Generic long packets to be generated with a size higher than 16âhFFEE. This size limit is imposed by the video mode packet scheduler since the maximum line size is 16âhFFFF minus additional security margins. The core is incorrectly filtering the short packets with WC field higher than 16âhFFEE since the size protection is applied without considering that this field now contains data and not packet size. Short packet commands are erroneously transmitted in DSI link with WC field equal to 16âhFFEE when this value is higher than 16âhFFEE. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	A software workaround is possible but it hasnât been implemented in the Linux BSP yet. BSP functionality may be affected in some configurations and use cases as described above		 To avoid the assertion of the CRC error, disable verification of CRC reception errors in bit en_CRC_rx of the register PCKHDL_CFG. When disabling the CRC verification on the receive path, users should be aware that the CRC verification will be disabled for all reverse packets and not limited just to the long packets with no payload. 	ERR005192 MIPI: Reverse direction long packets with no payload incorrectly issue a CRC error for MIPI DSI 	 The issue appears when a DSI device, which is in reverse mode, sends a long packet with no payload. When receiving this packet, the DSI host controller checks the 16bit CRC field of the packet and incorrectly issues an error.Although there is no apparent reason for a device to send a long packet with no payload, there is no restriction in the DSI specification that forbids this. Also, there is no data loss resulting from this bug, since a long packet with no payload carries no data. The only inconvenience is that a CRC error is asserted in the bit crc_err of the register ERROR_ST1. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release 3.0.35_1.1.0 GA. The software workaround was integrated in the very first version of the MIPI DSI driver		 Setting PWR_UP register (address 0x04) to 0x00 keeps the controller under reset so that en_video_mode and en_cmd_mode can be changed free of any timing violations resulting from Clock-Domain Crossing. After those changes, PWR_UP can be set to 0x01 again, leading the controller to start working with the new configuration. 	MIPI: The bits for setting the MIPI DSI video mode cannot be changed on the fly 	 The bits for setting video mode and command mode are assumed to be static during use and have no synchronization mechanism. These correspond to bit 0 of VID_MODE_CFG (address 0x1C) and bit 0 of register CMD_MODE_CFG register (address 0x24). these bits should only be changed while the digital core is in reset. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 This problem only occurs when an incorrect configuration is applied to the controller. The problem can be avoided only by activating the Null Packets, if Multiple Packets are also enabled. 	ERR005194 MIPI: On MIPI DSI, there is a possible corruption of the video packets caused by overlapping of the current line over the next line, if the configuration is programmed incorrectly when using the DPI interface 	 For an incorrectly programmed configuration that enables the Null Packets and disables the Multiple Packets, the delay calculation is incorrectly done. Calculation of the delay time applied to the synchronization events when the Null Packets are enabled does not consider that the delay should only be applied when Multiple Packets are also enabled. This inaccuracy in the delay time might lead to an eventual overlap of current line with next line transmission resulting in the corruption of the packets. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 HSA and HBP should be programmed with values higher than 10 lane byte cycles. The 10 lane byte clock corresponds to the transmission of a Horizontal Sync Start packet (4 bytes) followed by the smallest blanking packet (6 bytes). 	MIPI: Incorrect blanking packet may be sent by the MIPI DSI interface 	 When the HBP programmed timing is shorter than the time required to transmit the smallest blanking packet (6 bytes long packet), the controller incorrectly sends a blanking packet. This incorrect behavior models the HBP for a longer period than expected while the core should decide not to send any blanking packet. The transmission of blanking packet under these conditions can only be observed in Video Synchronous Mode with pulses. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The BSP does not support data types from 0x13 to 0x17		 To avoid the interrupt, err_id* can be masked by setting the bits 12 to 15 of the MASK2 register. Bits 12 to 15 of the ERR2 register also should be ignored when reading. But, this procedure hides the occurrence of an err_id* error caused by the reception of other unidentified or unimplemented data type. 	ERR005196 MIPI: Error Interrupt generated by the MIPI CSI interface for certain legal packet types 	 Data types from 0x13 to 0x17 are reserved but not considered invalid in the CSI-2 specification. However, the MIPI CSI controller raises an interrupt due to an err_id* being flagged when a packet with one of these data types is received. Data types from 0x13 to 0x17 should be processed without an error notification of this kind. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 The âdvalidâ signal can be filtered by configuring the following IPU data type registers: â¢ IPU_CSI0_DI__CSI0_MIPI_DI1 â¢ IPU_CSI0_DI__CSI0_MIPI_DI2 â¢ IPU_CSI0_DI__CSI0_MIPI_DI3 	MIPI: Null and Blanking data packets activate âdvalidâ signal 	 The data sent through Null or Blanking data packets do not activate âdvalidâ signal. CSI-2 Host controller implementation currently activates âdvalidâ for payload of any kind of long packet. The IP should match what is described in the databook and âdvalidâ should not be activated by Null and Blanking data. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 Implement any of the following: 1) Adjust the CSI transmit output timing to make sure the vertical blanking before the frame (FE) is <0x40000/CSI_CLK0 period. 2) Make sure each line has both a line start (LS) and line end (LE). 3) Ignore the CRC error if you confirm the CRC error is due to the operating conditions described above in the Description. 	ERR009704 MIPI: CSI-2: CRC error produced in 4-lane configuration 	 CRC errors can occur in the MIPI CSI-2 4-lane configuration. These errors occur during an inactive phase of the bus. When using the 4-lane configuration with long data packet video, an internal counter indicating the number of received payload data continues counting even after the long data packet ends until the next packet comes in. This will cause a count overflow producing a CRC error for the last received packet. The CRC error only occurs when all of the following conditions are met: 1) MIPI CSI-2 is configured to use 4 data lanes. 2) Vertical blanking before the frame end (FE) is >=0x40000/CSI_CLK0 period. 3) No line start and line end short packets occur during the frame. The functionality of the receive data is not impacted; only the CRC is in error. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not needed in the BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. The BSP driver does not set the MFE bit to 1 but uses the default value 0		 Do not use Multi frame per sub-buffer mode. The user should set the MFE bit to â0â in the Channel Allocation Table (CAT) in order to avoid this issue. 	MLB: Multi frame per sub-buffer mode is not supported 	 MLB Multi frame per sub-buffer mode is not supported. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 To workaround this issue, following steps should be performed by software: 1. Prior to reducing the DDR frequency (528 MHz), read the measure unit count bits (MU_UNIT_DEL_NUM). 2. Bypass the automatic measure unit when below 100 MHz, by setting the measure unit bypass enable bit (MU_BYP_EN). 3. Double the measure unit count value read in step 1 and program it in the measure unit bypass bit (MU_BYP_VAL) of the MMDC PHY Measure Unit Register, for the reduced frequency operation below 100 MHz. Software should re-enable the measure unit when operating at the higher frequencies, by clearing the measure unit bypass enable bit (MU_BYP_EN). This code should be executed out of Internal RAM or a non-DDR based external memory. 	ERR005778 MMDC: DDR Controllerâs measure unit may return an incorrect value when operating below 100 MHz 	 The measure unit counts cycles of an internal ring oscillator. The measure unit readout is used to fine tune the delay lines for temperature/voltage changes for both DDR3 and LPDDR2 interfaces. When operating at low frequencies (below 100 MHz), the measure unit counter might overflow due to an issue in the overflow protection logic. As a result, an incorrect measure value will be read. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used.The Freescale Linux BSP releases leave the ARCR_GUARD bits at the default value of 4'b0000		 Software should always program the ARCR_GUARD bits as 4'b0000. That means the accesses which have gained the maximum dynamic score will always become the highest priority after achieving the default highest aging level (15). 	MMDC: ARCR_GUARD bits of MMDC Core AXI Re-ordering Control register (MMDC_MAARCR) doesn't behave as expected 	" The ARCR_GUARD bits of MMDC Core AXI Re-ordering Control register (MMDC_MAARCR) are used to ensure better DDR utilization while preventing starvation of lower priority transactions. After reordering is performed on previous read/write DDR transactions, the specific outstanding transaction will first obtain the maximum score in âdynamic score mode"" and then wait for additional ARCR_GUARD count before achieving the highest priority. Due to a design issue, the ARCR_GUARD counter doesn't count up to the pre-defined value in the ARCR_GUARD bit field as expected. Therefore, the aging scheme optimizes the transaction reordering only up to the default aging level (15) and assigns a highest priority tag to the outstanding transaction. "	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 None 	ERR003747 PCIe: 9000436491âReading the Segmented Buffer Depth Port Logic registers returns all zeros 	 When disabling the Dynamic Q Depth Adjustment, DBI reads to the Segmented Buffer Depth Port Logic registers return all zeros versus returning the hardwired default value. Internally the DBI read access clears these registers, overwriting the default value with all zeros. Clearing these registers results in all zeros being returned for subsequent PCIe Cfg reads. Following is an example scenario for this erratum: 1. Issue a PCIe Cfg read to any Port Logic Segmented Buffer Depth register. The read data value returned to the requester is the hardwired default value. 2. Issue a DBI read to same Port Logic Segmented Buffer Depth register. The read data value returned to the requester is all zeros. 3. Issue a PCIe Cfg read to same Port Logic Segmented Buffer Depth register. The read data value returned to the requester is all zeros. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 None 	PCIe: 9000427578âRoot ports with address translation drop inbound requests, without reporting an error 	 Root ports which have address bus widths < 64 drop inbound memory requests, when the address of the request is greater than the implemented address bus width. This feature is to prevent address aliasing when requests with addresses above 4 GB are received. When this feature is used in conjunction with address translation (iATU or xATU), inbound memory TLPs that violate this address check rule are dropped but no error is reported. Conditions: Issue an inbound memory TLP that has an address larger than the AMBA or RTRGT1 address bus width. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Read and clear status bit until it is read as cleared. 	ERR003749 PCIe: 9000426180âMSI Interrupt Controller Status Register bit not cleared after being written by software 	 Each Interrupt Status Register contains 32-bit status bits, allowing for the status of 32 individual interrupt vectors to be reported. The status bits are RW1C bits and are set when an MSI Interrupt vector is received, and are cleared by software writing a 1 to the bit. The setting of a status bit takes precedence over the clearing of a status bit. The precedence given to setting of the status bits resulted in the setting of a single status bit in the register, preventing any other status bits from being cleared at the same time. As a result, if an MSI interrupt is being logged in a status bit, and during the same clock cycle, software also attempts to clear another status bit in the same Status Register, then the status bit corresponding to the MSI interrupt is set but the status bit being written by software is not cleared and remains set. As a result, even though software has written a 1 to the status bit, the status bits remains set, reporting that an MSI interrupt has been received, even though software has serviced the Interrupt Request. This issue only occurs if the setting of a status bit and the clearing of another status bit within the same Interrupt Status Register happens during the same clock cycle. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 If multiple devices requested a power mode state change, possibly some of them would not get served if the requester ID is overwritten. However, according to Section 5.3.3.3 of PCIe Specification, all agents that are capable of generating PM_PME must implement a PME Service Timeout mechanism to ensure that their PME requests are serviced within a reasonable amount of time. If there is a time-out, the PM_PME TLP should be re-sent. So, this should not be an issue. 	PCIe: 9000413207âPME Requester ID overwritten when two PMEs are received consecutively 	 When multiple PM_PME TLPs are received by an RC, the PME Requester ID of the first received PM_PME is overwritten with the Requester ID of the subsequent PM_PME in the PME Requester ID field of the Root Status register. The correct operation is to store the Requester ID of the initial PM_PME and only update the PME Requester ID field, once software has cleared the PME Status bit to acknowledge the receipt of the initial PM_PME TLP. Following is an example scenario for this erratum: 1. Send two PM_PME TLPs with different Requester IDs upstream to the core. 2. Read back the contents of the Root Status Register. The PME Status and PME Pending bits should both be set to 1. The Requester ID in the PME Requester ID field corresponds to the second PM_PME and not the initial PM_PME received by the core. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	No software workaround can be implemented to mask or workaround this erratum. This erratum will result in impacted or reduced functionality as described above		 None 	ERR003753 PCIe: 9000405932âAXI/AHB Bridge Slave does not return a response to an outbound non-posted request 	 The completion timeout mechanism defined in Section 2.8 of PCIe Base Specification version 2.1 describes a method to allow a requester to recover from a scenario where it does not receive all completions to a non-posted request. In the AXI or AHB bridge module, this triggers an error response to the original request on the slave interface. There is a separate completion timeout interface that passes information about the request that has been timed out from the PCIe Core to the AXI or AHB Bridge. The Bridge cannot process valid completions and completion timeouts in parallel and so, if a completion timeout is received at the same time as a valid completion is passed into the bridge, it must be stored and processed later. There is only a single storage element available for a completion timeout in the bridge. If a second completion timeout is passed into the bridge before it processes the first, the second timeout will overwrite the first completion timeout in the storage element. This results in the information associated with the first timeout being lost and no response is returned on the AHB or AXI slave interface for the original request. Following is an example scenario for this erratum: 1. Issue a continuous stream of outbound MemRd requests targeting the AXI or AHB Slave interface. 2. Correctly return completions back to back for all but two of these requests. 3. Wait for the timeout mechanism to trigger for the two requests that do not receive completions. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None. 	PCIe: 9000403702âAHB/AXI Bridge Master responds with UR status instead of CA status for inbound MRd requesting greater than CX_REMOTE_RD_REQ_SIZE 	 The AHB/AXI Bridge RAM is sized at configuration time to support inbound read requests with a maximum size of CX_REMOTE_RD_REQ_SIZE. When this limit is violated the core responds with UR status, when it should respond with CA status. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None. 	ERR003755 PCIe: 9000402443âUncorrectable Internal Error Severity register bit has incorrect default value 	 The PCI Express AER Capability register âUncorrectable Error Severityâ (at offset 0x0C) has the wrong default value for the âUncorrectable Internal Errorâ bit. It should be 1âb1. Uncorrectable Internal Error is an optional feature that the PCI Express block does not support, but it must default to 1âb1 anyway. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None. 	PCIe: 9000387484âLTSSM: Software-initiated transitions to Disabled, Hot Reset, Configuration, or Loopback states sometimes take longer than expected 	 The PCI Express Specification is unclear regarding the transmission of Idle Symbols when a directed state transition occurs in the Recovery.Idle state. This can sometimes result in temporary loss of synchronization between link partners when transitioning from L0 to Detect, through the Disabled, Hot Reset, Configuration, or Loopback states. Section 4.2.6.4.4 of the PCI Express Specification states that Recovery.Idle Transmitter sends Idle data on all configured Lanes. Note: If directed to other states, Idle Symbols do not have to be sent before transitioning to the other states (that is, Disable, Hot Reset, Configuration, or Loopback). The PCI Express block chooses to send Idle symbols, as the specification does not prohibit the sending of Idle symbols. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Program the required destination ID in bits [31:16] of the region Upper Base Address Register. 	ERR003757 PCIe: 9000448152âInternal Address Translation Unit (iATU): Inbound Vendor Defined Message (VDM) âID Match Modeâ is not functional 	 The VDM âID Match Modeâ of the iATU allows inbound ID-routed VDMs to be translated without explicit knowledge of the Bus, Device, or Function number of the target function. ID-routed VDMs contain the destination ID in bits [31:16] of Header DWORD3. This mode is not functional and the iATU requires the actual ID of the destination Bus, Device, and function to be known and programmed as bits [63:48] of the iATU region Base Address. Following is an example scenario for this erratum: 1. Setup an inbound iATU region with the type field set to match messages and the vendor ID match mode bit set to 1. 2. Send a message that matches the bits [47:ATU_REG_WD] of the region base, but that does not match bits [63:48]. The message will not be translated. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None 	PCIe: 9000441819âUpstream Port does not transition to Recovery after receiving TS OSs during âENTER_L2 negotiationâ 	 Following is an example scenario for this erratum: 1. Downstream Port sends PME_Turn_Off message, Upstream Port sends PM_Enter_L23 DLLPs. 2. Downstream Port sends PM_Request_Ack DLLPs and does not move to Electrical Idle. 3. Upstream Port moves into Transmitter Electrical Idle and is waiting for Receiver Electrical Idle. 4. Downstream Port moves to Recovery and sends TS OSs. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Program an iATU region to generate the MSI and then write to that region to generate the message. 	ERR003759 PCIe: 9000439510âInternal Address Translation Unit (iATU) can sometimes overwrite Outbound (Tx) Vendor Messages and MSIs 	 Outbound TLPs created at the vendor message interface (VMI) or the MSI interface are always subject to translation by the iATU. In PCI Express block configurations with an AHB/AXI interface and a 32-bit slave address bus width, the iATU incorrectly only considers the lower 32 bits of the 64-bit VMI or MSI address, when determining whether to translate the outbound TLP or not. The VMI always uses 64 bits of the vend_msg_data input. These 64 bits of data are placed in DW3 and DW4 of the message TLP header and are treated by the iATU as an address. When the lower 32 bits on vend_msg_data match an enabled iATU region, then the resulting TLP is incorrectly translated, regardless of the upper 32 bits. All of the 64-bits should have been checked in the iATU. Following is an example scenario for this erratum with respect to VMI interface: 1. Setup any outbound iATU region (any type, any target address) 2. Send a message using VMI where the lower 32 bits of the message match the iATU region 3. The resulting Vendor Message TLP will be translated by the iATU regardless of the value of the upper 32 bits on vend_msg_data Following is an example scenario for this erratum with respect to MSI interface: 1. Setup any outbound iATU region of any type where the lower 32 bits of the base address of the region match the lower 32 bits of the MSI address for any function within the device 2. Stimulate a MSI request 3. The resulting TLP will match the iATU region target specification and not the MSI address of the function 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	No software workaround can be implemented to mask or workaround this erratum. This erratum will result in impacted or reduced functionality as described above		 None. 	PCIe: 9000439175âPoisoned Atomic Op requests targeting RTRGT0 receive UR response instead of CA response 	 The core does not support Atomic Ops that are targeted towards the RTRGT0, because RTRGT0 can only process one DWORD requests. Therefore, any Atomic Op request targeting the RTRGT0 interface should receive a CPL with CA completion status. There is an issue when the core receives an Atomic Op request that is poisoned (EP bit is set to 1) and the request is targeting the RTRGT0 interface. The core correctly disregards the poisoned status as the CA response is a high priority error. However, the poisoned bit causes the internal filter to treat the request as UR instead of CA. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None. This issue will not lead to any compliance failures. 	ERR004297 PCIe: 9000336356âLink configuration sometimes proceeds when incorrect TS Ordered Sets are received 	 The core moves ahead even when it does not receive the same non-PAD lane number in two consecutive TS Ordered Sets (OS) in the Link configuration process. Scenario Setup: â¢ The link is in the link training phase. â¢ Remote partner sends TS OS without the same non-PAD lane number in any two consecutive TS OS on any active lane. â¢ The core moves ahead regardless of the non-PAD lane number not being the same in two consecutive TS OS. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None required, there are no adverse side effects. 	PCIe: 9000471173âBad DLLP error status checking is too strict 	 Figure 3-15 in Section 3.5.2.2. âHandling of Received DLLPsâ of the PCI Express base Specification 3.0, indicates when a bad DLLP error should be reported. It should occur when the calculated CRC is not equal to the received value. The core correctly reports a bad DLLP error under this scenario. However, it also sets it if the Physical Layer reports a packet error during reception of the DLLP or if the DLLP ends with an ENDB symbol and not an END symbol. These extra conditions should not result in the reporting of a bad DLLP error. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None, but a graceful resumption of normal operation is expected. 	ERR004299 PCIe: 9000493959âL1 ASPM incorrectly entered after link down event during L1 ASPM entry negotiation 	 Upstream ports are responsible for initiating entry into the L1 low-power state. The core implements an idle timer mechanism to trigger entry into the L1 state when L1 ASPM is enabled. If this timer has triggered but the port has not yet negotiated entry into the L1 low power state, and a link down event occurs, then the port will attempt to enter L1 again as soon as the link has resumed operation. This attempted L1 entry occurs, even though L1 ASPM is no longer enabled for the link (because of the link down reset). Conditions: Scenario setup: â¢ After link-up, enable L1 ASPM. â¢ Allow the link to go idle. Eventually, the port begins to request L1 entry by sending PM_Active_State_Request_L1 TLPs. â¢ Do not acknowledge the PM_Active_State_Request_L1 TLPs, but bring the link down by forcing the remote partner into the detect state. â¢ Allow the link to retrain to L0. â¢ After the link has retrained, the port will again attempt entry into the L1 ASPM state, even though L1 ASPM is now disabled. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 This defect has no adverse side effects, rather a strict interpretation of the specification. The only consequence is that L0S (PCI Express Link Power State) will be exited prematurely if this condition is hit however will re-enter if the condition to enter prevails. So, just an early exit out of L0S but not functional problems or data corruption or compliance failure. 	PCIe: 9000470913âPower Management Control: Core might enter L0s/L1 before Retry buffer is empty 	 The PCIe base specification states that before the L1 state can be entered, the Retry buffer must be empty. For PM Directed L1 Entry 5.3.2.1. Entry into the L1 State The Downstream component then waits until it receives a Link Layer acknowledgement for the PMCSR Write Completion, and any other TLPs it had previously sent. The component must retransmit a TLP out of its Data Link Layer Retry buffer if required to do so by Data Link Layer 15 rules. For ASPM L1 Entry 5.4.1.2.1. Entry into the L1 State The Downstream component must wait until it receives a Link Layer acknowledgement for the last TLP it had previously sent (the retry buffer is empty). The component must retransmit 30 a TLP out of its Data Link Layer Retry buffer if required by the Data Link Layer rules. In Addition For Entry into The L0s State 5.4.1.1.1. Entry into the L0s State No TLP is pending to transmit over the Link, or no FC credits are available to transmit any TLPs. This can be interpreted as meaning the retry buffer should be empty. This is because it might be necessary to retransmit a TLP over the link, until a TLP has been acknowledged. The core does not wait for the retry buffer to be empty before commencing L0s or L1 entry. Conditions: Scenario Setup: 1. Transmit a TLP from the DWC_pcie core 2. Suppress Ack/Nak transmission from the Link Partner. 3. Initiate PM directed L1, ASPM L0s or ASPM L1 entry. 4. The core will enter the appropriate low power state, even though it still has TLPs in the retry buffer. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 No workaround. Also should not cause any compliance issues. 	PCIe: 9000487440âTLP sometimes unnecessarily replayed 	 A DLLP Ack can be missed by the core on the receive path when it is immediately followed by EIOS. Conditions: After the Ack, two EIOS are seen on the PIPE interface. In this scenario, the Ack is missed by the RX logic, causing the corresponding TLP to be re-transmitted from the Tx replay buffer. Eventually, the link recovers from this event, as the receiver on the other side drops the re-transmitted TLP as a duplicate TLP. If the missed frame is a TLP, no ACK will be sent to the link partner, resulting in re-transmission of the TLP from the link partner. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 The workaround is to override the RX_EQ settings, accordingly, using control registers inside the PHY: RX_OVRD_IN_HI - 0x1006 10:8 - RX_EQ[2:0] 11 - RX_EQ_OVRD 	ERR004489 PCIe: 9000505660âPCIe2 receiver equalizer settings 	 In the PCIe2 PHY, the rx0_eq[2:0] pins are controlled by the PCS, which currently drives these to a fixed value of 3âb000. This removes the capability to change RX equalization if any compliance issues are encountered. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None. This is an unusual verification setup, and in a real system the remote partner must keep sending TS1 OSs in Recovery.RcvrLock and then the core will move to Recovery after receiving 2 TS1 OSs. 	PCIe: 9000514662âLTSSM delay when moving from L0 to recovery upon receipt of insufficient TS1 Ordered Sets 	 When the remote link partner enters Recovery.rcvrlock from the L0 state and transmits only two TS1 Ordered Sets (OS), the core can sometimes miss the second TS1 OS and therefore, delay its entry into Recovery.rcvrlock. Conditions: Scenario Setup: â¢ The remote link partner enters Recovery.rcvrlock from the L0 state and transmits only two TS1 OSs â¢ The remote link partner then unusually moves to ElecIdle and de-asserts the PIPE signal rxvalid in Recovery.RcvrLock â¢ The expected response from the core is that it will transition to Recovery.rcvrlock on receipt of the two TS1 OSs â¢ The core receives a SKP OS or EIEOS that was inserted between the two TS1 Ordered Sets. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None, the link recovers gracefully. 	PCIe: 9000507633âTLP might be replayed an extra time before core enters recovery 	 The PCI Express base specification states in section 3.5.2.1 âIf REPLAY_NUM rolls over from 11b to 00b, the Transmitter signals the Physical Layer to retrain the Link, and waits for the completion of retraining before proceeding with the replay.â In the core, there are scenarios where the first TLP to be replayed might be replayed a fourth time before the link is retrained. This happens because the replay buffer logic requests the link to retrain at the same time that it begins a replay. If the link does not begin to retrain quickly enough, the first TLP of the replay might be transmitted again prior to link retraining. Conditions: Scenario Setup: 1. Transmit a series of TLPs from the core. 2. Send a Nak DLLP for the first TLP to initiate a replay. 3. Wait for the replay to begin. 4. Send a Nak DLLP for the first TLP to again initiate a replay. 5. Repeat steps (3) and (4) two more times. 6. After sending the fourth NAK, in some circumstances the first replayed TLP might be seen before the link begins to retrain. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 From Cold start (LTSSM starts in Detect state): â¢ Disable MAC/LTSSM. â¢ Disable MAC/Gen2 support. â¢ Release MAC/LTSSM. â¢ Wait for MAC to enter L0. â¢ From L0, initiate MAC entry to Gen2 if EP/RC supports Gen2. â¢ Wait 2 ms (LTSSM timeout is 24 ms, PHY lock is ~5 Î¼s in Gen2). â¢ If (MAC/LTSSM.state == Recovery.RcvrLock) && (PHY/rx_valid == 0), then pulse PHY/rx_reset. Transition to Gen2 is stuck. Enter L2 from L0: â¢ Driver receives/requests entry to L2. â¢ Wait 2 ms (LTSSM timeout is 24 ms, PHY lock is ~10 Î¼s in Gen1). â¢ If (MAC/LTSSM.state == Recovery.RcvrLock) && (PHY/rx_valid == 0), then pulse PHY/rx_reset. Transition to Gen1 is stuck. Exit from L2 to L0: â¢ Driver receives/requests exit from L2. â¢ Disable MAC Gen2 support. â¢ Release LTSSM to wake-up from L2. â¢ Wait for entry to L0 and then repeat process of entering Gen2 from cold start case (going through Detect). 1. Disable RX in the PHY by CREG write: Address=16âh1005, Data=16âh0028 2. Enable RX in the PHY by CREG write: Address=16âh1005, Data=16âh0000 PHY rx_valid read: â¢ Sample rx_valid in the PHY by CREG read: Address=16âh100D, Data Mask=16âh0001 (rx_valid is bit 0) MAC software registers: 1. Disable/enable LTSSM: write app_ltssm_enable. 2. Disable Gen2 (read/write link capability/status register): 3. Link in L0 event (driver should know this when the data link layer starts): 4. Request change to Gen2: (Cfg Directed Speed Change enabled. Write Gen2 Control Register DEFAULT_GEN2_SPEED_CHANGE). 5. Read LTSSM state (xmlh_ltssm_state[4:0]. 6. Negotiate L2 entry/exit (software controlled D3). 	ERR005184 PCIe: Clock pointers can lose sync during clock rate changes 	 The digital to analog clock domain transfer of the frequency updates is susceptible to meta-stability errors as the transfer is done through a FIFO. During initial power-up, the FIFO ensures proper alignment by delaying the read pointer until the write clock has started. For correct operation of pointers, it is required that there are five edges of the write clock in two edges of the read clock. When a rate change occurs from Gen1 to Gen2 or vice versa, the clock frequencies switch. During this switching, it is possible (depending upon internal clock tree delay in the PHY digital logic) that there are six write clock edges between two clock edges of the read clock. This causes the pointers to move out of sync and for some process/voltage/temperature corners can result in continuous corrupted reads of frequency update inputs to CDR phase mixer. Once the pointers are misaligned, the condition will persist until the clocks are disabled or another phase shift occurs in clock phases as a result of rate change. The end result is the CDR loses lock in L0 state. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround is not implemented because this erratum will never be encountered in normal device operation		 In current PCIe core, there is no signal indicating that remote partner has âExtended Synchâ bit set per PCIe base spec. The workaround is to know in advance if the link partner has the âExtended Synchâ bit set and in that case set that bit in the PCIe also. The âExtended Synchâ is intended for a logic analyzer. It may be used if there are repeaters on the link. 	ERR005186 PCIe: The PCIe Controller Core Does Not Send Enough TS2 Ordered Sets During Link Retrain And Speed Change 	 The PCIe core might send less than 32 TS2 ordered sets during link retraining and speed changing if the remote partner sends more TS1 ordered sets than expected. This occurs when the âExtended Synchâ bit cleared in PCIe and set at the remote partner. Scenario Setup: â¢ Link partners agree to do speed change negotiation and move to Recovery. â¢ The remote partner stays in Recovery.RcvrLock longer and sends more TS1s (for example, Extended Synch bit is set). â¢ In Recovery.RcvrCfg state core will send less than 32 TS2s before transition to Recovery.Speed 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Increase the programming of the âLow Power Entrance Countâ field of the âPort Force Link Registerâ (maximum is 255). This delays the entry into L1 and prevents the problem from occurring. The âLow Power Entrance Countâ field is for Power Management state to wait for these many clock cycles for the associated completion of a configuration write to D-state register to go low power. The longer delay is to ensure that the completion TLP can be sent by the core to avoid immediate waking-up after entering L1. 	PCIe: The PCIe Controller cannot exit successfully L1 state of LTSSM when the Core Clock is removed 	 Under the condition where the core enters L1 and is then directed to immediately exit due to a pending TLP transmission, the LTSSM misses the PhyStatus pulse because of the gated core_clk in clk_rst.v. Scenario Setup: â¢ LTSSM enters L1 and indicates to the PHY to change Powerdown to P1. â¢ Core immediately gets a wake-up event and wants to exit from L1. To make the transition into Recovery, the core needs to receive PhyStatus back from the PHY â¢ The PHY changes Powerdown to P1 and asserts PhyStatus back to Core. â¢ LTSSM moves to Recovery state and indicates to the PHY to change Powerdown to P0 â¢ core_clk is gated off immediately after LTSSM enters Recovery. This can happen as a result of the logic in the clk_rst module that is performing glitch-less clock switch on aux_clk â¢ The PHY changes Powerdown to P0 and asserts PhyStatus back to core. â¢ LTSSM misses the PhyStatus because core_clk is still gated off by the clk_rst module. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	No software workaround can be implemented to mask or workaround this erratum. This erratum will not result in impacted or reduced functionality as described above		 No workaround, no effect on software but non compliance with standard. 	ERR005189 PCIe: PCIe Gen2/Gen3 Hardware Autonomous Speed Disable Bit In Configuration Register is not sticky 	 Hardware Autonomous Speed Disable bit Attributes in PCIe Base Specification Rev 2.0 were RW/RsvdP. In Rev 3.0 it is changed to RWS/RsvdP. Scenario Setup: â¢ âNo soft resetâ bit is programmed to 0 on any function. â¢ âHardware Autonomous Speed Disableâ bit is programmed to 1, if the component does not want to adjust the Link speed autonomously. â¢ Train the Link to Hot Reset. â¢ Core will have a Link down reset which causes non-sticky reset. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	No software workaround can be implemented to mask or workaround this erratum. This erratum will result in impacted or reduced functionality as described above		 The PCIe can be put into PDDQ mode to save PCIe PHY power and wake up only by the OOB (Out of Band) wakeup signal (since wakeup by a beacon from link partner is not supported) driven from the link partner (End Point). This signal could be used as a GPIO interrupt to exit this mode. The limitation of this workaround is that the link partner cannot be put into L2 mode. 	PCIe: PCIe does not support L2 power down [i.MX 6Dual/6Quad Only] 	 When PCIe works as Root Complex, it can exit L2 mode only through reset. Since PCIe does not have a dedicated reset control bit, it cannot exit L2 mode. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 Request maximum number of MSI vectors by writing the Multiple Message Capable field of the MSI Control Register with a value of 0x5 via the DBI register. Apply a mask on the writable mask bits in accordance with the value of cfg_multi_msi_cap. 	ERR007554 PCIe: MSI Mask Register Reserved Bits not read-only 	 Per the PCI Specification, unimplemented mask register bits in the MSI capability should be reserved. All mask bits in the core are implemented with read-write attribute, regardless of the number of MSI vectors requested. The PCI-SIG compliance test CFG 4.0.1 expects the reserved bits to be read-only and consequently fails if less than the maximum number of MSI vectors are requested by the core. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	No software workaround can be implemented to mask or workaround this erratum. This erratum will result in impacted or reduced functionality as described above		 None. 	PCIe: iATU - Optional programmable CFG Shift feature for ECAM is not correctly updating address (9000642041) 	" iATU Enabled (CX_INTERNAL_ATU_ENABLE =1) bit 28 (CFG_SHIFT_MODE) is enabled in the IATU_REGION_CTRL_2_OFF_OUTBOUND_0 register. The implementation of the Enhanced Configuration Address Mapping (ECAM) feature violates the PCIe specification requirement that all reserved fields should always be ""0"". The basic idea is that the Bus/Device/Function (BDF) address is shifted 4 bits down so that the entire Cfg space can be mapped into a 256 MB region, rather than requiring multiple address translation tables, or a 4GB translation space. The BDF is then supposed to be shifted back up from bits 27:12 to 31:16 in the outgoing TLP (actually Bytes 8 and 9 in the Cfg TLP). The core does not do this translation correctly when the CFG Shift bit is set in an iATU entry. "	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	No software workaround can be implemented to mask or workaround this erratum. This erratum will result in impacted or reduced functionality as described above		 None 	ERR007556 PCIe: Core Delays Transition From L0 To Recovery After Receiving Two TS OS And Erroneous Data (9000597455) 	 When the core is in L0 and receives two TS ordered sets followed by erroneous data, the core does not transition to Recovery immediately. The core will wait for the 128 us timeout and then move to Recovery if the core continuously receives erroneous data. Scenario Setup: Linkup to L0 Send two TS ordered sets to the core Send some erroneous data to the core immediately Continue sending erroneous data to the core for 128 us 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	No software workaround can be implemented to mask or workaround this erratum. This erratum will result in impacted or reduced functionality as described above		 None 	PCIe: Extra FTS sent when Extended Synch bit is set (9000588281) 	 16-bit, 32-bit, or 64-bit PIPE I/F (CX_NB >= 2) Gen1/Gen2 Mode (CX_GEN3_MODE = 2) When running at Gen1 or Gen2 speed, if the valid core data width on a lane is 2s (two symbols) or higher and the Extended Synch bit is set in the Link Control Register, then the core sends one extra FTS (4097 instead of 4096) when exiting L0s. Scenario Setup: 1. Set the Extended Synch bit in the Link Control Register. 2. Enable L0s ASPM by setting Link Control Register bit 0 to 1. 3. Bring the link to L0 at Gen1 or Gen2 speed and leave the link idle. 4. The controller goes to L0s after an L0s entry latency timeout. 5. Initiate a TLP transmission. 6. The controller wakes up and sends 4097 FTS. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	No software workaround can be implemented to mask or workaround this erratum. This erratum will result in impacted or reduced functionality as described above		 None 	ERR007559 PCIe: Core sends TS1 with non-PAD lane number too early in Configuration.Linkwidth.Accept State (9000574708) 	 When the downstream port (DSP) core enters Configuration.Linkwidth.Accept, it immediately starts sending TS1 with non-PAD lane number. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None 	PCIe: Link and lane number-match not checked in recovery (9000569433) 	" When the core's LTSSM is in Recovery.RcvLock or Recovery.RcvCfg, and it receives TS Ordered sets, it does not check whether the link and lane numbers of the received TS Ordered Sets match what is being transmitted on those same lanes. Scenario Setup: Core is in link state ""Recovery.RcvLock"" or ""Recovery.RcvCfg"" and receives TS Ordered Sets with link and lane number not matching what is being transmitted on those same Lanes. The absence of link and lane number match checks in Recovery.RcvrLock and Recovery.RcvrCfg states only affects single lane configurations (CX_NL = 1). All configurations are not affect, as stated in the Impacted Configurations section above. "	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None 	ERR007575 PCIe: LTSSM delay when moving from L0 to recovery upon receipt of insufficient TS1 Ordered Sets (9000514662) 	 When the remote link partner enters Recovery.rcvrlock from the L0 state and transmits only two TS1 Ordered Sets (OS), the core can sometimes miss the second TS1 OS and therefore delay its entry into Recovery.rcvrlock. Scenario Setup: The remote link partner enters Recovery.rcvrlock from the L0 state and transmits only two TS1 OS's The remote link partner then unusually moves to ElecIdle and de-asserts the PIPE signal rxvalid in Recovery.RcvrLock The expected response from the core is that it will transition to Recovery.rcvrlock on receipt of the two TS1 OS's The core receives a SKP OS or EIEOS that was inserted between the two TS1 Ordered Sets. Note: This is an unusual verification setup, and in a real system the remote partner must keep sending TS1s in Recovery.RcvrLock and then core will move to Recovery after receiving 2 TS1s. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	 Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None 	PCIe: DLLP/TLP can be missed on RX path when immediately followed by EIOS (9000487440) 	 DLLP ACK frame is missed on the RX path. After the ACK, two EIOS are seen on the pipe interface. In this scenario, the ACK is missed by the RX logic, causing to the corresponding TLP to be re-transmitted from the TX replay buffer. Eventually, the link recovers from this event, as the receiver on the other side drops the re-transmitted TLP as a duplicate TLP. If the missed frame is a TLP, no ACK will be sent to the link partner, resulting in re-transmission of the TLP from the link partner. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release L3.10.53_1.1.0_ga		 Prior to executing a warm reset, clear the IOMUXC_GPR1[REF_SSP_EN] to disable the PCIe reference clock. Once the warm reset is complete and the clocks are stable again, re-enable the PCIe reference clock by setting IOMUXC_GPR1[REF_SSP_EN] to 1. 	ERR008587 PCIe: Random link down after warm reset [i.MX 6Dual/6Quad Only] 	 In rare cases, the PCIe link may go down after a warm reset occurs. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_v2015.04_3.14.52_1.1.0_ga (U-Boot). LDO PU is always on except when entering DSM		 If the PRE is in use the PU domain LDO must not be switched off. To help reduce the power consumption, software can disable the GPU/VPU clocks. 	PRE: GPU3D, GPU2D and VPU cannot be power-gated if the PRE is in use [i.MX 6DualPlus/6QuadPlus Only] 	 The PRE clock will be paused for several cycles when turning on the PU domain LDO from power down state. If PRE is in use at that time, the IPU/PRG cannot get the correct display data from the PRE. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.14.52_1.1.0_ga		 Prevent software writing to the HW_PRE_CTRL register during the problematic hardware write window. For cases in which the PRE input line number is greater than 9, the software will read the STORE_BLOCK_Y status in the HW_PRE_STORE_ENGINE_STATUS register and verify it is within a safe window before writing to the SDW_UPDATE bit in the HW_PRE_CTRL register. For cases in which the PRE input line number is less than or equal to 9, the software will write to the SDW_UPDATE bit (as well as any other PRE registers) in the flip/buffer-switch interrupt handler, that is, the IPU end of frame (EOF) interrupt in the current software implementation. For on-the-fly switch cases, similar to the less than or equal to 9 case, writes to the HW_PRE_CTRL register will be in the so-called on-the-fly configuration interrupt, that is, the same IPU end of frame (EOF) interrupt in the current software implementation. 	ERR009624 PRE: ENABLE bit cannot be set in a special case, when the EN_REPEAT bit is set [i.MX 6DualPlus/6QuadPlus Only] 	 The ENABLE bit in the HW_PRE_CTRL register can be set by hardware or software. The software operation has a higher priority. If the hardware flow tries to set this bit while the software is writing any bits in the HW_PRE_CTRL register at same time, the hardware operation will be ignored. The hardware operation is only valid for one pre_clk cycle. Once this occurs the ENABLE bit cannot be set unless the entire display channel (PRE+PRG+IPU) is restarted. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	No BSP software workaround		 For the ROM NAND boot, there is no software workaround for this issue. For a hardware workaround, implement an external watchdog or other reset watch (such as via a PMIC). On a successful boot, the processor toggles the external watchdog through an I/O mechanism (for example, a GPIO) which prevents the watchdog from detecting a timeout. If a boot failure occurs, the external watchdog times out, thus resetting the processor. For other occurrences in application code, the following procedure should be followed to change the clock configuration for the enfc_clk_root: 1) Gate (disable) the GPMI/BCH clocks in register CCM_CCGR4. 2) Gate (disable) the enfc_clk_root before changing the enfc_clk_root source or dividers by clearing CCM_CCGR2[CG7] to 2âb00. This disables the iomux_ipt_clk_io_clk. 3) Configure CCM_CS2CDR for the new clock source configuration. 4) Enable enfc_clk_root by setting CCM_CCGR2[CG7] to 2âb11. This enables the iomux_ipt_clk_io_clk. 5) Enable the GPMI/BCH clocks in register CCM_CCGR4 	ROM: When booting from NAND flash, enfc_clk_root clock is not gated off when doing the clock source switch [i.MX 6Dual/6Quad Only] Description For raw NAND boot, ROM switches the source of enfc_clk_root from PLL2_PFD2 to PLL3. The root clock is required to be gated before switching the source clock. If the root clock is not gated, clock glitches might be passed to the divider that follows the clock mux, and the divider might behave unpredictably. This can cause the clock generation to fail and the chip will not boot successfully. This problem can also occur elsewhere in application code if the root clock is not properly gated when the clock configuration is changed. Projected Impact: The chip might not successfully boot from a NAND flash device. If the application code changes the enfc_clk_root configuration without gating the clocks appropriately (described in the workaround), accesses to a NAND device may fail. Workarounds: For the ROM NAND boot, there is no software workaround for this issue. For a hardware workaround, implement an external watchdog or other reset watch (such as via a PMIC). On a successful boot, the processor toggles the external watchdog through an I/O mechanism (for example, a GPIO) which prevents the watchdog from detecting a timeout. If a boot failure occurs, the external watchdog times out, thus resetting the processor. For other occurrences in application code, the following procedure should be followed to change the clock configuration for the enfc_clk_root: 1) Gate (disable) the GPMI/BCH clocks in register CCM_CCGR4. 2) Gate (disable) the enfc_clk_root before changing the enfc_clk_root source or dividers by clearing CCM_CCGR2[CG7] to 2âb00. This disables the iomux_ipt_clk_io_clk. 3) Configure CCM_CS2CDR for the new clock source configuration. 4) Enable enfc_clk_root by setting CCM_CCGR2[CG7] to 2âb11. This enables the iomux_ipt_clk_io_clk. 5) Enable the GPMI/BCH clocks in register CCM_CCGR4 Proposed Solution: ROM boot fixed in i.MX 6Dual/6Quad silicon revision 1.3 Linux BSP Status: No BSP software workaround		ROM boot fixed in i.MX 6Dual/6Quad silicon revision 1.3 	Cortex A-9	
	NXP	IMX6DQ	No software workaround available		 Burn more FCB copies(4/8) into the NAND chip to increase the possibility that ROM can find a valid one. 	ERR007220 ROM: NAND boot may fail due to incorrect Hamming Checking implementation in the ROM code [i.MX 6Dual/6Quad Only] 	 For a NAND boot, the ROM code verifies FCB (Firmware Configuration Block) using Hamming Checking. For every single byte within FCB, there is an associated parity byte. Only the least significant 5 bits of the parity byte are valid. However, the ROM code uses the whole 8 bits of the parity bytes for the Hamming Checking. Thus, if a bit flip occurred on any of the most significant 3 bits (bits 7/6/5) of any parity bytes, the Hamming Checking will fail. The MSB 3 bits of parity byte should not be considered in the checking process. So the ROM code may interpret a valid FCB as an invalid one. 	Fixed in i.MX 6Quad/6Dual silicon revision 1.3. 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 SDMMC boot: 1. SD/MMC: Choose an SD/MMC card for which the Nac parameter is to be specified less than 50 ms and its initialization time is less than 500 ms. 2. Choose the âSD/SDXC Speedâ SDR12/SDR25 fuse configuration instead of SDR50/SDR104 when booting from an SD 3.0 card. SDR12/SDR25 is the default configuration. See i.MX6 device reference manual Fuse Map chapter for details on these fuses. If SD Card operation at a higher speed is desired, the SD/MMC can be reconfigured after ROM boot. Note that these fuses are also affected by ERR005645. 3. Boot from SPI-NOR initially then switch to SD/MMC, or One NAND once the external 32 kHz clock is stable. 4. Extend the assertion of POR_B until the 32 kHz crystal oscillator is running and stable. 5. Provide an external stable 32 kHz clock input prior to de-assertion of POR_B. OneNAND boot: 1. OneNAND: Choose a OneNAND memory with tRD1 less than 1.5 ms. 2. Boot from SPI-NOR initially then switch to SD/MMC, or One NAND once the external 32 kHz clock is stable. 3. Extend the assertion of POR_B until the 32 kHz crystal oscillator is running and stable. 4. Provide an external stable 32 kHz clock input prior to de-assertion of POR_B. NAND boot: 1. NAND: Choose a NAND memory with tRST less than 11 ms and tR less than 1 ms. Blow the i.MX6 âReset Timeâ fuse if the NAND device tRST is less than 6 ms. See i.MX6 device reference manual Fuse Map chapter for details on this fuse. 2. Boot from SPI-NOR initially then switch to SD/MMC, NAND or One NAND once the external 32 kHz clock is stable. 3. Extend the assertion of POR_B until the 32 kHz crystal oscillator is running and stable. 4. Provide an external stable 32 kHz clock input prior to de-assertion of POR_B. 	ROM: 32 kHz internal oscillator timing inaccuracy may affect SD/MMC, NAND, and OneNAND boot [i.MX 6Dual/6Quad Only] 	 The internal boot ROM uses the general-purpose timer (GPT) as a timing reference for event and timeout measurement during the boot process. The ROM uses the 32 kHz clock as the clock source for the GPT. There will be a short period during device power-up when the SoC will be using the internal ring oscillator until the crystal oscillator is running. Once the crystal oscillator is running, the SoC will automatically switch from the internal oscillator to the crystal oscillator. Consequently, there will be a period of time when the SoC will be booting and using the internal ring oscillator as its reference clock and the ROM code will be dependent on that clock. The internal ring oscillator is less accurate than a crystal oscillator and may be up to two times faster than a 32 kHz external crystal oscillator. The ROM code assumes the reference clock is 32 kHz, so in the presence of a faster reference clock some delays or timeout configurations in the ROM code will be shorter than expected and may affect SD/MMC boot, NAND boot, and One NAND boot. NOR and SPI-NOR boot modes are not affected by this issue because these modes do not use timeouts. The potential effects are: 1. The SD/MMC card specification may be violated if the SD/MMC card Nac parameter is larger than 50 ms, or if its initialization time is greater than 500 ms. 2. According to the SD 3.0 specification, the controller should wait a minimum of 5 ms after disabling SDCLK before re-enabling SDCLK when voltage switching. In the worst case, the ROM code may only wait 2.5 ms. 3. According to the SD 3.0 specification, the timeout for a CMD6 data transaction response is 100 ms. In the worst case, the ROM code may timeout after 50 ms and therefore not conform to the specification. 4. One NAND boot may fail if the One NAND memory tRD1 is greater than 1.5 ms. 5. NAND boot may fail if the NAND memory tRST parameter is greater than 11 ms or if its tR parameter is greater than 1 ms. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 None. The minimum SD clock speed supported is high-speed mode (SDR25) for initial booting in SD/SDXC boot mode. When booting with an SD card that only supports SD clock speed in Normal mode (SDR12), users need to be aware of the revised SD/SDXC boot mode switch settings for BOOT_CFG1[3:2] given in Table 5. The automatic switch from high speed to normal speed is transparent to the user. Table 5. Revised SD/SDXC Boot Mode Switch Settings for BOOT_CFG1[3:2] BOOT_CFG1[3:2] SD/SDXC Boot Speed 0x SDR25 SDR50 SDR104 	ROM: Normal SD clock speed (SDR12) not selectable in SD/SDXC boot mode 	 When booting in SD/SDXC boot mode, users cannot set the SD clock speed to Normal mode (SDR12). Selecting the SDR12 boot switch setting for BOOT_CFG1[3:2] in the fuse table will default to the High Speed mode (SDR25) due to an incorrect mapping in the boot ROM. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 There are no software workarounds for this issue, instead the user will need to reboot the IC, which will force a second iteration of the secondary boot. 	ERR005768 ROM: In rare cases, secondary image boot flow may not work due to mis-sampling of the WDOG reset [i.MX 6Dual/6Quad Only] 	 In case the primary image authentication fails, ROM will try to perform a WDOG reset and boot with the secondary image. However ROM does not set the SRE bit of watchdog control register which might cause a WDOG reset failure occasionally and result in ROM staying in an endless loop. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ			 â¢ Workaround #1âImplement and boot the system from SPI, I2C, Parallel NOR or SATA. Covers all boot sources. â¢ Workaround #2âUtilize the i.MX 6Dual/6Quadâs watchdog timer in Serial Downloader mode. Covers all boot sources except NAND. â¢ Workaround #3âUtilize an external watchdog timer or other reset source. Covers all boot sources. Table 7. Boot source and workaround mapping BOOT_CFG1[7:4] Boot source Available workaround mapping OneNAND (EIM) #1: Boot from SPI, Parallel NOR, I2C or SATA #2: Internal Watchdog Reset #3: External Watchdog Reset 010x SD/eSD/SDXC #1: Boot from SPI, Parallel NOR, I2C or SATA #2: Internal Watchdog Reset #3: External Watchdog Reset 011x MMC/eMMC #1: Boot from SPI, Parallel NOR, I2C or SATA #2: Internal Watchdog Reset #3: External Watchdog Reset 1xxx NAND #1: Boot from SPI, I2C,Parallel NOR or SATA #2: Not available for NAND #3: External Watchdog Reset SSD/Hard Disk (SATA) #1: Boot from SPI, Parallel NOR, I2C or SATA Serial ROM (I2C/SPI) #1: Boot from SPI, Parallel NOR, I2C or SATA Workaround #1âBoot from SPI, I2C or SATA: For the SPI/I2C, Parallel NOR, or SATA workaround, the application can boot entirely from SPI/I2C, Parallel NOR, or SATA. This corrects the issue. If the user needs to do the full boot from eMMC, SD, or NAND, then a small boot loader patch can be booted from SPI/I2C, Parallel NOR or SATA that resets the PFDs and then runs the eMMC, SD, or NAND flash boot function in ROM again. Patch information follows in the âLinux BSP Statusâ section. Users without the ability to boot from SPI/I2C or SATA (fully or to load the patch) should implement either an SPI/I2C/SATA/Parallel NOR boot source or one of the other workarounds below	ROM: ROM code uses nonreset PFDs to generate clocks, which may lead to random boot failures [i.MX 6Dual/6Quad Only] 	 The phase fractional dividers (PFDs) used in PLL2 and LL3 can go into an unknown state if they are not properly reset before being used as clock sources. â¢ PFD is in an unknown state during boot. â This outcome affects the boot sources within the chip (for example, eMMC, NAND). â The ROM boot code fails to properly reset the PFDs, which are used for the bootable sources within the processor (for example, SD, eMMC). In rare circumstances, this has the potential of putting the PFDs into an unknown state whereby the boot sources do not receive correct clocks and the processor subsequently fails to boot. There are additional conditions this PFD issue can be triggered, outside the boot process, if the application software does not correctly reset the PFDs. â¢ Reprogramming PLL2/ PLL3 When PLL2/PLL3, which generate the PFD clocks, are powered up from the power down state or made to go through a relock cycle due to PLL reprogramming, in rare circumstances the PFDs can enter into a similar unknown state. It is therefore required that customer application software reset the respective PFDs using the PFDx_CLKGATE bits. The PFDs can be in the clock gated state during PLL relock, but must remain clock gated until after lock is achieved. â¢ Suspend & Resume with PLL2/PLL3 bypassed The PFDs can also lose state if the PLL is configured in BYPASS mode and the PFDs are not reset correctly. If the PLL is bypassed when entering suspend, the customer application software must ensure that the respective PFDx_CLKGATE bits are set. If the PLL is not BYPASSED, then the suspend/resume functionality is not affected. See the engineering bulletin, Configuration of Phase Fractional Dividers (EB790) for procedural details : http://fsls.co/doc/EB790. 		Cortex A-9	
	NXP	IMX6DQ	Boot loader patch for SPI/I2C, Parallel NOR and SATA boot and the U-boot patch with the correct procedure to reset the PFDs is available for the Linux BSP GA release			â¢ Users who do not or cannot use SPI/I2C or SATA as a boot source option can use this option. â¢ The i.MX 6Dual/6Quad contains a watchdog timer which can be activated via fuse whenever the processor enters Serial Downloader mode. The Watchdog timer begins a 90-second countdown and, if nothing interrupts this process, the part resets. â¢ For the watchdog timer workaround, on the rare occurrence of a PFD-related (or other) boot failure, the processorâs ROM falls through to Serial Downloader mode. This occurs in either secure boot or nonsecure boot devices. If the WDOG_ENABLE eFuse has been set to 1, then, on entering Serial Downloader mode, the watchdog begins a fixed 90-second countdown. If no external source interrupts this countdown, the watchdog timer expires and resets the part. Because the PFD-related error, if encountered, does not exhibit âmemory,â the subsequent boot operates correctly. No software is required to enable this functionality, only the setting of the WDOG_ENABLE eFuse to 1. â¢ This workaround applies for all boot sources except NAND boot (either SLC or MLC). For NAND boot, the user must implement either the SPI, I2C, or SATA workaround, or the external Watchdog workaround in #3 below. â¢ Use the following steps to understand how the watchdog timer will work in your system: 1. The user must not set BOOT_CFG3[2] (Boot Frequencies). They must be left at default. 2. The user programs the WDOG_ENABLE eFuse to 1. Note this is a permanent fuse setting which means the watchdog will begin countdown upon entering Serial Downloader mode anytime the chip enters this mode and must be stopped by software to prevent reboot. 3. The WDOG_ENABLE timer has a fixed 90-second countdown. This countdown cannot be changed in hardware, only via a software command. â¢ Because it is assumed a boot failure has occurred and the ROM has dropped into Serial Downloader mode, it is assumed no software is available to reset this 90-second countdown â¢ During the countdown, the unit will continuously poll for a USB connection on USB OTG1. If no activity is detected during the 90-second window, the watchdog expires and the ARM core is reset. â¢ If no boot error occurs, then Serial Downloader mode will not be entered and the Watchdog will not begin its countdown. Only when Serial Downloader mode is entered will the watchdog begin a countdown. NOTE Note: If the WDOG_ENABLE fuse is set, users who utilize the Freescale Manufacturing Tool or a customized version of the tool must ensure the kernel that is downloaded via the tool contains the instruction to turn off the watchdog timer. Otherwise, the watchdog will continue to count down and reset the part. Workaround #3âUtilize an external Watchdog reset or other external reset: The user implements an external watchdog or other reset watch such as via a PMIC. On a successful boot, the processor toggles the external watchdog through some I/O mechanism (for example, a GPIO) which prevents the watchdog from firing. If a boot failure occurs, the external watchdog will expire, thus resetting the processor. Proposed Solution: ROM Boot PFD reset issue is fixed in Silicon revision 1.3. Application software is still required to perform a PFD reset in Silicon revision 1.3 under the following conditions: â¢ Reprogramming (relocking) PLL2/PLL3 â¢ Implementing Suspend & Resume functionality with PLL2/PLL3 bypassed Linux BSP Status: Boot loader patch for SPI/I2C, Parallel NOR and SATA boot and the U-boot patch with the correct procedure to reset the PFDs is available for the Linux BSP GA release		ROM Boot PFD reset issue is fixed in Silicon revision 1.3. Application software is still required to perform a PFD reset in Silicon revision 1.3 under the following conditions: â¢ Reprogramming (relocking) PLL2/PLL3 â¢ Implementing Suspend & Resume functionality with PLL2/PLL3 bypassed 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase starting in release rel_imx_3.10.17_1.0.0_ga		 There are two workarounds for this issue: â¢ Modify the initial address to 0x8000000 (EIM nor base address) in the plug-in before pu_irom_hwcnfg_setup is called, or â¢ Specify the plug-in runs in EIM NOR directly instead of in internal RAM 	ROM: EIM NOR boot may fail if plug-in is used 	 The issue occurs when the two conditions below are both met: â¢ EIM NOR boot with plug-in is used, and â¢ Plug-in was specified running in the on-chip RAM (OCRAM). The ROM sets 0x907000 as the initial address of the source image (0x8000000 was expected) after pu_irom_hwcnfg_setup is called. The problem occurs when the plug-in calls this function again. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 1. Burn the correct firmware address in FCB to ensure the first block of firmware is not bad. 2. Burn firmware2 into NAND. The possibility of both the first block of firmware1 and the first block of firmware2 being bad is highly unlikely. 	ERR008506 ROM: Incorrect NAND BAD Block Management [i.MX 6Dual/6Quad Only] 	 This issue occurs only when the first block in the firmware area (not FCB) is bad. If the first block of firmware area is bad, then ROM will skip to the next block to get the first 4KB data. After reading the next data block, ROM returns to the first block (which was the bad block) and ECC checking fails. Afterward, ROM will go to secondary boot because it is a NAND boot device which supports secondary boot. So firmware2 will work in this case if a secondary boot image has been burned into NAND. When the first block of the firmware area is bad, and the NAND page size is 4K or lower, this condition will occur. A bad block which is not the first one in firmware area will not cause this condition. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above			ROM: SD/EMMC/NAND prematurely times out during boot [i.MX 6Dual/6Quad Only] 	 RTC_XTALI picks up noise during crystal start up, during power up, and the boot sequence. Once the RTC crystal is stable and running, no noise interference is observed. The noise causes the RTC oscillator to output noise to an automatic multiplexer where the internal ring oscillator and the RTC oscillator are connected. If the noise contains frequency components higher than approximately 500 kHz, the output of the automatic multiplexer sends high frequency signals which causes General Purpose Timer (GPT) to count at a significantly faster rate than 32 kHz and causing a premature GPT timeout interrupt. The premature interrupt results in the boot ROM being redirected to USB serial download mode. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 None. 	ERR003761 SATA: 9000433864âCOMRESET and COMWAKE do not always contain six bursts 	 When a COMRESET or a COMWAKE is sent by the Host, it does not always send six bursts, but sometimes only five. It has been observed when OOB detection has failed, such as when COMWAKE is missed, or an error state or retry occurs. NOTE While this behavior is sufficient to complete OOB, it technically does not meet the SATA specification. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Software should ignore BAD FIS. 	SATA: 9000450053âIn SDB FIS with N-bit set, non-matching PMP field is not discarded 	 According to Section 10.11.3.1 of AHCI Specification, when an incoming SDB FIS has the N-bit set and the PMP value does not match the current port, the SATA Host controller should discard the FIS. Currently, the core delivers the FIS to the received FIS area. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Wait until the command completes before issuing a SRST, or use COMRESET/Port Reset instead. 	ERR003763 SATA: 9000448817âSoft Reset command does not SYNC-escape incoming data FIS 	 When software issues a SRST command while the device is sending a DMA Setup FIS (for a NCQ read command), it is possible that the PDMA module does not assert a tx_sync_esc signal to the Link layer, resulting in the subsequent Rx Data FIS not being SYNC-escaped. This is due to tx_xrdycoll=1 (while the TX FIFO is being cleared) in P_Idle causing a transition to CFIS_SyncEscape2, while tx_sync_esc is asserted only in the CFIS_SyncEscape state. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Software can ignore the P#IS.INFS and P#SERR.ERR_I bits when the P#IS.PRCS bit is set. 	SATA: 9000447882âERR_I bit set when PhyRdy goes low during non-data FIS reception 	 If PhyRdy goes low during reception of a non-data FIS, the ERR_I (Recovered Data Integrity) bit is set. Since deassertion of PhyRdy is not recoverable at any time, the ERR_I bit should not be set. However, according to the AHCI specification, the INFS bit should still be set if PhyRdy goes low during a non-data FIS. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. Linux libata driver avoids this issue. The GHC.IE is set after the GHC.HR is completed		 Generate global reset when all P#IS and IS bits are cleared. 	ERR003765 SATA: 9000447627âGlobal reset does not clear IS.IPS register bits when P#IS is non-zero 	 If any of the bits of the P#IS register is set when software issues global reset by setting GHC.HR=1, then the corresponding IS.IPS bit remains set, causing an erroneous interrupt (when GHC.IE=1) due to the p#_vint signal being registered/delayed from the Port module. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Disable power modes. 	SATA: 9000446485âphy_partial, phy_slumber incorrectly asserted for a power mode 	 When an outgoing TX data arriving at the Link Layer collides with an incoming Slumber power mode request, then the expected behavior for the Host is to ignore the request and send X_RDY. This causes the device to abort the power request. However, even though the response to this power request is correct, when the two events occur in the same exact cycle and internal tx_dp_rdy is also high, and at the same time, the Link State Machine is IDLE, then an internal flag is incorrectly set. Setting this flag affects a subsequent Partial mode request such that after normal power mode negotiation of the subsequent Partial request, if successful and not PMNAK, the core in some cases will assert both phy_partial and phy_slumber requests at the same time. In other cases, the core will assert just phy_slumber, instead of phy_partial. Both are incorrect behavior; only phy_partial should be asserted in this case. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. IS.CCC is not used		 None. 	ERR003767 SATA: 9000446482âhCccComplete cleared, incorrectly incremented 	 As stated in Section 5.2.2.6 of AHCI Specification: âIf increments of hCccComplete are targeted for the same cycle as the clearing of hCccComplete to 0h, the final value shall be 0h. The additional completions are aggregated into the CCC interrupt that will be signaled imminently.â The core does not aggregate the additional completions into the same interrupt. When the device returns an SDB FIS with multiple NCQ command completions (multiple SACT bits are cleared) and CCC is enabled, if a subset of those multiple bits causes IS.CCC=1 interrupt, then the remaining bits are still counted as completions through hCccComplete register increments, possibly causing more IS.CCC interrupts to be generated. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used. DPS is ignored in the Linux AHCI driver		 Software ignores IS.DPS=1. 	SATA: 9000445811âErroneous PRD interrupt assertion 	 If the PRD size is larger than the FIS size, then the SATA AHCI core asserts a PRD interrupt erroneously in the middle of a PRD data transfer. If one PRD spans more than one data FIS, the PRD interrupt asserts after the first data FIS, due to prd_i_done_q being set at the beginning of a data transmission instead of after the PRD transfer has completed. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 None. 	ERR003770 SATA: 9000451535âHang due to FIFO count change, when FIFO is cleared 	 If COMINIT is asserted during an RX data transfer (or any event causing the TX FIFO to be cleared, such as a COMRESET), then it is possible that during the TX FIFO clearing, tx_push_af=1 for one clock cycle. This causes p_dma_rrdy to negate for one clock cycle, and if this coincides with p_dma_wrresp=1, then p_dma_wrresp is extended for one extra clock cycle (so two cycles instead of one). This causes a tag FIFO coherency problem that can be fixed only by an asynchronous reset/power up. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Use COMRESET if commands are outstanding instead of soft reset. 	SATA: 9000451305âHang after incoming FIS and soft reset 	 If a software-issued soft reset collides with an incoming FIS, the core might hang and not transmit R_RDY when X_RDY is received. The behavior is caused by the Link asserting rx_firstdw and rx_dvalid for the FIS to the TCHK module after srst_req_asic=1. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Disable power modes. 	ERR003772 SATA: 9000451274âPower mode request collision causes assertion of phy_partial, phy_slumber 	 When both the Host and Device are idle and there is a collision of a Partial request from the Device and a Slumber request from software, then it is possible that both phy_partial and phy_slumber are asserted at the same time. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Use COMRESET instead of Soft Reset. 	SATA: 9000451526âHang after Soft Reset and PM Request from the Device 	 If software requests a Soft Reset and the Device sends a PMREQ at the same time, then it is possible that the SATA AHCI core could hang and only send SYNCs. This is a very rare case where the Soft Reset arrives in the Link Layer, a few cycles before the Power Request arrives from the Device. This behavior causes the Link state machine to move to sending SYNCs while waiting for SYNCs, but because it is left IDLE, the Device has already sent SYNCs and the Host should not check for them. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround#2 has been implemented in Linux BSP codebase starting in releaseL3.10.17_1.0.0_GA release		 Workaround #1: Turn off/on the SATA_VPH power supply during suspend/resume. Removing and restoring power to the SATA PHY causes the PHY to reset. This workaround requires a controllable power supply for SATA_VPH and software modification to control the supply. Workaround #2: Add a SATA PHY CR-RESET in the resume through software. This will reset the PHY and allow the link to resume. After resume is initiated, the following steps are required: â¢ Wait a minimum of 100 us to allow the MPLL time to lock â¢ Perform the PHY CR reset â¢ Wait an additional 100 us to allow the RX PLL to lock (polling CR register bit ârx_pll_stateâ This workaround has the disadvantage that since the PHY is not actually powered-down, there will be increased power consumption (approximately 21 mW on a Freescale reference design) compared to workaround #1. Workaround #3: power-down is initiated from Slumber mode, the PHY performs suspend/resume correctly. This workaround requires software modification. 	ERR007966 SATA:SATA speed negotiation fails after suspend and resume â[i.MX 6Dual/6Quad Only] 	 After suspend and resume, the SATA PHY may fail to recognize the attached SATA device. There exists a limitation in the SATA PHY that a power-down sequence can only be initiated by the hardware after entering Slumber Mode. Slumber Mode is not a mandatory feature and is not supported by all SATA devices. The consequence of this limitation is, in the suspend phase, the PHYâs reference clock will be stopped without the following necessary steps having been executed: â¢ Power down the RX PLL and RX block â¢ Power down the TX block â¢ Power down the MPLL â¢ Then set mpll_ck_off to 1âb1 and suspend the reference clock The state of the PHY on resume is undefined when these steps fail to occur. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in the Linux BSP codebase starting in release rel_imx_3.14.28_1.0.0_ga		 Use only one PRD for each command. There may be buffer allocation failures when mass read/write commands are issued when only one PRD per command is forced. To prevent the allocation failures, pre-allocate one 64 kb buffer used for mass read/write commands. 	ERR009598 SATA: PRD not flushed from PRD FIFO at command list underflow 	 When a read command returns less data than specified in the PRDs (for example, there are two PRDs for this command, but the device returns a number of bytes which is less than in the first PRD), the second PRD of this command is not read out of the PRD FIFO, causing the next command to use this PRD erroneously. For some ATA and ATAPI commands that can return less data than requested legally, this underflow case is not an error case but normal operation, and it should complete without errors (as opposed to most commands where such a condition is considered an error). The following commands are known to legally return less read data than requested: 1) ATAPI commands used to return sense data (for example, Request Sense, Inquiry, Mode Sense) 2) ATA streaming commands (for example, READ STREAM EXT, READ STREAM DMA EXT) 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 If VDD_SNVS_IN is powered from a supply other than VDDHIGH_IN (like a coin cell), then the sequence described above must be avoided. 	SNVS: SNVS_LP resets to the power OFF state 	 If the SNVS_LP module logic is reset while the processor is in a Powered-On state, the SNVS_LP will set the PMIC_ON_REQ signal during power-up to OFF (low). If PMIC_ON_REQ is being used in the design to control an external PMIC, this will cause the PMIC to turn main power to the processor off when power is removed and then restored to SNVS_LP. The SNVS_LP module logic is not reset during a power-on reset (POR) due to the nature of its function. This condition is created when the following sequence of events occurs: 1) Software issues a reset to the SNVS_LP logic by setting the HPCOMR[4] bit to 1 (which is LP_SWR). This clears the SNVS_LP registers and the bit returns to 0. 2) Then the power to VDD_SNVS_IN is removed and restored while the rest of the processor remains powered. This is a controllable event, because the application can avoid condition 1. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 The data should be shifted to the right location by the SDMA script or by the software in case of direct access to the register. 	ERR003778 SSI: In AC97, 16-bit mode, received data is shifted by 4-bit locations 	 When the SSI is configured in AC97, 16-bit mode, the Rx data is received in bits [19:4] of the RxFIFO, instead of [15:0] bits. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Do not use the following configuration: â¢ SSI is configured to AC_97 mode â¢ Transmitter and receiver are enabled â¢ The IPG_CLK and external clock ratio is higher than 1:8 	SSI: AC97 receive data may be wrong when clock ratio between external clock to ipg is higher than 1:8 	 The data in SSI gets corrupted in the following configuration: â¢ SSI is configured to AC_97 mode â¢ Transmitter and receiver are enabled â¢ The IPG_CLK and external clock ratio is higher than 1:8 The internal âignore_time_slotâ signal might deassert for 1 cycle between frames. This might result in ambiguous behavior where the synchronization and identification of âignore_time_slotâ requires 4 ipg_clk cycles to fit in a half cycle of the external clock. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.10.53_1.1.0_ga		 Use SSI in two-channel mode (TCH_EN = 1) with two FIFOs enabled (TFEN1=1, TFEN0=1). With two FIFOs in use, left channel transmit data is from FIFO0, right channel transmit data is from FIFO1. When an under-run occurs, the left channel will transmit the previous data in FIFO0, while the right channel will transmit the previous data in FIFO1. When new data is written into FIFO0/FIFO1, the left channel data is always from FIFO0, and right channel data is always from FIFO1, preventing channel swapping from occurring. Likewise when receiving data, left channel data is always stored in FIFO0 and right channel data is always stored in FIFO1. 	ERR008990 SSI: Channel swap in single FIFO mode when an underrun or overrun occurs 	 In I2S mode, with one FIFO in use, data is in the format left channel, right channel, left channel, right channel. If an under-run occurs, then the left and right channels will transmit the same previous data until new data is written to the FIFO. If the new data is valid as the right channel starts to transmit, a channel swap occurs. Likewise when receiving data, if an overrun occurs and the FIFO is emptied as the right channel data is being received, a channel swap occurs. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ			 The UTM block has a configurable bit (HW_USBPHY_CTRL.ENHOSTDISCONDETECT) to enable/disable the High Speed disconnection detection circuit. This bit should be used to disable this in Suspend, and enable after resume. 	USB: Wrong HS disconnection may be generated after resume 	 When the IC works as a USB host and one High Speed device is connected, software can put it into Suspend mode and it can wake up by a Host Resume or a remote wakeup. The UTM block drives FS-K during resume and drives SE0 as the end of the resume. Meanwhile UTM bypasses the DP/DN lines to USB controller. Once the controller detects the SE0, it will switches to High Speed. Once UTM detects it switches to High Speed, it will stop driving SE0. After that, the controller starts to send SOF through UTM. If the controller sends the SOF too fast, while the external device might still be in Full Speed mode, the SOF signal level will be 800mV which will be recognized as a High Speed disconnection. The USB controller may send the SOF packet during that period, but according to USB2.0 spec, DP/DN should keep in IDLE (SE0 state) for 1.333 Î¼s after resume to avoid this issue (the device must switch to High Speed in 1.333 Î¼s). 	No fix scheduled Linux BSP Solution: Software workaround implemented in BSP version L3.0.35_4.1.0	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 Apply VDDHIGH_IN if battery charge detection is needed. Otherwise, disable charger detection by setting the EN_B bit in USB_ANALOG_USBx_CHRG_DETECTn to 1. 	ERR006281 USB: Incorrect DP/DN state when only VBUS is applied 	 When VBUS is applied without any other supplies, incorrect communication states are possible on the data (DP/DN) signals. If VDDHIGH_IN is supplied, the problem is removed. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase starting in release L3.0.35_4.0.		 â¢ Set the host TXFIFO threshold to a large value (TXFIFOTHRES in the TXFILLTUNING register). This increases the tolerance to bus latency and avoids a FIFO underrun. â¢ Set the Stream Disable bit (SDIS) to 1 in the USBMODE register. This forces the controller to load an entire packet in the FIFO before starting to transmit on the USB bus. Hence, the FIFO never underruns. This somewhat reduces the maximum bandwidth of the USB, because there is idle time when the controller waits for the entire packet to be loaded. 	USB: Host non-doubleword âaligned buffer address can cause host to hang on OUT Retry 	 The USB host core operating in streaming mode might underrun while sending the data packet of an OUT transaction. The host then retries the OUT transaction according to the USB specification. This issue occurs during the OUT retry. The USB host might hang on OUT retry if the data buffer start address is not 4-byte aligned. This applies to both the host controller and the OTG controller in host mode. 	No fix scheduled. 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 To place the USB PHY into low power suspend mode, the following sequence should be performed in an atomic operation (interrupts should be disabled during these three steps): 1. Set the PORTSC1.PHCD bit 2. Set all bits in the USBPHY_PWD register 3. Set the USBPHY_CTRL.CLKGATE bit 	ERR004535 USB: USB suspend and resume flow clarifications 	 In device mode, The PHY can be put into Low Power Suspend when the device is not running or the host has signaled suspend. The PHY Low power suspend bit (PORTSC1.PHCD) will be cleared automatically when the host initials resume. Before forcing a resume from the device, the device controller driver must clear this bit. In host mode, the PHY can be put into Low Power Suspend when the downstream device has been placed into suspend mode (PORTSC1.SUSP) or when no downstream device is connected. Low power suspend is completely under the control of software. To place the PHY into Low power mode, software needs to set PORTSC1.PHCD bit, set all bits in USBPHY_PWD register and set the USBPHY_CTRL.CLKGATE bit. When a remote wakeup occurs after the Suspend (SUSP) bit is set while the PHY Low power suspend bit (PHCD) is cleared, a USB interrupt (USBSTS.PCI) will be generated. In this case, the PHCD bit will NOT be set because of the interrupt. However, if a remote wakeup occurs after the PHCD bit is set while the USB PHY Power-Down Register (USBPHY_PWD) and the UTMI clock gate (USBPHY_CTRL.CLKGATE) bit is cleared, a remote wakeup interrupt will be generated. In this case, all the bits in the HW_USBPHY_PWD register and the USBPHY_CTRL.CLKGATE bit will be set, even after the remote wakeup interrupt is generated, which is incorrect. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround implemented in Linux BSP codebase starting in imx_3.10.53_1.1.0_ga		 Set Stream Disable mode (USB_nUSBMODE[SDIS]=1) to prevent receive FIFO overruns. 	USB: Timeout error in Device mode 	 If a receive FIFO overrun occurs (due to a busy condition on the system bus) when the USB controller is in Device mode, the controller may stop responding to host tokens, causing current transactions to time out. This situation will be recovered after FIFO is not overrun. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround not implemented in Linux BSP. Functionality or mode of operation in which the erratum may manifest itself is not used		 uSDHC3 and uSDHC4 clock-gating controls should not be configured to gate the clocks in case RAWNAND and APBADMA are used. There are two registers in CCM that need to be configured accordingly: â¢ CCGR: Gating of the clock according to power mode â¢ CMEOR: Enable/Disable dynamic clock gating 	ERR004364 uSDHC: Limitations on uSDHC3 and uSDHC4 clock-gating 	 uSDHC3 and uSDHC4 clock-gating controls (CG and MOD_EN_OV) in CCM are gating RAWNAND and APBADMA clocks. â¢ apbhdma.hclk controlled by usdhc3_clk_root CGR â¢ rawnand.u_bch_input_apb_clk controlled by usdhc3_clk_root CGR â¢ rawnand.u_gpmi_input_apb_clk controlled by usdhc3_clk_root CGR â¢ rawnand.u_gpmi_bch_input_bch_clk controlled by usdhc4_clk_root CGR 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	A software workaround is possible but it hasn't been implemented in the Linux BSP yet. BSP functionality may be affected in some configurations and use cases as described above. Users should evaluate their specific use case and apply the recommended workaround to prevent the occurrence of this erratum. Please contact your support channel if you have any questions or concerns		 Use SDMA (or ADMA1) in case the AHB latency is larger than the âminimal time for one blockâ. 	uSDHC: ADMA Length Mismatch Error may occur for longer read latencies 	 When a multi-block read command is triggered, the controller starts to send read commands and receives data from the card. After one block of data is received, the expected block count number will be updated (minus 1). Meanwhile the DMA engine starts to fetch the ADMA descriptors through the AHB bus. The descriptor contains two AHB SINGLE bus accesses for ADMA2 and one AHB SINGLE bus access for ADMA1. The DMA engine then loads the expected block count. If the total latency of these AHB SINGLE bus accesses is longer than the latency for one block to be read from the card, an incorrect block count is loaded by the DMA engine. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release rel_imx_2.6.38_11.11.01		 Before start of H.264 encoder from direct mode, clear the register that generates interrupt by software reset. 	ERR004345 VPU: Wrong interrupt is generated sometimes when context switch- ing to H.264 encoder, during multi-instance 	 Wrong interrupt is generated sometimes when context switching to H.264 encoder, during multi-instance. For example, â¢ From decoders (which use NAL unit, such as H.264, AVC, and VC1) to H.264 encoder â¢ From H.264 to H.264 with different instance â¢ H.264 dec to RV dec and RV dec to H.264 enc There are two modes in SPP (Stream Pumping processor) of VPU: direct mode and descriptor mode. SPP âsdma_ctrlâ block generates internal interrupt when switching from direct mode to descriptor mode. The interrupt keeps high and this affects H.264 encoder (H.264 encoder uses descriptor mode). 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround cannot be implemented to mask or workaround this SoC issue. This erratum will result in impacted or reduced functionality as described above		 No software workaround. 	VPU: Cannot decode Sorenson Spark Version 0 bitstream 	 The bitstream of Sorenson Spark codec has two versions: Version 0 and Version 1. This issue causes the VPU to fail to decode Version 0 bitstream (sequence initialization error) because the VPU cannot find the start code and returns the SEQ_INIT error for decoding a Version 0 bitstream. The VPU can decode a Version 1 bitstream. 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Workaround possible but not implemented in the BSP, impacting functionality as described above		 If the remaining bitstream in the bitstream buffer is less than 8 bytes, then the application should fill 0âs until there are 8 bytes in the buffer. This will allow VPU to read out and decode properly. 	ERR004361 VPU: VPU does not work in case of smaller chunk size in SSP (stream- ing pump processing) 	 VPU will not work in case of: â¢ Smaller chunk size (less than 8 bytes) bitstreaming process in SPP (streaming pump processing) mode â¢ Low bit rate â¢ Low-resolution video application 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 A VPU firmware workaround exists which requires the VPU to run at 350MHz for decoding 1080p@30fps for video that displays this issue. 	VPU: Causes a macro-block of P-picture decoding error 	 Causes a macro-block of P-picture decoding error which results in degradation of visual quality. Conditions: This bug occurs when all of the following conditions are true at the same time: â¢ The sign bias flag for the neighborhood macro-block (MB) of the reference frame differs from the sign bias flag of the current MB in the reference frame â¢ The motion vector of neighborhood MB is not zero (left or above) â¢ The (negated) motion vectors in the left and above MBs are same 	No fix scheduled 	Cortex A-9	
	NXP	IMX6DQ	Software workaround integrated in Linux BSP codebase starting in release imx_3.0.35_4.1.0		 The WDOG SRS software reset bit should be written twice within one period of the 32 kHz clock. 	ERR004346 WDOG: WDOG SRS bit requires to be written twice 	 In order to initiate a software reset through WDOG, the SRS bit should be written twice. 	No fix scheduled 	Cortex A-9	
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  16  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  MDR1 access can freeze UART module  	  Software has to wait at least (2 timer interface clock cycles + 1 timer functional clock cycle) after L4 clock wakeup before reading TCRR, TCAR1 or TCAR2 registers for GPTimers in POSTED internal  synchronization mode, and before reading WCRR register of the Watchdog timers . The same workaround must be applied before reading 32KSYNCNT_CR register of the 32K sync module.  	 1.1  Delay needed to read some GP timer, WD timer and sync timer registers after wakeup  	  If a General Purpose Timer (GPTimer) is in posted mode (TSICR.POSTED=1), due to internal  resynchronizations, values read in TCRR, TCAR1 and TCAR2 registers right after the timer interface clock (L4) goes from stopped to active may not return the expected values. The most common event leading to this situation occurs upon wake up from idle.  GPTimer non-posted synchronization mode is not impacted by this limitation.  This limitation also impacts read from Watchdog timers WCRR registers.  All the watchdog timers support only POSTED internal synchronization mode. There is no capability to change the internal synchronization scheme to NON-POSTED by software.  The 32KSYNCNT_CR register is also impacted by this limitation, since the 32K sync timer is always in posted synchronization mode.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  17  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  DSI: Minimum Of 2 Pixels Should Be Transferred Through DISPC Video Port  www.ti.com  	  To ensure this problem does not occur, the following software initialization sequence must be used each time MDR1 must be changed:  1. If needed, setup the UART by writing the required registers, except MDR1  2. Set appropriately the MDR1.MODE_SELECT bit field  3. Wait for 5 L4 clock cycles + 5 UART functional clock cycles  4. Clear TX and RX FIFO in FCR register to reset its counter logic  5. Read RESUME register to resume the halted operation  Step 5 is for IrDA mode only and can be omitted in UART mode.  	 1.2  MDR1 access can freeze UART module  	  Because of a glitchy structure inside the UART module, accessing the MDR1 register may create a dummy underrun condition and freeze the UART in IrDa transmission. In UART mode, this may corrupt the transferred data(received or transmitted).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  18  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI: Cancel Tearing Effect Transfer  	  If sending a single pixel is needed, the OCP L4 slave port can be used (through CPU or sDMA).  	 1.3  DSI: Minimum Of 2 Pixels Should Be Transferred Through DISPC Video Port  	  Minimum number of pixels for MIPI command mode from the video port should be greater than 1 (at least 2). Image with less than 2 pixels is not expected to be used in a real applicative use case.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  19  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  DSI: RX FIFO Fullness  www.ti.com  	  Always wait for tearing effect to complete before changing any configuration.  	 1.4  DSI: Cancel Tearing Effect Transfer  	  Transfer using tearing effect cannot be cancelled (writing TE_SIZE to 0). Writing TE_SIZE would have no effect and transfer would continue.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  20  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI: Access Restriction On DSI_TIMING2 Register  	  Use only programming model provided in Programming Model section in the TRM.  	 1.5  DSI: RX FIFO Fullness  	  RX FIFO fullness can be incorrect just after a FIFO read. FIFO fullness should be read only once at the beginning of the transfer. Other accesses during a transfer are not guaranteed.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  21  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  DSI: Tx FIFO Flush Is Not Supported  www.ti.com  	  User must check that the TxByteClkHS clock is activated before initiating any write access to  DSI_TIMING2 register.  To ensure the TxByteClkHS clock is active, the user must check:  1. PLL is locked (DSI_PLL_STATUS register; DSI_PLL_LOCK bit)  2. DSIPHY must be in ON power state (PWRCMDON).  3. Clock/Data lane positions are correctly set (DSI_COMPLEXIO_CFG1.xxx_POSITION).  	 1.6  DSI: Access Restriction On DSI_TIMING2 Register  	  This register must not be written twice when TxByteClkHS is stopped to avoid L4 OCP port deadlock.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  22  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  sDMA Channel Is Not Disabled After A Transaction Error  	  User must perform module software reset when a transfer is aborted.  	 1.7  DSI: Tx FIFO Flush Is Not Supported  	  Executing a FIFO flush does not properly clean the logic, thus resulting in unpredictable behavior of the module.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  23  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  DSI SOF Packet Not Send  www.ti.com  	  Whenever a transaction error is detected on a transaction on the write side of the channel i, software must disable the channel(i) by setting the DMA4_CCRi[7] ENABLE bit to 0.  	 1.8  sDMA Channel Is Not Disabled After A Transaction Error  	  In case of destination synchronized transfer on the write port (or source sync with SDMA.DMA4_CCRi[25]  BUFFERING_DISABLE = 1), if a transaction error is reported at the last element of the transaction, the channel is not automatically disabled by DMA.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  24  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  SIMCOP Lens Distortion Correction issue  	  In case of command mode where DDR clock should be provided to peripheral before data, the  workaround is to program DDR_CLK_PRE =! 0. The value of DDR_CLK_PRE must take into account the different timings: TCLK_PREPARE, TCLK_ZERO.  Sequence to enable the DSI:  1. Set the ForceTxStopMode bit to 1 (DSI_TIMING1 register). This asserts the ForceTxStopMode.  2. Enable virtual channel in command mode / Enable DSI interface.  3. Poll the ForceTxStopMode bit to 0 (DSI_TIMING1 register) until deassertion of the ForceTxStopMode bit. The hardware resets this bit at the end of the counter value.  4. Send SOF(0x00000000) packet in command mode.  	 1.9  DSI SOF Packet Not Send  	  The first packet in command mode is not sent due to inaccurate clock gating.  Root cause description: In command mode when DDR_CLK_ALWAYS_ON and IF_EN are set to 1, DDR  clock is not present immediately after the IF_EN bit is set to 1 but when the first HS packet from OCP is ready to be sent to PPI HS link.  The DDR_CLK_PRE field is used between the start of the DDR clock and the assertion of the data request signal. After the time defined by the DDR_CLK_PRE field, the clock lane is always present until the IF_EN bit is set to 0. So, there is a delay between IF_EN set to 1 and assertion of the clock lane.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  25  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  ISS: SOFTRESET Bit Status Not Working For Circular Buffer  www.ti.com  	  Use LDC in YUV422 mode.  	 1.10 SIMCOP Lens Distortion Correction issue  	  SIMCOP LDC module doesn't reach 100 MPix/s target in bilinear mode for YUV420 data.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  26  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ISS: SOFTRESET Bit Status Not Working For Burst Translation Engine  	  Ignore status of the the SOFTRESET bit. After a software reset, wait a few cycles before using the module.  	 1.11 ISS: SOFTRESET Bit Status Not Working For Circular Buffer  	  The SOFTRESET bit of the SYSCONFIG register inside CBUFF (CBUFF_HL_SYSCONFIG[0]  SOFTRESET) is set to 0x0 (reset done state) after reset only if CBUFF is out of IDLE.  While CBUFF slave data port is in IDLE, the SOFTRESET bit is always set to 0x1 (status bit gives an ongoing reset, but reset is finished).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  27  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  ISS State Can Be Corrupted During Debug Mode  www.ti.com  	  Ignore the status of the SOFTRESET bit. After a software reset, wait a few cycles before using the module.  	 1.12 ISS: SOFTRESET Bit Status Not Working For Burst Translation Engine  	  The SOFTRESET bit of the SYSCONFIG register inside BTE (BTE_HL_SYSCONFIG[0] SOFTRESET) is  set to 0x0 (reset done state) after reset only if BTE is out of IDLE.  While BTE slave data port is in IDLE, the SOFTRESET bit is always set to 0x1 (status bit gives an ongoing reset, but reset is finished).  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  28  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI VSYNC HSYNC Detection In Video Mode  	  To avoid read access from being stalled, the CPU must have the priority. This can be configured in the ISP5_MPSR register. Dummy accesses during frame processing lead to data corruption however  response is given immediately. This register can be used to avoid stalling debug accesses. Dummy data is returned in that case but does not hurt functionality because debug accesses do not make sense while ISP5 is processing data.  	 1.13 ISS State Can Be Corrupted During Debug Mode  	  Debug read operations should not impact the internal state of the module.  That cannot be guaranteed because debug reads of some locations can impact DMA requests. Also, some read accesses may be stalled for a long time while ISP operation is ongoing.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  29  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Dual Video Mode  www.ti.com  	  Because before first VSYNC rising edge, one HSYNC is transmitted and clock is transmitted during that HSYNC period, the workaround is to have the HSYNC period of DISPC longer than the timing described below:  •  Configuration with line buffers: 3 VP_PCLK + 6 VP_CLK + 6 DSI_CLK  •  Configuration without line buffers: 3 VP_PCLK + 2 VP_CLK  There is no need to take care of some timings related to enabling the IF_EN, VC_EN, LCD output of the DSIPC.  	 1.14 DSI VSYNC HSYNC Detection In Video Mode  	  DSI engine is not always detecting the first VSYNC HSYNC signals received on the video port in video mode.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  30  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Deadlock Between DISPC And DSI When PCD = 2, VP_CLK_RATIO = 0  	  No  	 1.15 Dual Video Mode  	  When two video ports are available at the input of the DSI protocol engine, the two streams are interleaved by the DSI protocol engine. Only one video mode is supported by the current implementation on VP1 only. VP2 cannot be in video mode even if VP1 is not in video mode.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  31  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Deep Power-Down Support During Off Mode  www.ti.com  	  DISPC_DIVISORi[7:0] PCD = 2 is not supported, where i = 1 to 3. DISPC should be set to  DISPC_DIVISORi[7:0] PCD = 3 or above and DSI_CTRLi[4] VP_CLK_RATIO to 0x1.  	 1.16 Deadlock Between DISPC And DSI When PCD = 2, VP_CLK_RATIO = 0  	  The buffer handshake feature in the DISPC avoids underflow of the DISPC DMA FIFO. The fullness of the DISPC DMA FIFO is checked before providing data to the pipeline when STALL signal is inactive. When the FIFO hand check feature is activated, the pixel transfer to the DSI module during STALL inactivity period can be stopped (no DISPC_PCLK pulse) and restarted when there is enough data in the FIFO. The DSI protocol engine is configured in command mode.  On video port 1 in command mode, when DISPC_DIVISOR1.PCD = 2,  DISPC_CONFIG1.BUFFERHANDCHECK = 1 and DSI_CTRL.VP_CLK_RATIO = 0, the FRAMEDONE  IRQ might not be triggered and TE_SIZE counter might not be decremented to 0. This is caused by a deadlock between the DISPC and DSI modules during the transfer of the last pixel of a line  On video port 2 in command mode, when DISPC_DIVISOR2.PCD = 2,  DISPC_CONFIG2.BUFFERHANDCHECK = 1 and DSI_CTRL2.VP_CLK_RATIO = 0, the FRAMEDONE  IRQ might not be triggered and TE_SIZE counter might not be decremented to 0. This is caused by a deadlock between the DISPC and DSI modules during the transfer of the last pixel of a line.  The DSI protocol engine sends a STALL to the DISPC (stall mode); in parallel the DISPC stops the pixel clock to the DSI because it is waiting for its FIFO DMA to be refilled (buffer handcheck feature). When FIFO DMA is refilled, the DISPC being in stall mode does not provide back the pixel clock to the DSI to deassert the stall and it does not send the last pixel to the DSI.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  32  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  RTA Feature Is Not Supported  	  Software workaround:  •  Before getting into off mode, force the value stored in the control module  EMIF_SDRAM_REF_CTRL.REG_INITREF_DIS to 1.  –  This forces the value for the EMIF register to 1 when its content is restored when returning from off mode.  •  When returning from off mode, and before making any access to the memory in DPD state:  1. Put CORE PLL in MN bypass mode CM_CLKMODE_DPLL_CORE.DPLL_EN = 0x4.  2. Program the DLL override CM_DLL_CTRL.DLL_OVERRIDE = 1.  3. Force the configuration field EMIF_SDRAM_CONFIG.REG_SDRAM_TYPE register to 0x1  (reserved), then back to 0x4 (LPDDR2-S4) or 0x5 (LPDDR2-S2) according to memory  configuration. This forces the controller back into its init state instead of self-refresh state.  4. Reconfigure EMIF_SDRAM_REF_CTRL.REG_INITREF_DIS to 0.  5. Perform normal init phase as from global cold reset.  	 1.17 Deep Power-Down Support During Off Mode  	  When coming out of off mode, the memory controllers assume connected SDRAMs to be in self-refresh mode.  The EMIF receives a DEVICE_OFFWKUP_CORERSTACTST signal from the PRCM defining if an EMIF  cold reset was due to a global reset or to exiting off mode;  •  In case of a global cold reset, the full SDRAM init phase is performed.  •  In case of off mode exit, only the self-refresh exit sequence is performed and auto-refresh commands are immediately sent.  If the memory was in deep power-down state during the chip off mode, the sequence performed by EMIF  could result in an unexpected behavior on the memory side. Exit from DPD actually requires the same full init sequence as after a global cold reset.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  33  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  MMCHS_HCTL.HSPE Is Not Functional  www.ti.com  	  PRM_LDO_SRAM_<Memory Voltage Domain>_SETUP[0] DISABLE_RTA_EXPORT default value is  loaded by an eFuse value. The fuse value disables this RTA feature, so these bits must be kept at default value.  	 1.18 RTA Feature Is Not Supported  	  RTA (retention till access) feature is not supported and leads to device stability issues when enabled.  The following modules are embedding memories with RTA support:  •  MPU subsystem (cache memories)  •  OCM RAM  •  SGX  •  Display subsystem  •  HS USB OTG  •  IVA-HD subsystem  •  Face detect  •  Imaging subsystem  •  DMM  •  DSP subsystem  •  AESS  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  34  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Wrong Access In 1D Burst For YUV4:2:0-NV12 Format  	  None  	 1.19 MMCHS_HCTL.HSPE Is Not Functional  	  Due to design issue MMCHS_HCTL.HSPE bit does not work as intended. This means that the  configuration must always be the normal speed mode configuration (MMCHS_HCTL.HSPE=0).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  35  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Status of DSI LDO Is Not Reported to DSI Protocol Engine  www.ti.com  	  If YUV4:2:0-1D burst is required:  •  Set DISPC_VIDp_ATTRIBUTES[22]DOUBLESTRIDE to 0x0 and  DISPC_VIDp_ATTRIBUTES[13:12]ROTATION to 0x1 or 0x3  	 1.20 Wrong Access In 1D Burst For YUV4:2:0-NV12 Format  	  When in YUV4:2:0 format in 1D burst, the DISPC DMA skips lines when fetching Chroma sampling.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  36  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI Break Frame Corrupt OnGoing Transfer  	  There is no workaround to check HW status of DSI LDO.  The LDO_POWER_GOOD_IRQ should be disabled by keeping or setting  DSI_IRQENABLE.LDO_POWER_GOOD_IRQ_EN to 0x0.  	 1.21 Status of DSI LDO Is Not Reported to DSI Protocol Engine  	  The DSI-PHY has an internal LDO. This LDO is used to convert 1.8V coming from VDDS_DSI input into 1.2V for appropriate DSI voltage level.  An internal LDOPWRGOOD signal output by the DSI_PHY indicates the status of the LDO (LDO is up or is down). This signal should be connected to the DSI protocol engine for IRQ reporting  (LDO_POWER_GOOD_IRQ).  This signal is not connected to the DSI protocol engine and input of protocol engine is tied to 0x0.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  37  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  HSI Error Counters Cannot Be Disabled  www.ti.com  	  No workaround identified.  	 1.22 HSI Break Frame Corrupt OnGoing Transfer  	  When a break frame is sent in the middle of data transfers (DMA based),in pipelined flow or synchronized flow, one Tx data frame will be overwritten at the transmitter side by an all-zeros frame (break is received correctly).  Table 1-1. Data Corruption Example  Transmitted Data:  Received Data:  0x77CFA0B0  0x77CFA0B0  0xDFFC7B49  0x00000000 <- break frame and data last  0x5BE7AD07  0x5BE7AD07  0x7F7F1BC8  0x7F7F1BC8  ....  ....  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  38  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  McPDM/DMIC Issue With Software Reset With SW_xx_RST  	  To disable error reporting:  •  Set HSR_COUNTERS_Pp[19:0] FT counter to max value (0xFFFFF)  •  Set HSR_COUNTERS_Pp[23:20] TB error to min value (0x0)  	 1.23 HSI Error Counters Cannot Be Disabled  	  The counter configuration capabilities include start (begin counting), stop (halt counting), and load (set time-out period).  It is not possible to disable the frame time-out and tailing bit error counters. Setting value 0 in HSR  counters (HSR_COUNTERS_Pp[23:20]TB = 0x0 and HSR_COUNTERS_Pp[19:0]FT = 0x0) disables  those counters, whereas errors keep being generated with this value.  In transient setup phases where TX and RX data rates are still not aligned, false errors may be reported by HSR. Because HSR halts the reception upon an error (until the error is acknowledged) communication will be broken. In such circumstances, inability to disable error detection may be a critical problem.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  39  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  UART: Extra Assertion of UARTi_DMA_TX Request  www.ti.com  	  Follow the programming model below to disable and enable the channels:  •  Disable the channels:  –  Set the MCPDM_CTRL.SW_xx_RST bit to 1.  –  Disable all channels.  –  Set the MCPDM_CTRL.SW_xx_RST bit to 0.  •  Enable the channels:  –  Set the MCPDM_CTRL.SW_xx_RST bit to 1  –  Enable necessary channels.  –  Set the MCPDM_CTRL.SW_xx_RST bit to 0.  Note: SW_xx_RST is either MCPDM_CTRL_SW_UP_RST, CPDM_CTRL_SW_DN_RST, or  DMIC_CTRL.SW_DMIC_RST.  	 1.24 McPDM/DMIC Issue With Software Reset With SW_xx_RST  	  When transferring a data on McPDM uplink path, if the McPDM uplink path is reset by  MCPDM_CTRL.SW_UP_RST, uplink FIFO is correctly reset but the dma pending signal is kept asserted.  This can result in an invalid access by the host DMA to uplink FIFO.  The same applies to DMIC if reset by DMIC_CTRL.SW_DMIC_RST.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  40  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  USB OTG Software Initiated ULPI Accesses To PHY Registers Can Halt the Bus  	  Use TX_THRESHOLD+TRIGGER_LEVEL <= 63 (TX FIFO Size - 1).  	 1.25 UART: Extra Assertion of UARTi_DMA_TX Request  	  UART TX with a DMA THRESHOLD default configuration of 64 bytes would result in extra DMA Req  assertion when FIFO tx_full is switched from high to low.  This is because of the TX THRESHOLD added in ES2.0 compared to ES1.0.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  41  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  ISS-SIMCOP: ISS-LSC Not Transparent After Prefetch Error Event  www.ti.com  	  If possible do not use software initiated reads/writes to access the PHY ULPI registers. Depending on the PHY, there may be a possibility to access these registers by I2C.  If the USB OTG is host, another workaround consist in putting the bus in suspend mode with low-power mode disabled when willing to read/write an ULPI PHY register:  •  Disable PHY low-power mode (Power:EnableSuspendM=0)  •  Execute USB SUSPEND.  •  Do the ULPI register read/write  •  Execute USB RESUME  •  Restore Power:EnableSuspendM.  If the USB OTG is peripheral, another workaround consists in using the 1-2us time frame after  reception of SOF, before any transfer begins on the bus:  •  Enable the SOF interrupt  •  Program the ULPIReg registers except the ULPIRegControl:D0 bit  •  When the SOF interrupt fires, set the ULPIRegControl:D0 bit to make the access  •  Disable the SOF interrupt  	 1.26 USB OTG Software Initiated ULPI Accesses To PHY Registers Can Halt the Bus  	  Software initiated read/write accesses to the PHY ULPI registers (that is, when using USB OTG ULPIReg registers) may be wrongly mixed up with USB OTG Tx traffic. Due to this corruption the USB OTG will detect a Vbus error or a Babble error (logged in IntrUSB register), and halts the communication.  Hardware initiated accesses to the PHY ULPI registers are not impacted because they occur during connect, disconnect, suspend, and resume, when there is no USB traffic. Only software initiated accesses are impacted, and only when there is on-going USB Tx transfers.(including SOF in host mode) Software initiated accesses during connect, disconnect, suspend, and resume are not impacted. Host and  peripheral modes are impacted.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  42  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  UART: In an RX Wake-up Mechanism, the First Received Character Can be Lost  	  None  	 1.27 ISS-SIMCOP: ISS-LSC Not Transparent After Prefetch Error Event  	  The prefetch error event (PREFETCH_ERROR) is triggered when the gain table is read too slowly from SDRAM. When this event is pending the module should go into transparent mode, meaning LSC should copy input pixels to output pixels (output=input). Actually, when the prefetch error event occurs the LSC  module outputs black pixels.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  43  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Platform Hangs When CPU Tries To Configure The EMIF Firewall  www.ti.com  	  This is a known behavior and is dependant on the speed of response of the PRCM module to a wakeup.  The CTS wake-up mechanism should be preferred when it is possible.  	 1.28 UART: In an RX Wake-up Mechanism, the First Received Character Can be Lost  	  When an RX wake-up mechanism is used for the UART module, the first character received can be lost.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  44  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DDR PHY Must be Reset After Leaving OSWR  	  The workaround is to make sure that the other CPU is not doing external accesses through EMIF when a CPU is updating the EMIF firewall.  The issue does not occur with the other initiators because they do not share the bridge before the L3  interconnect.  	 1.29 Platform Hangs When CPU Tries To Configure The EMIF Firewall  	  The issue occurs during concurrent accesses of CPU0 and CPU1 as described below. If one CPU fetches code from external RAM while the other CPU requires the access to the EMIF firewall (configuring its register REGUPDATE_CONTROL), then both CPUs hang.  The issue occurs because when REGUPDATE_CONTROL.BUSY_REQ is activated, the interconnect  blocks the accesses. Because the two CPUs of the MPUSS use the same bridge before the L3  interconnect, this bridge is saturated if one CPU is accessing external RAM.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  45  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Async Bridge Corruption  www.ti.com  	  If bus keeper mode is used, issue a PHY reset after leaving OSWR, set bit [10] to 1 at the following address (using read modify write to this register to keep other bits):  •  Assert PHY reset for EMIF1 @ x 4C00 0060  •  Assert PHY reset for EMIF2 @ x 4D00 0060  Because this resets the command line, this reset must be done when memory is in self-refresh mode.  	 1.30 DDR PHY Must be Reset After Leaving OSWR  	  If bus keeper mode is used (programmed through CONTROL_LPDDR2IO*_*.LPDDR2IO*_GR*_WD) after  leaving open switch retention, it is necessary to reset the DDR PHY. Otherwise the LPDDR2 memory cannot be accessed.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  46  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  USB HOST - Impossible To Attach a FS Device To An EHCI Port. Handoff To OHCI Is Not Functional 	  All the initiators connected through async bridge must ensure that data path is properly drained before issuing WFI. This condition is met if one strongly ordered access is performed to the target right before executing the WFI.  	 1.31 Async Bridge Corruption  	  If data is stalled inside an asynchronous bridge because of back pressure, it may be accepted multiple times, thus creating pointer misalignment that corrupts next transfers on that data path until the next reset of the system (no recovery procedure once the issue is hit, the path remains consistently broken).  The async bridge can be found on the path between MPU to L3 interconnect (to EMIF) and Cortex M3 to L3 interconnect (to EMIF).  In the OMAP4460 and OMAP4470 devices, direct path from MPU to EMIF (through memory adapter in  MPU-SS) is replacing MPU-to-DMM path, which was taking place in the OMAP4430. Hence, in an  OMAP4460 or OMAP4470 device, this bug is not impacting the direct path from MPU to EMIF (through memory adapter in MPU-SS).  This situation can happen only when the idle is initiated by a master request disconnection (which is trigged by software when executing WFI).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  47  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  USB HOST EHCI - Port Resume Fails On Second Resume Iteration  www.ti.com  	  Only attach FS devices to OHCI ports, or use a HS hub to interface between EHCI ports and LS/FS/HS  devices.  	 1.32 USB HOST - Impossible To Attach a FS Device To An EHCI Port. Handoff To OHCI Is  Not Functional  	"  It is not possible to perform USB transactions with a FS device on port USB_B1/B2.  EHCI is able to detect the device, reset it and find that it is a FS device. SW will then hand off the port to OHCI by setting PORTSC[5]:PO (PORT OWNER) bit.  OHCI is able to detect the connection, but then cannot communicate with the device.  When the PHY switches to FsLsSerialMode, the ULPI DIR signal will go to 1 forever.  In HS mode, if DIR is 1, then the ULPI DATA switch to ""input only"" mode. This input only configuration is wrongly kept after switching to FsLsSerialMode, hence USB transactions cannot occur.  Attaching a FS device directly to an OHCI port is working fine.  "	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  48  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  System I2C hang due to miss of Bus Clear support  	  After setting the suspend bit, switch the internal clock supply from the external ULPI_CLK provided by the PHY to the internal 60 MHz clock.  This will allow the internal counter to reach 18. Then after 1ms, switch back to the external ULPI_CLK.  This switch can be done thanks to the CM_L3INIT_HSUSBHOST_CLKCTRL[25:24]:CLKSEL_UTMI_P1/2  bits.  During the application of the WA, the  CM_L3INIT_HSUSBHOST_CLKCTRL[9:8]OPTFCLKEN_UTMI_P1/2_CLK optional clocks need to be  enabled.  	 1.33 USB HOST EHCI - Port Resume Fails On Second Resume Iteration  	  When entering USB suspend mode, the EHCI will automatically ask the PHY to enter low power mode (PHY function control register bit suspendM is reset).  The PHY will then cut the ULPI_CLK after a minimum of 5 clock cycles.(no maximum specified).  On the other hand, the EHCI embeds a counter counting up to 18 before cutting the internal clock after suspend signal is asserted.  Since the PHY cuts the clock prematurely, the counter is not reaching 18. However, the first suspend and resume will work correctly.  At the second suspend sequence, since the counter has maintained the value (thanks to retention flops), the counter reaches 18 and cuts the clock internally.  As a consequence, the internal state machine does not transition to the correct state causing the next resume to fail.  Both host initiated resume and remote wakeup are impacted by this issue.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  49  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  HSI: Issues In Suspending and Resuming Communication (HSR and HST)  www.ti.com  	  I2C SW handler could be programmed to detect such a locked situation. In this case, it will check the Bus Busy bit and issue the needed clock pulses.  	 1.34 System I2C hang due to miss of Bus Clear support  	  There is no H/W mechanism preventing violating below I2C Bus clear standard requirement.  If the data line (SDA) is stuck LOW, the master should send 9 clock pulses. The device that held the bus LOW should release it sometime within those 9 clocks. If not, then use the HW reset or cycle power to clear the bus.  Sys_Warmreset doesn't reset the I2C IP at Phoenix level, it does at IC level.  Resetting the IP at Phoenix PMIC would avoid such situation, but this is partial answer as many other I2C  slave devices could be addressed during Warm reset without any sensitivity to this sys_warmreset pin.  No other reset source possible at Phoenix level to reset the I2C controller (only Cold Reset).  So, once the situation is reached, IC is seeing bus busy status bit.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  50  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI: Issue with SW reset  	  If this is the HST initiative:  It is not possible to configure MODE_VAL bit to SLEEP with active data transfers because it has no impact.  The only way to suspend then resuming a HSI communication with HST is to disable then re-enables active TX FIFOs.  If this is the HSR initiative:  There is no way to suspend then resume the receiver without data loss.  	 1.35 HSI: Issues In Suspending and Resuming Communication (HSR and HST)  	  There are some fails while suspending then resuming on going HSI communication on both HST and HSR  initiatives.  If this is the HST initiative:  1. It is possible to suspend then resume communication by disabling then enabling active HST FIFOs through HST_MAPPINGf [0] ENABLE bit. Transmission stops as soon as TX FIFO is disabled  (ENABLE bit equal to 0x0) and resumes as soon as TX FIFO is re-enabled (ENABLE bit equal to 0x1).  2. It is not possible to suspend then resume safely by setting HST mode to SLEEP. Writing  HST_MODE_Pp[1:0] MODE_VAL = 0x0 (SLEEP) does not have any impact on transmission that  continues.  If it is the HSR initiative:  1. It is not possible to suspend then resume communication by disabling then enabling active HSR FIFOs through HSR_MAPPINGf [0] ENABLE bit. Disabling the RX FIFO does not stop the transmission (by  dropping the READY line). The data keeps being sent by HST and HSR simply discards it. By the way, no RX mapping error is generated. Transmission did not actually stop and frame is lost by HSR.  2. It is not possible to suspend then resume safely by setting HSR mode to SLEEP. Writing  HSR_MODE_Pp[1:0] MODE_VAL = 0x0 (SLEEP) stops any ongoing transfer unconditionally which  may result in loss of frame(s) once the transfer is resumed.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  51  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  DMA4 generates unexpected transaction on WR port  www.ti.com  	  Use the HW reset from the PRCM instead of the local SW reset.  	 1.36 HSI: Issue with SW reset  	  There is a bug in HSI IP;once the SW reset bit is set through the HSI_SYSCONFIG[1] SOFTRESET bit, the SW reset is not propagated well if there is an on-going reception.  If the reception never ends (synchronization loss, interrupted transmission from transmitter...), then this is a deadlock, the SW reset is not propagated and there is no OCP access possible.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  53  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  DMA4 channel fails to continue with descriptor load when Pause bit is cleared  www.ti.com  	  There is a software workaround to solve this issue  1. Work around to resolve both Data Integrity and Performance issue :  52  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DMA4 generates unexpected transaction on WR port  •  Dummy enable-disable for an aborted Channel. i.e. On abort, configure the channel as soft sync with No of frames = 0 and enable the channel by writing 0x1 into the ENABLE bitfield of register DMA4_CCRi. Wait for the Address Misaligment Interrupt. The channel is now ready for reuse.  •  Ensure that clean drain happens for a channel that is or is to be used as part of a channel chain.  i.e. ensure that the abort conditions never occur for this channel  •  If a channel gets aborted, do not reuse the channel in a chain  •  Don't use channel chaining  2. Work around to resolve the data integrity only.  Disable prefetch in all channels that are part of a channel chain  	 1.37 DMA4 generates unexpected transaction on WR port  	  The DMA4 channel generates an unexpected transaction on WR port under the following 2 scenarios :  •  Scenario 1  1. Software synchronization : Bit fields SYNCHRO_CONTROL and SYNCHRO_CONTROL_UPPER  are set to 0 in register DMA4_CCRi  Channel element number : Bit field CHANNEL_ELMNT_NBR is set to 0x9 in register DMA4_CENi  Channel frame number : Bit field CHANNEL_FRAME_NBR is set to 0x1 in register DMA4_CFNi  Element size : Bit field DATA_TYPE is set to 0x2 in register DMA4_CSDPi  Destination addressing mode : Bit field DST_AMODE is set to 0x1 in register DMA4_CCRi  Destination is packed : Bit field DST_PACKED is set to 0x1 in register DMA4_CSDPi  Destination endianism : Bit field DST_ENDIAN is set to 0x0 in register DMA4_CSDPi  Destination burst enable : Bit field DST_BURST_EN is set to 0x1 in register DMA4_CSDPi  Destination start address : Register DMA4_CDSAi is set to 0xabcd0000  Disable graphics operation : Bit fields CONSTANT_FILL_ENABLE and  TRANSPARENT_COPY_ENABLE are set to 0x0 in register DMA4_CCRi  The channel has got an ERR response on the WR port before the end of block transfer. The  channel has gone for clean abort and got disabled. The same channel has been configured with  soft-sync and included in the channel chaining (This channel is not the head of the chain). When this channel gets enabled through the link, the channel is writing the data out as soon as it fetches the data from Read side. It is expected that the channel should go with burst transfer, but it is going for single transfers  This results in a performance issue as DMA is executing single transfers instead of burst transfers.  This performance issue is also observed while using the channel with destination synchronization and prefetch enabled.  2. Destination sync with Prefetch enabled : Bit field SEL_SRC_DST_SYNC is set to 0x0 ; Bit fields SYNCRO_CONTROL_UPPER and SYNCRO_CONTROL should not be set to 0x0 ; Bit field  PREFETCH is set to 0x1 in register DMA4_CCRi The other settings remain same as in use case  #a described above  •  Scenario 2  The channel has got an ERR response on the WR port before the end of block transfer. The channel has gone for clean abort and got disabled. The same channel has been configured with destination-sync with prefetch enabled and included in the channel chaining (This channel is not the head of the chain). When this channel gets enabled through the link, the read port will start its transaction. If the HWR request to this channel comes before the channel gets its first response, the channel will start a WR transaction with byte enable 0. Also, the internal data counters get updated and the corresponding data will never come out of DMA4. The Data FIFO locations are also not recovered.  This results in a Data Integrity issue.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  54  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  CBUFF Ready Window Event in Write Mode  	  The software workaround is to configure DMA4 to be in no-standby or force-standby mode before clearing the PAUSE bit. The DMA4 can be reverted back to smart-standby mode after a certain period (after detecting DMA4_CSR[15:15] of corresponding channel to be 0 or ensuring DMA4_CCR[7:7] bit of  corresponding channel to be 0. This ensures descriptor load completion or channel termination.) 	 1.38 DMA4 channel fails to continue with descriptor load when Pause bit is cleared  	"  This Bug can occur only in a channel that is part of a channel chain. If channel chaining is not used, this bug is never seen.  An exact corner case sequence of events must occur. The sequence is:  •  The channel is enabled and then aborted*.  •  This same channel is now configured as part of a channel chain (it should not be the head of the channel chain).  •  The channel is configured as ""software synchronized"" or ""hardware synchronized at destination with prefetch enabled""  •  The channel gets enabled through linking.  * Following is the subset of abort conditions for this scenario:  •  The channel is disabled in the middle of transaction and channnel is not a drain candidate.  •  The channel gets a transaction error on write port but not at the end-of-block transaction.  •  The channel gets a read transaction error and is not a drain candidate.  "	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  55  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  CSI-2 Receiver Executes Software Reset Unconditionally  www.ti.com  	  The number of CBUFF windows to use in write mode for a given context is two windows.  	 1.39 CBUFF Ready Window Event in Write Mode  	  The next CBUFF ready window event (IRQ_CTXx_READY) is generated once CPU clears the CBUFF  ready (IRQ_CTXx_READY)and after the CPU writes in the current ended window (setting the  CBUFF_CTX_CTRL_i [10] DONE bit to 0x1).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  56  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  USB Host TLL Bit-stuffing Feature Is Broken  	  Software must ensure that there is no ongoing traffic before performing a software reset. In particular, the CSI-2 receiver must be reset to resume normal operation after a CSI-2 FIFO overflow. There may be remaining data in the FIFO, and therefore ongoing traffic, when the software driver receives the overflow interrupt. To avoid creating a system hang, software must either:  •  Wait for several 1000s of L3 cycles before performing the software reset after an overflow or  •  Use the ISS level software reset  	 1.40 CSI-2 Receiver Executes Software Reset Unconditionally  	  Ongoing transactions may be interrupted when a software reset is performed while there is still active traffic generated by the CSI-2 receiver. Interruption of ongoing transactions typically leads to a general OMAP hang that can only be recovered by a device reset.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  57  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  ISP H3A Hangs Due to Unstable Vertical Sync Signal  www.ti.com  	  Disable TLL bit-stuffing on all enabled TLL channels: TLL_CHANNEL_CONF_i[11] ULPINOBITSTUFF = 1  and do not use at the same time one TLL port and one ULPI port or one HSIC port.  	 1.41 USB Host TLL Bit-stuffing Feature Is Broken  	  The TLL bit-stuffing emulation feature (enabled by default after reset in the TLL_CHANNEL_CONF_i[11]  ULPINOBITSTUFF bit) is broken. It must be disabled, that is, bit-stuffing must be disabled on all enabled TLL channels.  However, disabling bit-stuffing on a TLL channel induces an asymmetry in the number of transmitted bits between the TLL channel and the other ports (ULPI or HSIC), which may result in an underrun or overrun errors. This could be the case while transferring data pattern where bit-stuffing is heavily used, like a white image (full of 11111...).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  58  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  GPIO IRQ Not Generated After MPU Idle if IRQSTATUS Bits Not Cleared  	  ISP full reset is necessary to exit from H3A hang state.  	 1.42 ISP H3A Hangs Due to Unstable Vertical Sync Signal  	  If unexpected VD, Start of frame signal, caused by noise comes before finishing the previous frame statistics, the H3A module hangs.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  59  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  DSI PLL Signal is Not available on Hardware Observability Pads  www.ti.com  	  Note: In the below paragraph, 'x' stands for 0 or 1 being the 1st interrupt to be handled, either MPU or DSP, 'y' refers to the other interrupt line.  Upon an interrupt reported through GPIO_IRQSTATUS_x, do the following:  •  Read out GPIO_IRQSTATUS_x => status_value_x  •  Write status_value_x to GPIO_IRQSTATUS_x (clear the enabled status bits)  •  Read out GPIO_IRQSTATUS_SET_y=> enable_value_y  •  Write status_value_x and NOT enable_value_y to GPIO_IRQSTATUS_y  By doing so, user clears the unused interrupt status bits for the other interrupt line.  An extension to this workaround is to clear GPIO_IRQSTATUS_y (all the bits) when the corresponding interrupt line (most of the time the DSP, that is, 2nd interrupt line) is not used, at each time GPIO_IRQSTATUS_x is cleared.  Note: Clearing GPIO_IRQSTATUS_0 (respectively 1) is done by writing 0xFFFFFFFF to this register. It will automatically clear GPIO_IRQSTATUS_RAW_0 (respectively 1) consequently.  	 1.43 GPIO IRQ Not Generated After MPU Idle if IRQSTATUS Bits Not Cleared  	  After the GPIO is configured in smart-idle (or smart-idle with wake-up) and the system goes into MPU  inactive mode (idle), the GPIO does not generate any IRQ again if any of the register bits of both interrupt line raw status registers (GPIO_IRQSTATUS_RAW_0 or GPIO_IRQSTATUS_RAW_1) is set. In the case  of a GPIO configured in smart-idle wake-up mode (GPIO_SYSCONFIG[4:3]=0x3), the wake-up associated to the GPIO IRQ event will not even occur.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  60  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Blending Calculation Error When Premultiply Alpha is Used  	  No workaround is available.  	 1.44 DSI PLL Signal is Not available on Hardware Observability Pads  	  When DSI PLL is under locking, SYS_CLK can be observed on the hardware observability but once PLL  is locked the hardware observability signal does not change and still show SYS_CLOCK. DSI PLL is not available on hardware observability.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  61  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  HS USB: Multiple OFF Mode Transitions Introduce Corruption  www.ti.com  	  No workaround is available.  	 1.45 Blending Calculation Error When Premultiply Alpha is Used  	  The equation for layer blending when upper layer is a premultiplied with a global alpha:  LYR(result) = A(global) * LYR(upper) + (1 -“ (A(global) * A(pixel))) * LYR(lower)  Where:  •  A(global) is alpha of upper layer  •  A(pixel) is pixel alpha of upper layer  •  (1 -“ (A(global) * A(pixel))) is the first complement of A(global * A(pixel))  •  When A(global) = 0  P(result) should be P(lower). Calculation leads to 0xff * P(lower) which can have 1-bit error if P(lower)  > (full range)/2 (0x80 for 8-bit)  •  When A(global) = 0xff  P(result) should be P(upper). Calculation leads to 0xff * P(upper) + (1-A(pixel)) * P(lower)  For example, 8-bit multiplication-with-rounding leading to 1-bit error in case Operand > (full range) / 2.  0x8c * 0xff = 0x8B74 final resulting after rounding is 0x8B instead of 0x8C.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	"  OMAP4470  1.0  Impacted  62  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSS Block in ""Idle Transition"" State when using RFBI I/F  "	  The workaround is to only perform the SAR-save of the USB registers if the USB bus has been resumed since the last wakeup from OFF mode.  If the USB has been left untouched in-between the previous wakeup from OFF, and the next OFF mode entry, then do not perform the USB registers SAR-save. (However the regular SAR-save is still needed for PRCM and other registers. Just skip the USB part)  By doing so, the SAR-restore process is always restoring valid data.  	 1.46 HS USB: Multiple OFF Mode Transitions Introduce Corruption  	  When the system enters off mode, the save-and-restore (SAR) process comes into play. During the save sequence, the USB host content must be saved (even if the module was not in use). The saved content is automatically restored upon the next wakeup from off mode.  When the save of the USB context occurs, an extra pulse of UTMI_root clock coming from USB DPLL is entering the IP, and generates a minor corruption. This corrupted context is saved and restored later.  Upon each save thereafter, the corrupted context is corrupted further. This is a cumulative process. At least three consecutive saves (with no wakeup of USB in-between) are needed for introducing a fatal corruption.  This corruption will impact the next use of the USB module: it could be while resuming a suspended device, or it could be upon the enumeration of a new device. The exact failure is not predictable: disconnection or stalls have been observed.  TLL and external PHY modes are impacted.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  63  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Deadlock Between SmartReflex™ and Voltage Processor  www.ti.com  	  After transfer of image completes, set the RFBI mode into bypass mode by setting the  DISPC_CONTROL1[16] GPOUT1 and DISPC_CONTROL1[15] GPOUT0 bits to 0x1.  	" 1.47 DSS Block in ""Idle Transition"" State when using RFBI I/F  "	  DISPC and RFBI are configured in smart-idle mode. After sending an image to the panel through the RFBI interface, the DISPC end-of-frame interrupt and RFBI end of transfer occur. After software sets the DSS in off state but no off state is not reached, DSS CM stays in idle transition, CM_DSS_DSS_CLKCTRL[17:16]  IDLEST = 0x1 because RFBI is not acknowledging idle request.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  64  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Refresh Rate Issue After Warm Reset  	  SmartReflex must be disabled before a software-controlled warm reset.  For other warm resets, the issue cannot be avoided, but during reboot the following sequence can be performed to recover:  •  Initiate a Force Update and check TRANXDONE interrupt success (optional). If it is not successful then:  •  Initiate a software global cold reset.  	 1.48 Deadlock Between SmartReflex™ and Voltage Processor  	  A protocol violation between SmartReflex and voltage processor can happen when a global warm reset occurs during a transaction. Consequences are:  •  VP_xx_TRANXDONE_ST interrupt from the PRCM is no longer generated when a force update  voltage from VP is performed.  •  SmartReflex does not request voltage change anymore.  SmartReflex and voltage processor have a handshake protocol. SmartReflex indicates to voltage  processor when voltage update is valid. Voltage processor acknowledges this request. Protocol violation appears when warm reset is asserted before acknowledge. This is because SmartReflex is warm reset-sensitive while voltage processor is cold reset-sensitive.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  65  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  System May Hang During EMIF Frequency Change  www.ti.com  	  The workaround is to force self-refresh when coming back from the warm reset with the following sequence:  •  Set EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE to 0x2  •  Set EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM to 0x0  •  Do a dummy read (loads automatically new value of sr_tim)  This will reduce the risk of memory content corruption, but memory content can't be guaranteed after a warm reset.  When OMAP is back to active mode with correct OPP configuration, EMIF registers need to be re-  program according to the OPP and respect workaround for i735 bug.  	 1.49 Refresh Rate Issue After Warm Reset  	  The refresh rate is programmed in the EMIF_SDRAM_REF_CTRL[15:0] REG_REFRESH_RATE  parameter taking into account frequency of the device.  When a warm reset is applied on the system, the OMAP processor restarts with another frequency and so the frequency is not the same. Due to this frequency change, the refresh rate will be too low and could result in an unexpected behavior on the memory side.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  66  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DDR Access Hang After Warm Reset  	  To avoid the occurrence of the three events, the workaround is to disable the self-refresh when requesting a frequency change.  Before requesting a frequency change the software must program EMIF_PWR_MGMT_CTRL[10:8]  REG_LP_MODE to 0x0.  When the frequency change has been done, the software can reprogram EMIF_PWR_MGMT_CTRL[10:8]  REG_LP_MODE to 0x2.  	 1.50 System May Hang During EMIF Frequency Change  	  When the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field is set to 0x2, self-refresh mode is  activated. In that case, EMIF puts the SDRAM into self-refresh mode if no access is performed during EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM number of DDR clock cycles.  If during a small window the following three events occur:  •  The EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM counter expires  •  And frequency update is requested (CM_SHADOW_FREQ_CONFIG1[0] FREQ_UPDATE set to 1)  •  And OCP access is requested  Then it causes unstable clock on the DDR interface.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  67  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  DSS Configuration Registers Access Through the L4 Interconnect  www.ti.com  	  In case of software warm reset, software can check that no frequency change is ongoing before initiating the warm reset.  In case of watchdog timer reset, there is no workaround to recover, a cold reset is needed.  	 1.51 DDR Access Hang After Warm Reset  	  When the EMIF is going in IDLE state and the following three events occur:  •  Frequency update is requested (CM_SHADOW_FREQ_CONFIG1[0] FREQ_UPDATE set to 1).  •  And a warm reset occurs.  •  And a system access is requested.  Then the EMIF will not properly reset internal FIFO. The EMIF may answer to the request when returning from reset not expected by the system; it creates protocol error or data corruption.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  68  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  LCD1 Gamma Correction Is Not Working When GFX Pipe Is Disabled  	  DSS register access should be addressed through the L3 interconnect.  	 1.52 DSS Configuration Registers Access Through the L4 Interconnect  	  Due to wrong timings, all register accesses transitioning through the L4 interconnect toward DSS are not reliable.  DSS registers access done through the L4 interconnect are not supported  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  SWPZ025E – July 2012 – Revised September 2013  Bugs  69  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  LCD1 Gamma Correction Is Not Working When GFX Pipe Is Disabled  www.ti.com  OMAP4470  1.0  Impacted  70  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Power Management Timer Value For Self-Refresh (SR_TIM)  	  There are two workaround treatments depends on the load mode for gamma correction LUT and frame data (see Table x-xx Workaround/Load mode settings )  Table 1-2. Workaround/Load mode settings  Load Mode  GFX Enable Condition  Workaround  ( DISPC_CONFIG1[2:1]LOADMODE)  0x0 (load LUT and data every frame)  Always Enabled  WA1  0x1 (load LUT for first frame and change loadmode to 2)  Enable required for first frame only  WA2  0x2 (load frame data only)  Enable required for first frame only.  WA2  0x3 (load LUT and data for first frame and change  Enable required for first frame only.  WA2  loadmode to 2)  WA1  To use gamma correction on LCD1 output, software must:  1. Enable the GFX pipeline by setting DISPC_GFX_ATTRIBUTES[0] ENABLE to 0x1.  2. Set the GFX base address (DISPC_GFX_BA_i[31:0] BA) to an accessible frame buffer.  3. Set the GFX window to minimum size by configuring the DISPC_GFX_SIZE[27:16] SIZEY and  DISPC_GFX_SIZE[11:0] SIZEX bits.  4. If the GFX pipeline is not to be displayed, set GFX LYR to bottom LYR in LCD1 overlay by setting appropriate DISPC_GFX_ATTRIBUTES[27:26] ZORDER bit field and make GFX fully transparent by  setting the global alpha of the GFX to 0x00 in the DISPC_GLOBAL_ALPHA[7:0] GFXGLOBALALPHA  bit field.  WA2  To use gamma correction on LCD1 output, software must:  1. Enable the GFX pipeline by setting DISPC_GFX_ATTRIBUTES[0] ENABLE to 0x1.  2. Set the GFX base address (DISPC_GFX_BA_i[31:0] BA) to an accessible frame buffer.  3. Set the GFX window to minimum size by configuring the DISPC_GFX_SIZE[27:16] SIZEY and  DISPC_GFX_SIZE[11:0] SIZEX bits.  4. If the GFX pipeline is not to be displayed, set GFX LYR to bottom LYR in LCD1 overlay by setting appropriate DISPC_GFX_ATTRIBUTES[27:26] ZORDER bit field and make GFX fully transparent by  setting the global alpha of the GFX to 0x00 in the DISPC_GLOBAL_ALPHA[7:0] GFXGLOBALALPHA  bit field.  5. When DISPC_IRQSTATUS[8]PALETTEGAMMALOADING_IRQ =0x1 then disable GFX pipeline  	 1.53 LCD1 Gamma Correction Is Not Working When GFX Pipe Is Disabled  	  LCD1 output supports gamma correction. The color look-up table (CLUT) is shared between the BITMAP  to RGB conversion module on GFX pipeline and Gamma correction on the LCD1 output. LUT table can be loaded by SW through DISPC slave port (interconnect) or by DISPC master port using the DISPC DMA.  However, LCD1 gamma correction LUT loading is not working properly and require to enable GFX  pipeline for LUT loading. Depending on the load mode (DISPC_CONFIG1[2:1] LOADMODE) used, GFX  pipeline can then be disabled after 1st frame.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  71  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Leakage Increase On LPDDR2 I/Os  www.ti.com  	  Using a value of EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM >= 6 for VDD_CORE_L OPP100 and a  value of REG_SR_TIM >= 5 for VDD_CORE_L OPP50 avoid the occurrence of the issue.  	 1.54 Power Management Timer Value For Self-Refresh (SR_TIM)  	  LPDDR2 memories could be put in self-refresh mode for power savings. The number of cycles after which EMIF can start a self-refresh entry is software programmable (thanks to the power management timer for self-refresh: EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM register bit field).  When exiting self-refresh mode, it is required that at least one refresh command is issued before entry into a subsequent self-refresh (as defined in the JEDEC LPDDR2 Specification)  When this timer value is set to a value less than 0x6 (for VDD_CORE_L OPP100) or less than 0x5 (for VDD_CORE_L OPP50), the time between a self-refresh exit to the next immediate self-refresh entry does not allow the EMIF to perform a refresh command.  As a consequence, data in LPDDR2 memory is not refreshed properly, and then data is corrupted in LPDDR2.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  72  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  MMC1 Booting May Be Bypassed Depending On VDD Ramp-up Delay  	  To prevent an increase in leakage, it is recommended to disable the pull logic for these I/Os except during off mode.  So the default state of the I/Os (to program at boot) will have pull logic disable:  CONTROL_LPDDR2IO1_2[18:17]LPDDR2IO1_GR10_WD = 00  CONTROL_LPDDR2IO2_2[18:17]LPDDR2IO2_GR10_WD = 00  When entering off mode, these I/Os must be configured with pulldown enable:  CONTROL_LPDDR2IO1_2[18:17]LPDDR2IO1_GR10_WD = 10  CONTROL_LPDDR2IO2_2[18:17]LPDDR2IO2_GR10_WD = 10  When resuming from off mode, pull logic must be disabled.  	 1.55 Leakage Increase On LPDDR2 I/Os  	  Following a bug in the integration of I/Os cell for LPDDR2 clocks, a leakage increase can be observed on vddca_lpddr2 when OMAP is in open switch retention mode.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  73  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Disconnect Protocol Violation  www.ti.com  	  No  	 1.56 MMC1 Booting May Be Bypassed Depending On VDD Ramp-up Delay  	  If the sys_boot[5:0] pins are configured for booting from MMC1, then the boot on MMC1 may not happen (board dependency) and the ROM code jumps to the next device of the boot sequence.  Indeed, depending on the voltage ramp, the ROM code may not wait long enough for SDMMC1_VDDS  voltage to be stabilized at 3 V before checking the voltage level supplied to OMAP.  In that case, the ROM code checks the SDMMC1_VDDS voltage too early, reads a bad level, and then jumps to 1.8-V configuration while the PMIC was configured to 3 V.  The MMC1_PBIAS cell is in a bad state and prevents the sending of commands to the MMC1 bus.  The ROM code switches to the next boot sequence.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  74  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ULPI RxCmds Convey the Wrong ID Bit After Save-and-Restore Sequence  	  L3_CLK1 must be kept in NO-IDLE when the DSS clock domain is ON. It can be switched back to  HW_AUTO when the DSS clock domain is IDLE.  L3_CLK2 must be kept in NO-IDLE when the ISS clock domain is ON. It can be switched back to  HW_AUTO when the ISS clock domain is IDLE.  	 1.57 Disconnect Protocol Violation  	  A bug has been identified in the interconnect agent handling the connect-disconnect protocol between an initiator and interconnect. When the disconnect protocol violation occurs, there is a dead lock and a system lockup is observed.  The issue can occur in a corner case when the impacted module has started a transition to standby, for the L3 initiator on which it is attached, exactly at the time the initiator gets an event for exiting idle state.  Such a situation can occur when the impacted initiator is generating short MStandby pulses (pulse durations less than one L4 clock cycle).  DSS and ISS are the only initiators that are impacted.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  75  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  PRCM Hang at Frequency Update During DVFS  www.ti.com  	  Ensure that the OTG_CTRL_i [0] IDPULLUP bit is set to 1 before the SAR-save. By doing so, this bit is restored to 1 after every off mode. Then the ID bit is sampled and the Rxcmd is correct.  	 1.58 ULPI RxCmds Convey the Wrong ID Bit After Save-and-Restore Sequence  	  ULPI RxCmds, from OMAP to USB device, convey the wrong ID bit after the save-and-restore sequence.  When OMAP is in a low-power mode scenario (chip-OFF), in high-speed transceiverless link (TLL) connection, after the SAR phase, every RxCmd from the TLL to the peripheral conveys wrong ID field (for example, 0x0D instead of 0x4D), that is, the ID bit is 0 instead of 1. This is due to the TLL losing the value of ID during the SAR process. As long as the peripheral does not resample the ID (by toggling  OTG_CTRL_i[0] IDPULLUP) after the restore, the ID bit keeps the wrong value 0 instead of 1. This results in sending the wrong RxCmd to the peripheral.  Depending on the peripheral device design, it may consider or disregard the ID bit. The behavior and consequences depend on the device design.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  76  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Card Error Interrupt May Not Be Set Sometimes  	  The recommended sequence is:  •  Update CM_SHADOW_FREQ_CONFIG2[7:3]DPLL_CORE_M5_DIV.  •  Set CM_SHADOW_FREQ_CONFIG2[0]GPMC_FREQ_UPDATE to 0x1.  •  Wait until CM_SHADOW_FREQ_CONFIG2[0]GPMC_FREQ_UPDATE becomes 0x0.  •  Update CM_SHADOW_FREQ_CONFIG1[15:11]DPLL_CORE_M2_DIV.  •  Set CM_SHADOW_FREQ_CONFIG1[0]FREQ_UPDATE to 0x1.  •  Wait until CM_SHADOW_FREQ_CONFIG1[0]FREQ_UPDATE becomes 0x0.  	 1.59 PRCM Hang at Frequency Update During DVFS  	  During DVFS transitions, the PRCM controller can hang if CORE DPLL dividers M2 and M5 are updated at once.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  77  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  In AutoCMD12 mode, the CMD12 Command Is Not Issued On Write Transfer Completion  www.ti.com  	  After responses of type R1/R1b for all cards and responses of type R5/R5b/R6 for SD and SDIO cards, software must read two registers: MMCHS_RSP10 and MMCHS_CSRE. When a MMCHS_CSRE[i] bit is  set to 1, if the corresponding bit at the same position in the response MMCHS_RSP0[i] is set to 1, the host controller indicates a card error and software should proceed in the same way as if a CERR interrupt would have been detected in the MMCHS_STAT register.  	 1.60 Card Error Interrupt May Not Be Set Sometimes  	  Due to a bad behavior of an internal signal, the Card Error interrupt bit MMCHS_STAT[28] CERR may not be set sometimes when an error occurred in the card response.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  78  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  I/O Glitch Issue When Entering Off Mode  	  Instead of setting the MMCHS_CMD[2] ACEN bit to 0x1 to enable AutoCMD12 mode, software sends the CMD12 command at the end of write transfers (after the MMCHS_STAT [1] TC bit goes High).  	 1.61 In AutoCMD12 mode, the CMD12 Command Is Not Issued On Write Transfer  Completion  	  When using AutoCMD12 mode in write transfer with ADMA and MMCHS_CMD[1] BCE is disabled, then  the CMD12 command is not issued automatically after write transfer completion.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  79  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  HS USB Host HSIC Remote Wakeup Is Not Functional  www.ti.com  	  CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[25,9] OFFMODEENABLE = 1 should not be used on pad  output pins driving glitch-sensitive signals if the same value is driven during active mode and off mode and is equal to 1.  If CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[25,9] OFFMODEENABLE = 1, it is necessary to ensure  that the CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[27,11] OFFMODEOUTVALUE is equal to 0 or is  different from the value of the I/Os when going to off mode.  	 1.62 I/O Glitch Issue When Entering Off Mode  	  Following a design issue on I/O muxing compiler, a glitch can occur on I/Os when switching them from the active mode to the off-mode override value.  The glitch is present:  •  if the feature for pin state override during off mode is used  CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y [25,9] OFFMODEENABLE = 1  •  and the override value CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[27,11] OFFMODEOUTVALUE  = 1 and the IO value when going to off mode was 1.  There is no issue  •  if the override feature CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[25,9] OFFMODEENABLE = 0 is  not used,  •  or if it is used to force a value which is different from the value before going to off mode.  •  or if it is used to force a 0 and the value before going to off mode was 0.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  80  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  I2C FIFO Draining Interrupt Not Generated  	  Do not rely on the asynchronous wake-up feature of the USB host module, but rather on the daisy-chain for detecting a remote wakeup.  Set the wakeup-enable feature of the HSIC pads and enable the daisy-chain to generate a wakeup and an interrupt to the PRCM.  Upon wakeup and interrupt from the daisy chain, if the wakeupevent bit is set for the HSIC pads, then restart the USB Host module and the UTMI_Px clock and resume the device.  	 1.63 HS USB Host HSIC Remote Wakeup Is Not Functional  	  This problem impacts the HS USB Host HSIC interface. TLL and ULPI interfaces are not impacted.  For this issue to occur, the following conditions must exist:  •  A USB device is attached to an OMAP HSIC interface.  •  The USB bus is suspended.  •  The PRCM asserts idle_req, and the USB host answers idle_ack.  •  The PRCM hardware automatically stops the interface clocks (ICLK).  •  Software disables the module by setting the  CM_L3INIT_HSUSBHOST_CLKCTRL[1:0]:MODULEMODE bit fields to 0x0.  •  The PRCM automatically stops the mandatory functional clocks (FLCK).  •  Software stops the optional FCLK.  •  The module is then idle. The clock domain can possibly enter idle, then the power domain also can enter a low-power mode, and even the full OMAP.  •  The device generates a remote wakeup.  The USB Host detects the remote wakeup condition asynchronously and generates a  USBHOST_SWAKEUP to the PRCM.  The PRCM deasserts idle_req, and restarts ICLK and mandatory FCLK, but not the optional FCLK.  However, in the case of HSIC, the optional FCLK  (CM_L3INIT_HSUSBHOST_CLKCTRL[10/9/8].OPTFCLKEN_UTMI_P3/2/1_CLK) is needed to generate  the interrupt indicating to the system that the USB HOST is the wake-up source.  Consequently, OMAP is woken up but does not acknowledge who is the wake-up source.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Bugs  81  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Read Accesses to GP Timer TCRR Can Report Random Value When In Posted Mode  www.ti.com  	  Before reconfiguring the RXTRSH (Threshold value for FIFO buffer in RX mode):  •  Disable I2C controller by setting the I2C_CON[15] I2C_EN bit to 0x0 (this puts the controller in reset, clears the FIFOs, and sets the status bits to their default value)  •  Once the I2C module reconfiguration is done, reactivate the I2C controller by setting the I2C_CON[15]  I2C_EN bit to 0x1 (module enabled).  	 1.64 I2C FIFO Draining Interrupt Not Generated  	  When I2C module is used in HS master receive mode, and when smart-idle wakeup mode is set:  •  If reconfiguration of I2C_BUF[13:8] RXTRSH value is done while I2C_CON[15] I2C_EN = 0x1, and  with no clearing of the RX buffer pointer.  •  I2C module does not wakeup from idle mode due to wrong pointers of RX Buffer (as RXTRSH was  reconfigured with no actual cleaning of RX FIFO pointers from a previous transfer).  As a consequence, I2C FIFO draining interrupt is not generated in Idle/WakeUp scenario.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  82  Bugs  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version      Chapter 2   SWPZ025E – July 2012 – Revised September 2013  Limitations  SWPZ025E – July 2012 – Revised September 2013  Limitations  83  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Issue with Transfer Of Multiple Command Packets Coming From Interconnect  www.ti.com  	  If ICLK < 4*FCLK ratio is not respected, then software should make sure that the posted mode is inactive (the GPT_TSICR[2] POSTED bit is set to 0x0) before any read access to the GPT_TCRR register.  	 1.65 Read Accesses to GP Timer TCRR Can Report Random Value When In Posted Mode  	  General-purpose (GP) timers in posted mode (GPT_TSICR[2] POSTED bit set to 0x1) with GPTi_ICLK  (timer interface clock) and GPTi_FCLK (timer functional clock) clock frequency not respecting the ICLK < 4*FCLK ratio, can periodically report a random time from read accesses to counter register GPT_TCRR.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  84  Limitations  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Nonburst Video Mode Using Sync Pulses: NO HE Packets Sent VSA, VFP, And VBP Blanking.  	  No workaround is available. The impact is minor because:  •  When interleaving is done on a vertical blanking period (VSA, VFP, VBP), as these blanking are expressed in a number of lines, the remaining packet(s) in TX FIFO are sent on HS link during the next line blanking interval within the same blanking period or during the next one.  •  When interleaving is done on a horizontal blanking period (HSA, HFP, HBP), the remaining data in TX  FIFO is sent on the next blanking period.  	 2.1  Issue with Transfer Of Multiple Command Packets Coming From Interconnect  	  In video mode, the command mode packets, provided through the DSI protocol engine OCP port, can be interleaving during the blanking periods vertical and/or horizontal blanking periods of the video stream sequence.  When TX FIFO on the OCP slave port is empty and if the first packet written to TX FIFO is less than 13  words when 1 data lane is active or 17 words when 2 data lanes are active or 25 words when 3 or 4 data lanes are active, only this packet will be sent on the HS link during the next blanking period enabled for command packet transfer.  This is the only sent packet, because this packet is the only completely written packet when the FSM has read the last location of this packet from TX FIFO. Even if more packets are written in TX FIFO before the interleaving starts, these packets will not be sent during that blanking period.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  86  Limitations  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  BITMAP1-2-4 Formats Not Supported By The Graphics Pipeline  	  NA  	 2.2  Nonburst Video Mode Using Sync Pulses: NO HE Packets Sent VSA, VFP, And VBP  Blanking.  	  The DSI protocol engine is based on the MIPI DSI ver. 1.01 specification.  However the video mode using sync pulses is implemented using the timing described in MIPI DSI ver.  1.00 and not ver. 1.01:  •  The DSI protocol engine sends only HE packets (when enabled) during VACT and not during VSA,  VFP, and VBP.  •  The DSI protocol engine sends VE (noted as VSE in MIPI DSI ver. 1.01 specification) during VSA and not during VBP.  Figure 2.1 represents actual implementation and Figure 2.2 represents MIPI DSI ver. 1.01 specification.  Figure 2-1. MIPI DSI 1.00 (Implemented) - Video Mode Interface Timing: Nonburst Transmission With Sync Start And End.  t * (VSA + VBP + VACT + VFP)  L  t  t  t  t  L  t  t  L  L  L  tL  tL  L  L  B  L  V  BL  H  BL  V  BL  H  BL  H  BL  H  BL  H  BL  H L  V  Active video area  P  S  LP  S  LP  E  LP  S  LP  S  LP  S  LP  S  LP  S L  S  M  P  VSA lines  VBP lines  VFP lines  tHBP  t  t  t  t  L  HSA  HACT  HFP  H  H  H  H  H  H  H  H  S  B  RGB  HFP  S  B  RGB  HFP  S  E  S  E  A  P  A  P  VACT lines  SWPZ025E – July 2012 – Revised September 2013  Limitations  85  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Nonburst Video Mode Using Sync Pulses: NO HE Packets Sent VSA, VFP, And VBP Blanking.  www.ti.com  Figure 2-2. MIPI DSI 1.01 ( Not Supported) - Video Mode Interface Timing: Nonburst Transmission With Sync Start And End.  t * (VSA + VBP + VACT + VFP)  L  t  t  t  t  t  t  t  t  L  L  L  L  L  L  L  L  V H H  H H H  H H H  V  H H  H H H  H H H  H H H  H H H  B  L  V  BL  BL  BL  BL  BL  BL  BL  L  S S S  S  S  S  S S S  S  S  S  S S S  Active video area  S S S  S  S S  S  S S  P  S  LP  LP  LP  LP  LP  L  LP  LP  S A E  S  A  E  S A E  E  A  E  S A E  S A E  S  A E  S  A E  P  M S  VSA lines  VBP lines  VFP lines  tHBP  t  t  t  t  L  HSA  HACT  HFP  H  H H  H  H  H  H  S  HSA  S B  RGB  HFP  S  B  RGB  HFP  S  E  S  E P  A  P  VACT lines  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Limitations  87  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Limitation On DISPC Dividers Settings When Using BITMAP Format  www.ti.com  	  No workaround is available.  	 2.3  BITMAP1-2-4 Formats Not Supported By The Graphics Pipeline  	  BITMAP1, BITMAP2, and BITMAP4 are not supported by the graphics pipeline.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  88  Limitations  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HDQ™/1-Wire® Communication Constraints  	  No workaround is available.  	 2.4  Limitation On DISPC Dividers Settings When Using BITMAP Format  	  When Graphics pipeline input pixel is in BITMAP format, it cannot output pixel at the rate of one pixel per each clock cycle when LCD = 1 and PCD = 1.  The limitation is not applicable if PCD is greater than or equal to 2.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Limitations  89  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Presence of a Floor Noise on Audio Band When Multiple McPDM Downlink Enabled  www.ti.com  	  There is a constraint in the design for the maximum allowed rise time of the wire. After writing data to the wire, the HDQ/1-Wire module samples the logic value of the wire 1 FSM (finite state machine) clock cycle later. The FSM expects to read back 1 value from the wire. This constraint must be taken into account, when calculating the pullup resistor(R) according to the capacitive load(C) of the wire.  The maximum RC (pullup resistor and capacitive load) value should be calculated as follow:  R <1200ns/(10e-12 + C)  	 2.5  HDQ™/1-Wire® Communication Constraints  	  HDQ/1-Wire protocols use a return-to-1 mechanism and it requires an external pullup resistor on the line.  There is a timing limitation on this return-to-1 mechanism that requires a constraint on the external pullup resistor(R) and the capacitive load(C) of the wire.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  90  Limitations  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Overlay Optimization Limitations  	  Case 1 workaround:  •  Set McPDM downlink FIFO threshold to 2 (floor noise goes back to ~ -130dB_fullscale)  Case 2 workaround:  •  Set McPDM downlink FIFO threshold to 4 (floor noise goes back to ~ -130dB_fullscale)  	 2.6  Presence of a Floor Noise on Audio Band When Multiple McPDM Downlink Enabled  	  Depending on McPDM FIFO value, a floor Noise in audio band at ~-80dB_fullscale may appear with one of these two following configurations:  •  Case 1: AESS is used for the McPDM transfers, 6 downlink channels of McPDM are enabled and  McPDM downlink FIFO threshold is set to 1.  •  Case 2: AESS is not used for the McPDM transfers, 4 downlink channels of McPDM are enabled and McPDM downlink FIFO threshold is set to 1 or 2.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Limitations  91  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  VID /GFX Pipeline Underflow Interrupt Generated When In WB Memory-to-memory Operation  www.ti.com  	  For optimization to occur for a particular layer, make RESIZEENABLE as 0x0. With multiple layers enabled, make RESIZEENABLE for all the layers as 0x0 for every layer to participate in overlay optimization of itself or for the layers below it.  	 2.7  Overlay Optimization Limitations  	  Overlay optimization does not work when resize processing is enabled on any 'Enabled' layer.  When any of the 'Enabled' layers has bit field DISPC_p_ATTRIBUTES.RESIZEENABLE as nonzero it will neither be optimized nor participate in optimization of layers below.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  92  Limitations  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI: Run-time Change Of HSR Counter Values Damages Communication  	  Software should disable the VID/GFX pipeline underflow interrupt by writing 0x0 in  DISPC_IRQENABLE[20-12-10-6] bit if it is connected to the WB pipeline in memory-to-memory mode.  Software should not consider the underflow interrupt generated in DISPC_IRQSTATUS[20-12-10-6] bit when in memory-to-memory mode  	 2.8  VID /GFX Pipeline Underflow Interrupt Generated When In WB Memory-to-memory  Operation  	  In memory-to-memory operation, it is possible for WB pipe to write out pixel data faster than the rate at which VID/GFX DMA is fetching the pixel data. Under such a condition, the WB pipe should slow down by itself (by inserting necessary stalls) and should not cause an underflow at the VID DMA. The required behavior is: when VID/GFX pipelines are connected to WB in memory-to-memory mode (connected either directly or through overlay), there should not be any buffer underflow and no underflow interrupt should be generated.  However the DISPC module deviates from this behavior and generates sporadic underflow interrupt. But buffer underflow never happens; there is no corruption of the data written back to the memory. Only undesired interrupts are generated due to this defect.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Limitations  93  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  HSI Does Not Send Break Frame In Some Scenario  www.ti.com  	  No workaround is identified.  	 2.9  HSI: Run-time Change Of HSR Counter Values Damages Communication  	  The MIPI HSI specification explicitly requires run-time configurability to be supported for these HSR Frame Burst, HSR Frame Time-out, and HSR Tailing Bit counters.  Update of HSR counters with new values while data traffic is ongoing results in spurious errors and/or data loss/corruption:  •  HSR Frame Burst Counter update: Spurious FT/TB errors and/or data loss/corruption  •  HSR Frame Timeout Counter update : Spurious FT/TB errors and/or data loss/corruption (observed only in pipelined flow)  •  HSR Tailing Bit Counter: Spurious FT/TB errors and/or data loss/corruption (observed only in pipelined flow)  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  94  Limitations  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  EMIF: 8-Gbit (Single Die) Support  	  No workaround is identified.  	 2.10 HSI Does Not Send Break Frame In Some Scenario  	"  From the MIPI HSI spec; the transmitter shall be able to transmit a break transmission regardless of the state of the READY signal.  •  Break frame will not be sent if the READY line is low and Tx FIFO is not empty. Inserting a break frame, in this configuration, will also override a frame in Tx FIFO. Refer to ""Break frame corrupt ongoing transfer"" errata.  •  Break frame will be sent if TX FIFO is empty and READY line is low.  "	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Limitations  95  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  ECD3 Fails To Decode Bitstreams Having Mismatch Between CBP and CBF  www.ti.com  	  There is no workaround.  	 2.11 EMIF: 8-Gbit (Single Die) Support  	  The refresh requirements for an LPDDR2 8-Gbit (single die) memory at high temperature (>85°C) conflicts with the current EMIF refresh policy and may result in a lock-up situation. This issue does not exist with 2-Gbit and 4-Gbit memories due to their lower t RFC(130 ns versus 210 ns).  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  96  Limitations  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  TV Overlay Blending Limitation  	  No Workaround  	 2.12 ECD3 Fails To Decode Bitstreams Having Mismatch Between CBP and CBF  	  ECD3 fails to decode the bitstreams having the mismatch between CBP and CBF generated by non-TI encoder. The mismatch violates the H.264 CBP rule. But the mismatch can be correct in-practice / real-life  /De-facto.  It wrongly decodes the bitstream as error stream (instead of normal stream), but it never results in hang or crash. The decoded output have visual noticeable artifacts as many good slices are concealed.  The issue occurs for H.264 MP/HP decoder decoding bitstream generated by non-TI encoder violating H.264 CBP rule. It does not occur for H.264 BP/MP/HP encoder as well as H.264 BP decoder.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Limitations  97  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  ISP Pattern Generator Is Not Functional  www.ti.com  	  None  	 2.13 TV Overlay Blending Limitation  	  The overlay determine the blending effect by the following:  If (Ae > 0x3fc)  Result = Upper layer  Elsif (Ae == 0x0)  Result = Lower Layer  Else  Ae = Ap×(Upper layer) + (1-Ap)×(Lower layer)  where Ae represents the effective Alpha, input of overlay.  Ae is determined by two inputs parameters: Ap (pixel alpha) and Ag (global alpha). The Ap available at the input of overlay can come through two paths:  1. The scaler (in which case the highest and second highest values are 0x3ff and 0x3fb, respectively).  2. The parallel bypass path (in which case we can get pixel alpha values between 0x3fc and 0x3fe).  The effective alpha value can only be in the range of 0x3fc – 0x3fe if the global alpha value is programmed as 0xff. As an inference from the above if Ae value (resulting as a multiplication of global alpha [Ag] and pixel alpha[Ap]) inside the TV overlay is between 0x3fc and 0x3fe, the blending logic treats this layer as opaque and blending does not occur.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  98  Limitations  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated    Public Version  www.ti.com  Voltage Drop Observed On CSI PHY Pad In GPI mode  	  None  	 2.14 ISP Pattern Generator Is Not Functional  	  The ISP pattern generator, which implements an internal data generation mechanism to test the external pins and can generate RAW data without the need for an external image sensor, is not functional.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4470	 	  OMAP4470  1.0  Impacted  100  Limitations  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version      Chapter 3   SWPZ025E – July 2012 – Revised September 2013  Cautions  The purpose of this section is to alert OMAP users about sensitive silicon concern. Items described in the following section are compliant with specification (neither bug nor limitation), but it is mandatory to carefully respect guidelines to ensure correct OMAP behavior.  SWPZ025E – July 2012 – Revised September 2013  Cautions  101  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  LPDDR2 High Temperature Operating Limit Exceeded  www.ti.com  	  1. Use different pad for GPI.  2. Use the pull-up resistor value smaller than or equal to 9k Ohm. It avoids the voltage drop and keeps the signal level above VIH. However this will be at the expense of increased current (up to 70uA in the worst case), as long as DXn and DYn are opposite in polarity.  SWPZ025E – July 2012 – Revised September 2013  Limitations  99  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Voltage Drop Observed On CSI PHY Pad In GPI mode  www.ti.com  	 2.15 Voltage Drop Observed On CSI PHY Pad In GPI mode  	  Voltage drop can be observed when following conditions are met:  •  csix_dx/y_ pad pair(DXn, DYn on the figure below) is used in GPI mode  (CONTROL_CAMERA_RX[20:19]/[17:16] CAMERARX_CSIx_CAMMODE=0x3)  •  One of the pair is connected to GND and another is pulled-up to High  The signal level of the pad which is pulled-up is dropped due to the leakage of the component used in the off switch for the on-die termination between DXn and DYn. The leakage current (and the voltage drop) varies depending on PVT condition.  Under the worst case condition, the leakage can be high enough to drop the signal level under VIH of the GPI buffer and causes functional failure.  Figure 2-3. CSI PHY pad in GPI mode  	 	Cortex A-9	Limitations
  The mode register MR4 gives a status of the LPDDR2 device temperature. If the value of MR4 [2:0] =  0x111 the LPDDR2 might not operate properly.  GUIDELINES  The EMIF supports automatic temperature monitoring. The temperature monitoring can be enabled per chip-select by setting the EMIF_TEMP_ALERT_CONFIG[31] REG_TA_CS1EN and  EMIF_TEMP_ALERT_CONFIG[30] REG_TA_CS0EN bits.  The EMIF periodically polls the temperature of LPDDR2 (issues an MRR command to mode register 4) every time EMIF_TEMP_ALERT_CONFIG[21:0] REG_TA_REFINTERVAL expires.  If during this read operation the value 0x111 is returned by the memory this means that temperature operating limit is exceeded. In that case, the recommendation is to do a power-off sequence to cool of the memory.  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.1  LPDDR2 High Temperature Operating Limit Exceeded  	DESCRIPTION	  High  	Cortex A-9	  OMAP4470  1.0  Impacted  102  Cautions  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Undesired McBSP slave mode behavior during reset without CLKR/CLKX  
  As described in the Technical Reference Manual, the McBSP port requires two clock cycles of  CLKR/CLKX during reset to synchronize the interface configuration. When the McBSP is configured in slave mode, the necessary clock is provided by the other device (the interface master). If the master device does not provide the necessary clock before the first frame pulse then undesired behavior of the McBSP port will occur since it will only be properly initialized during the first two clock cycles of CLKR/CLKX. Impacts of this situation include:  •  McBSP port does not receive the first frame of data from the master  •  Undefined output (i.e. glitch) on McBSP transmit line during the first frame pulse  GUIDELINES  If possible, the master should provide CLKR/CLKX before the first frame pulse (during McBSP  initialization) to avoid this issue. No other workaround is available.  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.2  Undesired McBSP slave mode behavior during reset without CLKR/CLKX  	DESCRIPTION	  Low  	Cortex A-9	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Cautions  103  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  High-Speed Image Capture Use Case  www.ti.com  
  The data flow for High-Speed Image capture use case is as follows: CSI2 RAW10 packed -> SDRAM -> ISP RSZ -> SL2 -> SIMCOP -> SDRAM. In this use case it is mandatory not to use DPLL lock/unlocked sequence for DPLL_ IVA during CD_IVAHD clock domain sleep stage.  The clock gating management in automatic mode (CM_AUTOIDLE_DPLL_IVA[2:0] AUTO_DPLL_MODE  is different than 0x0 and HW auto mode is enabled CM_IVAHD_CLKSTCTRL[1:0] CLKTRCTRL = 0x3)  results in DPLL_IVA relocking stage when SL2 write memory accesses are needed by ISP RSZ. The lock delay, bypass clock is not supplied when DPLL is managed in automatic mode, is resulting in  backpressure for CSI2 side which leads to CSI2 overflow.  GUIDELINES  During the above use case, it is mandatory to use the DPLL_IVA in manual bypass in HW auto mode (CM_IVAHD_CLKSTCTRL[1:0] CLKTRCTRL set to 0x3); that is, CM_AUTOIDLE_DPLL_IVA[2:0]  AUTO_DPLL_MODE is set to 0x0. It is possible to select CORE_X2_CLK divisor as 1, 2, 4, or 8 for the bypass clock of DPLL_IVA as IVA-HD does not make any computation. CM_CLKSEL_DPLL_IVA[23]  DPLL_BYP_CLKSEL should be set to 1.  CORE_X2_CLK clock must be divided compliant with IVA OPP maximum clock frequency. It can be done through the CM_BYPCLK_DPLL_IVA[1:0] CLKSEL bit field.  In this way, SL2 clock can be quickly gated or ungated to meet CSI2 latency requirements.  PRCM register set configuration to allow in time the SL2 ungating clock on accesses request:  1. CM_AUTOIDLE_DPLL_IVA[2:0] AUTO_DPLL_MODE set to 0x0  2. CM_IVAHD_CLKSTCTRL[1:0] CLKTRCTRL set to 0x3  3. CM_CLKMODE_DPLL_IVA[2:0] DPLL_EN set to 0x5  4. CM_BYPCLK_DPLL_IVA[1:0] CLKSEL set to 0x1  5. CM_CLKSEL_DPLL_IVA[23] DPLL_BYP_CLKSEL set to 0x1  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.3  High-Speed Image Capture Use Case  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4470  1.0  Impacted  104  Cautions  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  MPU-EMIF Static Dependency Needed Around MPU WFI  
  If static dependency from the MPU clock domain toward the MEMIF clock domain is disabled to save power (CM_MPU_STATICDEP[4] MEMIF_STATDEP = 0x0), the platform may lockup when exiting MPU  WFI.  GUIDELINES  Recommended software: To prevent the occurrence of this issue, static dependency from the MPU clock domain toward the MEMIF clock domain must be enabled before MPU enters WFI  (CM_MPU_STATICDEP[4] MEMIF_STATDEP set to 0x1). When exiting WFI, static dependency should  be disabled to benefit again from dynamic power savings (CM_MPU_STATICDEP[4] MEMIF_STATDEP =  0x0).  Please make sure to use the recommended sequence described in the TRM for static dependency  enabling and disabling (See Enable/Disable Software-Programmable Static Dependency section in PRCM  Chapter).  The software sequence when changing static dependency from the MPU clock domain toward the MEMIF  clock domain is:  1. Force destination domain (EMIF) to be awake by programming a forced wakeup transition:  CM_MEMIF_CLKSTCTRL[1:0] CLKTRCTRL = 0x2 :SW_WKUP.  2. Ensure that the power domain which encloses the destination domain is ON:  PM_CORE_PWRSTST[1:0] POWERSTATEST = 0x3: ON-ACTIVE.  3. Change the static dependency setting: CM_MPU_STATICDEP[4] MEMIF_STATDEP bit.  4. Put destination domain back to automatic transition mode: CM_MEMIF_CLKSTCTRL[1:0]  CLKTRCTRL = 0x3 : HW_AUTO.  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.4  MPU-EMIF Static Dependency Needed Around MPU WFI  	DESCRIPTION	  High  	Cortex A-9	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Cautions  105  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Programming of CM_CLKSEL_DPLL_CORE[20]DPLL_CLKOUTHIF_CLKSEL  www.ti.com  
  CM_CLKSEL_DPLL_CORE[20].DPLL_CLKOUTHIF_CLKSEL allows muxing in the DPLL between DPLL  oscillator and BYP_CLK_M3 (that is, DPLL_ABE for DPLL_CORE).  If CM_CLKSEL_DPLL_CORE[20].DPLL_CLKOUTHIF_CLKSEL = 1 and if BYP_CLK_M3 is gated (that is,  in case DPLL_ABE is not Locked) then update of M3 divider which is after previous mux does not complete correctly. The incorrect update of M3 divider is impacting other dividers update; this would lead to inconsistent frequency scaling from CORE DPLL versus voltage change during DVFS transitions and ultimately lead to platform crash.  The BYP_CLK_M3 is only mapped for DPLL_CORE, this issue does not impact the other DPLLs  programming.  GUIDELINES  SW should never set CM_CLKSEL_DPLL_CORE[20].DPLL_CLKOUTHIF_CLKSEL bit to 1. Having  DPLL_ABE clock as a source clock for DPLL_CORE is not necessary.  Note: This guideline applies also for  CM_CLKSEL_DPLL_CORE_RESTORE[20].DPLL_CLKOUTHIF_CLKSEL which should never set to 1.  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.5  Programming of CM_CLKSEL_DPLL_CORE[20]DPLL_CLKOUTHIF_CLKSEL  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4470  1.0  Impacted  106  Cautions  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Power Delivery Network Verification  
  Operating the OMAP at OPP_NITRO or OPP_NTSB creates strict power requirements on the system  (OMAP + Power Management IC + Power Distribution Network).  The OMAP requires carefully controlled system margin validation and verification.  In GHz systems, instability could result from marginal board design, component selection, power supply transients, susceptibility to noise, and so forth.  Developers must optimize PDN board designs to ensure stable operation at GHz frequencies across all conditions and over the lifetime of the phone. The necessary steps to follow to ensure robust operation are listed in the folowing Guidelines section.  GUIDELINES  •  Software guidelines:  1. It is mandatory to use SmartReflex technology for the three power rails (MPU, IVA, CORE): use of AVS is required; not using AVS would lead to abnormal aging and consumption of the system.  2. For IVA and MPU power rails, ABB (adaptative body bias) must be engaged in:  •  ABB Set1 mode (PRM_LDO_ABB_MPU/IVA_SETUP[2] ACTIVE_FBB enabled)  or  •  ABB Set2 mode (PRM_LDO_ABB_MPU/IVA_SETUP[1] ACTIVE_RBB enabled)  For OPP_NITRO and OPP_NTSB, ABB Set2 or ABB Set1 must be enabled. For OPP_TURBO, ABB  Set2 must be enabled.  Software should enable ABB Set1 mode or ABB Set2 mode depending on the following fused bits for OPP_TURBO, OPP_NITRO, and OPP_NTSB:  –  CONTROL_STD_FUSE_OPP_DPLL_1[20] MPU_RBB_TURBO  –  CONTROL_STD_FUSE_OPP_DPLL_1[21] IVA_RBB_ TURBO  –  CONTROL_STD_FUSE_OPP_DPLL_1[22] MPU_RBB_NITRO  –  CONTROL_STD_FUSE_OPP_DPLL_1[23] MPU_RBB_NTSB  –  CONTROL_STD_FUSE_OPP_DPLL_1[24] IVA_RBB_NITRO  –  CONTROL_STD_FUSE_OPP_DPLL_1[25] IVA_RBB_NTSB  •  PCB guidelines:  The Power Delivery Network should be optimized to match OPP_NITRO and OPP_NTSB requirements.  All PCB Design requirements for PDN optimization can be found in Appendix A of the Data Manual.  It is mandatory for the PCB developer to align the PCB with the described guidelines and to meet TI requirements.  If you do not achieve TI requirements, contact your TI representative.  If any competence or tool issue is needed to perform the verification of the simulation of the PCB, contact your TI representative.  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.6  Power Delivery Network Verification  	DESCRIPTION	  High  	Cortex A-9	  SWPZ025E – July 2012 – Revised September 2013  Cautions  107  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  Power Delivery Network Verification  www.ti.com  OMAP4470  1.0  Impacted  108  Cautions  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  SmartReflex Parameters and SmartReflex Convergence Verification  
  SmartReflex (SR) parameters must be optimized after silicon characterization.  Having bad SR parameters or issues in the software on these SR parameters can lead to a bad  convergence for SR, and thus an error percentage of the SR is outside of the authorized range. This condition could lead to:  •  A higher VSR (SmartReflex voltage) (increase in power consumption)  •  A lower VSR (near to the VMIN and so could lead to instabilities of the platforms)  GUIDELINES  Two actions are needed:  •  Verify that the SR convergence went well (see PRCM chapter in TRM). This verification is mandatory for the three power rails (MPU, IVA, and CORE).  •  Verify that the SR parameters implemented in your software are those recommended for the platform after optimization. Keep aligned with the lastest version of Data Manual once available (contact your TI representative in the meantime).  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.7  SmartReflex Parameters and SmartReflex Convergence Verification  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Cautions  109  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  PRCM Voltage Controller Uses MPU Slave Address  www.ti.com  
  When MPU, IVA, and CORE voltage rails are tied together, the PRCM voltage controller uses MPU slave address programmed in the PRM_VC_SMPS_SA[22:16] SA_VDD_MPU_L bit field.  GUIDELINES  Program correct address in the PRM_VC_SMPS_SA[22:16] SA_VDD_MPU_L bit field.  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.8  PRCM Voltage Controller Uses MPU Slave Address  	DESCRIPTION	  Low  	Cortex A-9	  OMAP4470  1.0  Impacted  110  Cautions  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  www.ti.com  EMIF Programming to Allow 466 MHz  
  When OMAP4470 is used at high-performance OPP, the target is 466 MHz on EMIF interface at OPP119.  To allow this performance and correct functionality, the EMIF programming must be updated.  GUIDELINES  Refer to the TRM to get a recommendation on EMIF programming:  •  EMIF_SDRAM_TIM_3[14:13] REG_T_TDQSCKMAX = 0x3 for tDQSCKMAX = 5.5 ns  •  EMIF_DDR_PHY_CTRL_1[3:0] REG_READ_LATENCY = 0xB for tDQSCKMAX = 5.5 ns and RL = 7  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.9  EMIF Programming to Allow 466 MHz  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4470  1.0  Impacted  SWPZ025E – July 2012 – Revised September 2013  Cautions  111  Copyright © 2012–2013, Texas Instruments Incorporated  Public Version  McPDM Downlink Data Corrupted With TWL604x  www.ti.com  
  Some noise issue can occur when OMAP MCPDM downlink path is used with TWL604x audio chip.  Depending on the delay between abe_clks provided by TWL604x and the loopback clock abe_pdm_lb_clk from OMAP, the data transmitted to TWL604x DACs can be corrupted. As a result, the output noise of the analog output stages can increase. Refer to TWL6040/41 silicon errata for more bug details.  GUIDELINES  An inverter is placed on the board between TWL604x.PDMCLK and the OMAP abe_clks pad. The inverter (for example, SN74AUC1G04DCK) must be placed close to TWL604x on the PCB.  	TI	OMAP4470	Cautions	 	WORKAROUND	 3.10 McPDM Downlink Data Corrupted With TWL604x  	DESCRIPTION	  High  	Cortex A-9	  OMAP4470  1.0  Impacted  112  Cautions  SWPZ025E – July 2012 – Revised September 2013  Copyright © 2012–2013, Texas Instruments Incorporated      
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  18  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  MDR1 access can freeze UART module  	  Software has to wait at least (2 timer interface clock cycles + 1 timer functional clock cycle) after L4 clock wakeup before reading TCRR, TCAR1 or TCAR2 registers for GPTimers in POSTED internal  synchronization mode, and before reading WCRR register of the Watchdog timers . The same workaround must be applied before reading 32KSYNCNT_CR register of the 32K sync module.  	 1.1  Delay needed to read some GP timer, WD timer and sync timer registers after wakeup  	  If a General Purpose Timer (GPTimer) is in posted mode (TSICR.POSTED=1), due to internal  resynchronizations, values read in TCRR, TCAR1 and TCAR2 registers right after the timer interface clock (L4) goes from stopped to active may not return the expected values. The most common event leading to this situation occurs upon wake up from idle.  GPTimer non-posted synchronization mode is not impacted by this limitation.  This limitation also impacts read from Watchdog timers WCRR registers.  All the watchdog timers support only POSTED internal synchronization mode. There is no capability to change the internal synchronization scheme to NON-POSTED by software.  The 32KSYNCNT_CR register is also impacted by this limitation, since the 32K sync timer is always in posted synchronization mode.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  19  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  DSI: Minimum Of 2 Pixels Should Be Transferred Through DISPC Video Port  www.ti.com  	  To ensure this problem does not occur, the following software initialization sequence must be used each time MDR1 must be changed:  1. If needed, setup the UART by writing the required registers, except MDR1  2. Set appropriately the MDR1.MODE_SELECT bit field  3. Wait for 5 L4 clock cycles + 5 UART functional clock cycles  4. Clear TX and RX FIFO in FCR register to reset its counter logic  5. Read RESUME register to resume the halted operation  Step 5 is for IrDA mode only and can be omitted in UART mode.  	 1.2  MDR1 access can freeze UART module  	  Because of a glitchy structure inside the UART module, accessing the MDR1 register may create a dummy underrun condition and freeze the UART in IrDa transmission. In UART mode, this may corrupt the transferred data(received or transmitted).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  20  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI: Cancel Tearing Effect Transfer  	  If sending a single pixel is needed, the OCP L4 slave port can be used (through CPU or sDMA).  	 1.3  DSI: Minimum Of 2 Pixels Should Be Transferred Through DISPC Video Port  	  Minimum number of pixels for MIPI command mode from the video port should be greater than 1 (at least 2). Image with less than 2 pixels is not expected to be used in a real applicative use case.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  21  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  DSI: RX FIFO Fullness  www.ti.com  	  Always wait for tearing effect to complete before changing any configuration.  	 1.4  DSI: Cancel Tearing Effect Transfer  	  Transfer using tearing effect cannot be cancelled (writing TE_SIZE to 0). Writing TE_SIZE would have no effect and transfer would continue.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  22  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI: Access Restriction On DSI_TIMING2 Register  	  Use only programming model provided in Programming Model section in the TRM.  	 1.5  DSI: RX FIFO Fullness  	  RX FIFO fullness can be incorrect just after a FIFO read. FIFO fullness should be read only once at the beginning of the transfer. Other accesses during a transfer are not guaranteed.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  23  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  DSI: Tx FIFO Flush Is Not Supported  www.ti.com  	  User must check that the TxByteClkHS clock is activated before initiating any write access to DSI_TIMING2 register.  To ensure the TxByteClkHS clock is active, the user must check:  1. PLL is locked (DSI_PLL_STATUS register; DSI_PLL_LOCK bit)  2. DSIPHY must be in ON power state (PWRCMDON).  3. Clock/Data lane positions are correctly set (DSI_COMPLEXIO_CFG1.xxx_POSITION).  	 1.6  DSI: Access Restriction On DSI_TIMING2 Register  	  This register must not be written twice when TxByteClkHS is stopped to avoid L4 OCP port deadlock.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  24  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  sDMA Channel Is Not Disabled After A Transaction Error  	  User must perform module software reset when a transfer is aborted.  	 1.7  DSI: Tx FIFO Flush Is Not Supported  	  Executing a FIFO flush does not properly clean the logic, thus resulting in unpredictable behavior of the module.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  25  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  DSI SOF Packet Not Send  www.ti.com  	  Whenever a transaction error is detected on a transaction on the write side of the channel i, software must disable the channel(i) by setting the DMA4_CCRi[7] ENABLE bit to 0.  	 1.8  sDMA Channel Is Not Disabled After A Transaction Error  	  In case of destination synchronized transfer on the write port (or source sync with SDMA.DMA4_CCRi[25]  BUFFERING_DISABLE = 1), if a transaction error is reported at the last element of the transaction, the channel is not automatically disabled by DMA.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  26  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  SIMCOP Lens Distortion Correction issue  	  In case of command mode where DDR clock should be provided to peripheral before data, the  workaround is to program DDR_CLK_PRE =! 0. The value of DDR_CLK_PRE must take into account the different timings: TCLK_PREPARE, TCLK_ZERO.  Sequence to enable the DSI:  1. Set the ForceTxStopMode bit to 1 (DSI_TIMING1 register). This asserts the ForceTxStopMode.  2. Enable virtual channel in command mode / Enable DSI interface.  3. Poll the ForceTxStopMode bit to 0 (DSI_TIMING1 register) until deassertion of the ForceTxStopMode bit. The hardware resets this bit at the end of the counter value.  4. Send SOF(0x00000000) packet in command mode.  	 1.9  DSI SOF Packet Not Send  	  The first packet in command mode is not sent due to inaccurate clock gating.  Root cause description: In command mode when DDR_CLK_ALWAYS_ON and IF_EN are set to 1, DDR  clock is not present immediately after the IF_EN bit is set to 1 but when the first HS packet from OCP is ready to be sent to PPI HS link.  The DDR_CLK_PRE field is used between the start of the DDR clock and the assertion of the data request signal. After the time defined by the DDR_CLK_PRE field, the clock lane is always present until the IF_EN bit is set to 0. So, there is a delay between IF_EN set to 1 and assertion of the clock lane.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  27  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  ISS: SOFTRESET Bit Status Not Working For Circular Buffer  www.ti.com  	  Use LDC in YUV422 mode.  	 1.10 SIMCOP Lens Distortion Correction issue  	  SIMCOP LDC module doesn't reach 100 MPix/s target in bilinear mode for YUV420 data.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  28  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ISS: SOFTRESET Bit Status Not Working For Burst Translation Engine  	  Ignore status of the the SOFTRESET bit. After a software reset, wait a few cycles before using the module.  	 1.11 ISS: SOFTRESET Bit Status Not Working For Circular Buffer  	  The SOFTRESET bit of the SYSCONFIG register inside CBUFF (CBUFF_HL_SYSCONFIG[0]  SOFTRESET) is set to 0x0 (reset done state) after reset only if CBUFF is out of IDLE.  While CBUFF slave data port is in IDLE, the SOFTRESET bit is always set to 0x1 (status bit gives an ongoing reset, but reset is finished).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  29  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  ISS State Can Be Corrupted During Debug Mode  www.ti.com  	  Ignore the status of the SOFTRESET bit. After a software reset, wait a few cycles before using the module.  	 1.12 ISS: SOFTRESET Bit Status Not Working For Burst Translation Engine  	  The SOFTRESET bit of the SYSCONFIG register inside BTE (BTE_HL_SYSCONFIG[0] SOFTRESET) is  set to 0x0 (reset done state) after reset only if BTE is out of IDLE.  While BTE slave data port is in IDLE, the SOFTRESET bit is always set to 0x1 (status bit gives an ongoing reset, but reset is finished).  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  30  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI VSYNC HSYNC Detection In Video Mode  	  To avoid read access from being stalled, the CPU must have the priority. This can be configured in the ISP5_MPSR register. Dummy accesses during frame processing lead to data corruption however  response is given immediately. This register can be used to avoid stalling debug accesses. Dummy data is returned in that case but does not hurt functionality because debug accesses do not make sense while ISP5 is processing data.  	 1.13 ISS State Can Be Corrupted During Debug Mode  	  Debug read operations should not impact the internal state of the module.  That cannot be guaranteed because debug reads of some locations can impact DMA requests. Also, some read accesses may be stalled for a long time while ISP operation is ongoing.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  31  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Dual Video Mode  www.ti.com  	  Because before first VSYNC rising edge, one HSYNC is transmitted and clock is transmitted during that HSYNC period, the workaround is to have the HSYNC period of DISPC longer than the timing described below:  •  Configuration with line buffers: 3 VP_PCLK + 6 VP_CLK + 6 DSI_CLK  •  Configuration without line buffers: 3 VP_PCLK + 2 VP_CLK  There is no need to take care of some timings related to enabling the IF_EN, VC_EN, LCD output of the DSIPC.  	 1.14 DSI VSYNC HSYNC Detection In Video Mode  	  DSI engine is not always detecting the first VSYNC HSYNC signals received on the video port in video mode.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  32  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Deadlock Between DISPC And DSI When PCD = 2, VP_CLK_RATIO = 0  	  No  	 1.15 Dual Video Mode  	  When two video ports are available at the input of the DSI protocol engine, the two streams are interleaved by the DSI protocol engine. Only one video mode is supported by the current implementation on VP1 only. VP2 cannot be in video mode even if VP1 is not in video mode.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  33  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Deep Power-Down Support During Off Mode  www.ti.com  	  DISPC_DIVISORi[7:0] PCD = 2 is not supported, where i = 1 to 3. DISPC should be set to  DISPC_DIVISORi[7:0] PCD = 3 or above and DSI_CTRLi[4] VP_CLK_RATIO to 0x1.  	 1.16 Deadlock Between DISPC And DSI When PCD = 2, VP_CLK_RATIO = 0  	  The buffer handshake feature in the DISPC avoids underflow of the DISPC DMA FIFO. The fullness of the DISPC DMA FIFO is checked before providing data to the pipeline when STALL signal is inactive. When the FIFO hand check feature is activated, the pixel transfer to the DSI module during STALL inactivity period can be stopped (no DISPC_PCLK pulse) and restarted when there is enough data in the FIFO. The DSI protocol engine is configured in command mode.  On video port 1 in command mode, when DISPC_DIVISOR1.PCD = 2,  DISPC_CONFIG1.BUFFERHANDCHECK = 1 and DSI_CTRL.VP_CLK_RATIO = 0, the FRAMEDONE  IRQ might not be triggered and TE_SIZE counter might not be decremented to 0. This is caused by a deadlock between the DISPC and DSI modules during the transfer of the last pixel of a line  On video port 2 in command mode, when DISPC_DIVISOR2.PCD = 2,  DISPC_CONFIG2.BUFFERHANDCHECK = 1 and DSI_CTRL2.VP_CLK_RATIO = 0, the FRAMEDONE  IRQ might not be triggered and TE_SIZE counter might not be decremented to 0. This is caused by a deadlock between the DISPC and DSI modules during the transfer of the last pixel of a line.  The DSI protocol engine sends a STALL to the DISPC (stall mode); in parallel the DISPC stops the pixel clock to the DSI because it is waiting for its FIFO DMA to be refilled (buffer handcheck feature). When FIFO DMA is refilled, the DISPC being in stall mode does not provide back the pixel clock to the DSI to deassert the stall and it does not send the last pixel to the DSI.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  34  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  RTA Feature Is Not Supported  	  Software workaround:  •  Before getting into off mode, force the value stored in the control module  EMIF_SDRAM_REF_CTRL.REG_INITREF_DIS to 1.  –  This forces the value for the EMIF register to 1 when its content is restored when returning from off mode.  •  When returning from off mode, and before making any access to the memory in DPD state:  1. Put CORE PLL in MN bypass mode CM_CLKMODE_DPLL_CORE.DPLL_EN = 0x4.  2. Program the DLL override CM_DLL_CTRL.DLL_OVERRIDE = 1.  3. Force the configuration field EMIF_SDRAM_CONFIG.REG_SDRAM_TYPE register to 0x1  (reserved), then back to 0x4 (LPDDR2-S4) or 0x5 (LPDDR2-S2) according to memory  configuration. This forces the controller back into its init state instead of self-refresh state.  4. Reconfigure EMIF_SDRAM_REF_CTRL.REG_INITREF_DIS to 0.  5. Perform normal init phase as from global cold reset.  	 1.17 Deep Power-Down Support During Off Mode  	  When coming out of off mode, the memory controllers assume connected SDRAMs to be in self-refresh mode.  The EMIF receives a DEVICE_OFFWKUP_CORERSTACTST signal from the PRCM defining if an EMIF  cold reset was due to a global reset or to exiting off mode;  •  In case of a global cold reset, the full SDRAM init phase is performed.  •  In case of off mode exit, only the self-refresh exit sequence is performed and auto-refresh commands are immediately sent.  If the memory was in deep power-down state during the chip off mode, the sequence performed by EMIF  could result in an unexpected behavior on the memory side. Exit from DPD actually requires the same full init sequence as after a global cold reset.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  35  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  MMCHS_HCTL.HSPE Is Not Functional  www.ti.com  	  PRM_LDO_SRAM_<Memory Voltage Domain>_SETUP[0] DISABLE_RTA_EXPORT default value is  loaded by an eFuse value. The fuse value disables this RTA feature, so these bits must be kept at default value.  	 1.18 RTA Feature Is Not Supported  	  RTA (retention till access) feature is not supported and leads to device stability issues when enabled.  The following modules are embedding memories with RTA support:  •  MPU subsystem (cache memories)  •  OCM RAM  •  SGX  •  Display subsystem  •  HS USB OTG  •  IVA-HD subsystem  •  Face detect  •  Imaging subsystem  •  DMM  •  DSP subsystem  •  AESS  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  36  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Wrong Access In 1D Burst For YUV4:2:0-NV12 Format  	  None  	 1.19 MMCHS_HCTL.HSPE Is Not Functional  	  Due to design issue MMCHS_HCTL.HSPE bit does not work as intended. This means that the  configuration must always be the normal speed mode configuration (MMCHS_HCTL.HSPE=0).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  37  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Status of DSI LDO Is Not Reported to DSI Protocol Engine  www.ti.com  	  If YUV4:2:0-1D burst is required:  •  Set DISPC_VIDp_ATTRIBUTES[22]DOUBLESTRIDE to 0x0 and  DISPC_VIDp_ATTRIBUTES[13:12]ROTATION to 0x1 or 0x3  	 1.20 Wrong Access In 1D Burst For YUV4:2:0-NV12 Format  	  When in YUV4:2:0 format in 1D burst, the DISPC DMA skips lines when fetching Chroma sampling.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  38  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI Break Frame Corrupt OnGoing Transfer  	  There is no workaround to check HW status of DSI LDO.  The LDO_POWER_GOOD_IRQ should be disabled by keeping or setting  DSI_IRQENABLE.LDO_POWER_GOOD_IRQ_EN to 0x0.  	 1.21 Status of DSI LDO Is Not Reported to DSI Protocol Engine  	  The DSI-PHY has an internal LDO. This LDO is used to convert 1.8V coming from VDDS_DSI input into 1.2V for appropriate DSI voltage level.  An internal LDOPWRGOOD signal output by the DSI_PHY indicates the status of the LDO (LDO is up or is down). This signal should be connected to the DSI protocol engine for IRQ reporting  (LDO_POWER_GOOD_IRQ).  This signal is not connected to the DSI protocol engine and input of protocol engine is tied to 0x0.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  39  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  HSI Error Counters Cannot Be Disabled  www.ti.com  	  No workaround identified.  	 1.22 HSI Break Frame Corrupt OnGoing Transfer  	  When a break frame is sent in the middle of data transfers (DMA based),in pipelined flow or synchronized flow, one Tx data frame will be overwritten at the transmitter side by an all-zeros frame (break is received correctly).  Table 1-1. Data Corruption Example  Transmitted Data:  Received Data:  0x77CFA0B0  0x77CFA0B0  0xDFFC7B49  0x00000000 <- break frame and data last  0x5BE7AD07  0x5BE7AD07  0x7F7F1BC8  0x7F7F1BC8  ....  ....  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  40  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  McPDM/DMIC Issue With Software Reset With SW_xx_RST  	  To disable error reporting:  •  Set HSR_COUNTERS_Pp[19:0] FT counter to max value (0xFFFFF)  •  Set HSR_COUNTERS_Pp[23:20] TB error to min value (0x0)  	 1.23 HSI Error Counters Cannot Be Disabled  	  The counter configuration capabilities include start (begin counting), stop (halt counting), and load (set time-out period).  It is not possible to disable the frame time-out and tailing bit error counters. Setting value 0 in HSR  counters (HSR_COUNTERS_Pp[23:20]TB = 0x0 and HSR_COUNTERS_Pp[19:0]FT = 0x0) disables  those counters, whereas errors keep being generated with this value.  In transient setup phases where TX and RX data rates are still not aligned, false errors may be reported by HSR. Because HSR halts the reception upon an error (until the error is acknowledged) communication will be broken. In such circumstances, inability to disable error detection may be a critical problem.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  41  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  UART: Extra Assertion of UARTi_DMA_TX Request  www.ti.com  	  Follow the programming model below to disable and enable the channels:  •  Disable the channels:  –  Set the MCPDM_CTRL.SW_xx_RST bit to 1.  –  Disable all channels.  –  Set the MCPDM_CTRL.SW_xx_RST bit to 0.  •  Enable the channels:  –  Set the MCPDM_CTRL.SW_xx_RST bit to 1  –  Enable necessary channels.  –  Set the MCPDM_CTRL.SW_xx_RST bit to 0.  Note: SW_xx_RST is either MCPDM_CTRL_SW_UP_RST, CPDM_CTRL_SW_DN_RST, or  DMIC_CTRL.SW_DMIC_RST.  	 1.24 McPDM/DMIC Issue With Software Reset With SW_xx_RST  	  When transferring a data on McPDM uplink path, if the McPDM uplink path is reset by  MCPDM_CTRL.SW_UP_RST, uplink FIFO is correctly reset but the dma pending signal is kept asserted.  This can result in an invalid access by the host DMA to uplink FIFO.  The same applies to DMIC if reset by DMIC_CTRL.SW_DMIC_RST.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  42  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  USB OTG Software Initiated ULPI Accesses To PHY Registers Can Halt the Bus  	  Use TX_THRESHOLD+TRIGGER_LEVEL <= 63 (TX FIFO Size - 1).  	 1.25 UART: Extra Assertion of UARTi_DMA_TX Request  	  UART TX with a DMA THRESHOLD default configuration of 64 bytes would result in extra DMA Req  assertion when FIFO tx_full is switched from high to low.  This is because of the TX THRESHOLD added in ES2.0 compared to ES1.0.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  43  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  ISS-SIMCOP: ISS-LSC Not Transparent After Prefetch Error Event  www.ti.com  	  If possible do not use software initiated reads/writes to access the PHY ULPI registers. Depending on the PHY, there may be a possibility to access these registers by I2C.  If the USB OTG is host, another workaround consist in putting the bus in suspend mode with low-power mode disabled when willing to read/write an ULPI PHY register:  •  Disable PHY low-power mode (Power:EnableSuspendM=0)  •  Execute USB SUSPEND.  •  Do the ULPI register read/write  •  Execute USB RESUME  •  Restore Power:EnableSuspendM.  If the USB OTG is peripheral, another workaround consists in using the 1-2us time frame after reception of SOF, before any transfer begins on the bus:  •  Enable the SOF interrupt  •  Program the ULPIReg registers except the ULPIRegControl:D0 bit  •  When the SOF interrupt fires, set the ULPIRegControl:D0 bit to make the access  •  Disable the SOF interrupt  	 1.26 USB OTG Software Initiated ULPI Accesses To PHY Registers Can Halt the Bus  	  Software initiated read/write accesses to the PHY ULPI registers (that is, when using USB OTG ULPIReg registers) may be wrongly mixed up with USB OTG Tx traffic. Due to this corruption the USB OTG will detect a Vbus error or a Babble error (logged in IntrUSB register), and halts the communication.  Hardware initiated accesses to the PHY ULPI registers are not impacted because they occur during connect, disconnect, suspend, and resume, when there is no USB traffic. Only software initiated accesses are impacted, and only when there is on-going USB Tx transfers.(including SOF in host mode) Software initiated accesses during connect, disconnect, suspend, and resume are not impacted. Host and peripheral modes are impacted.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  44  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  UART: In an RX Wake-up Mechanism, the First Received Character Can be Lost  	  None  	 1.27 ISS-SIMCOP: ISS-LSC Not Transparent After Prefetch Error Event  	  The prefetch error event (PREFETCH_ERROR) is triggered when the gain table is read too slowly from SDRAM. When this event is pending the module should go into transparent mode, meaning LSC should copy input pixels to output pixels (output=input). Actually, when the prefetch error event occurs the LSC  module outputs black pixels.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  45  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Platform Hangs When CPU Tries To Configure The EMIF Firewall  www.ti.com  	  This is a known behavior and is dependant on the speed of response of the PRCM module to a wakeup.  The CTS wake-up mechanism should be preferred when it is possible.  	 1.28 UART: In an RX Wake-up Mechanism, the First Received Character Can be Lost  	  When an RX wake-up mechanism is used for the UART module, the first character received can be lost.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  46  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DDR PHY Must be Reset After Leaving OSWR  	  The workaround is to make sure that the other CPU is not doing external accesses through EMIF when a CPU is updating the EMIF firewall.  The issue does not occur with the other initiators because they do not share the bridge before the L3  interconnect.  	 1.29 Platform Hangs When CPU Tries To Configure The EMIF Firewall  	  The issue occurs during concurrent accesses of CPU0 and CPU1 as described below. If one CPU fetches code from external RAM while the other CPU requires the access to the EMIF firewall (configuring its register REGUPDATE_CONTROL), then both CPUs hang.  The issue occurs because when REGUPDATE_CONTROL.BUSY_REQ is activated, the interconnect  blocks the accesses. Because the two CPUs of the MPUSS use the same bridge before the L3  interconnect, this bridge is saturated if one CPU is accessing external RAM.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  47  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Async Bridge Corruption  www.ti.com  	  If bus keeper mode is used, issue a PHY reset after leaving OSWR, set bit [10] to 1 at the following address (using read modify write to this register to keep other bits):  •  Assert PHY reset for EMIF1 @ x 4C00 0060  •  Assert PHY reset for EMIF2 @ x 4D00 0060  Because this resets the command line, this reset must be done when memory is in self-refresh mode.  	 1.30 DDR PHY Must be Reset After Leaving OSWR  	  If bus keeper mode is used (programmed through CONTROL_LPDDR2IO*_*.LPDDR2IO*_GR*_WD) after  leaving open switch retention, it is necessary to reset the DDR PHY. Otherwise the LPDDR2 memory cannot be accessed.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  48  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Keyboard Key Up Event Can Be Missed  	  All the initiators connected through async bridge must ensure that data path is properly drained before issuing WFI. This condition is met if one strongly ordered access is performed to the target right before executing the WFI.  	 1.31 Async Bridge Corruption  	  If data is stalled inside an asynchronous bridge because of back pressure, it may be accepted multiple times, thus creating pointer misalignment that corrupts next transfers on that data path until the next reset of the system (no recovery procedure once the issue is hit, the path remains consistently broken).  The async bridge can be found on the path between MPU to L3 interconnect (to EMIF) and Cortex M3 to L3 interconnect (to EMIF).  In the OMAP4460 and OMAP4470 devices, direct path from MPU to EMIF (through memory adapter in MPU-SS) is replacing MPU-to-DMM path, which was taking place in the OMAP4430. Hence, in an  OMAP4460 or OMAP4470 device, this bug is not impacting the direct path from MPU to EMIF (through memory adapter in MPU-SS).  This situation can happen only when the idle is initiated by a master request disconnection (which is trigged by software when executing WFI).  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  49  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  L2 Cache Corruption Issue  www.ti.com  	  First thing is to program the debounce time correctly:  If X (us) is the maximum time of bounces when a key is pressed or released, and Y (us) is the minimum time of a key release that is expected to be detected, then the debounce time should be set to a value in-between X and Y.  In case it is still possible to get shorter than debounce time key-release events, then the only solution is to implement a software workaround:  Before printing a second character on the screen, the software must check if the keyboard has hit the failing condition (cf signature of the bug above) or if the key is still really pressed and then take the appropriate actions.  	 1.32 Keyboard Key Up Event Can Be Missed  	"  When a key is released for a time shorter than the debounce time, in-between 2 key press (KP1 and KP2), the keyboard state machine will go to idle mode and will never detect the key release (after KP1, and also after KP2), and thus will never generate a new IRQ indicating the key release.  From the operating system standpoint, only a key press as been detected, and the key will keep on being printed on the screen until another or the same key is pressed again.  When the failing state has been reached, the KBD_STATEMACHINE register will show ""idle state"" and the KBD_FULLCODE register won't be empty, this is the signature of the bug.There is no impact on the power consumption of the system as the state machine goes to IDLE state.  "	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Not impacted  50  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  USB HOST - Impossible To Attach a FS Device To An EHCI Port. Handoff To OHCI Is Not Functional 	  No SW workaround.  	 1.33 L2 Cache Corruption Issue  	  Due to a design issue of power control signals of the L2 Cache, the content of the memory can be corrupted.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  51  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  USB HOST EHCI - Port Resume Fails On Second Resume Iteration  www.ti.com  	  Only attach FS devices to OHCI ports, or use a HS hub to interface between EHCI ports and LS/FS/HS  devices.  	 1.34 USB HOST - Impossible To Attach a FS Device To An EHCI Port. Handoff To OHCI Is  Not Functional  	"  It is not possible to perform USB transactions with a FS device on port USB_B1/B2.  EHCI is able to detect the device, reset it and find that it is a FS device. SW will then hand off the port to OHCI by setting PORTSC[5]:PO (PORT OWNER) bit.  OHCI is able to detect the connection, but then cannot communicate with the device.  When the PHY switches to FsLsSerialMode, the ULPI DIR signal will go to 1 forever.  In HS mode, if DIR is 1, then the ULPI DATA switch to ""input only"" mode. This input only configuration is wrongly kept after switching to FsLsSerialMode, hence USB transactions cannot occur.  Attaching a FS device directly to an OHCI port is working fine.  "	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  52  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  System I2C hang due to miss of Bus Clear support  	  After setting the suspend bit, switch the internal clock supply from the external ULPI_CLK provided by the PHY to the internal 60 MHz clock.  This will allow the internal counter to reach 18. Then after 1ms, switch back to the external ULPI_CLK.  This switch can be done thanks to the CM_L3INIT_HSUSBHOST_CLKCTRL[25:24]:CLKSEL_UTMI_P1/2  bits.  During the application of the WA, the  CM_L3INIT_HSUSBHOST_CLKCTRL[9:8]OPTFCLKEN_UTMI_P1/2_CLK optional clocks need to be  enabled.  	 1.35 USB HOST EHCI - Port Resume Fails On Second Resume Iteration  	  When entering USB suspend mode, the EHCI will automatically ask the PHY to enter low power mode (PHY function control register bit suspendM is reset).  The PHY will then cut the ULPI_CLK after a minimum of 5 clock cycles.(no maximum specified).  On the other hand, the EHCI embeds a counter counting up to 18 before cutting the internal clock after suspend signal is asserted.  Since the PHY cuts the clock prematurely, the counter is not reaching 18. However, the first suspend and resume will work correctly.  At the second suspend sequence, since the counter has maintained the value (thanks to retention flops), the counter reaches 18 and cuts the clock internally.  As a consequence, the internal state machine does not transition to the correct state causing the next resume to fail.  Both host initiated resume and remote wakeup are impacted by this issue.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  53  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  HSI: Issues In Suspending and Resuming Communication (HSR and HST)  www.ti.com  	  I2C SW handler could be programmed to detect such a locked situation. In this case, it will check the Bus Busy bit and issue the needed clock pulses.  	 1.36 System I2C hang due to miss of Bus Clear support  	  There is no H/W mechanism preventing violating below I2C Bus clear standard requirement.  If the data line (SDA) is stuck LOW, the master should send 9 clock pulses. The device that held the bus LOW should release it sometime within those 9 clocks. If not, then use the HW reset or cycle power to clear the bus.  Sys_Warmreset doesn't reset the I2C IP at Phoenix level, it does at IC level.  Resetting the IP at Phoenix PMIC would avoid such situation, but this is partial answer as many other I2C  slave devices could be addressed during Warm reset without any sensitivity to this sys_warmreset pin.  No other reset source possible at Phoenix level to reset the I2C controller (only Cold Reset).  So, once the situation is reached, IC is seeing bus busy status bit.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  54  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI: Issue with SW reset  	  If this is the HST initiative:  It is not possible to configure MODE_VAL bit to SLEEP with active data transfers because it has no impact.  The only way to suspend then resuming a HSI communication with HST is to disable then re-enables active TX FIFOs.  If this is the HSR initiative:  There is no way to suspend then resume the receiver without data loss.  	 1.37 HSI: Issues In Suspending and Resuming Communication (HSR and HST)  	  There are some fails while suspending then resuming on going HSI communication on both HST and HSR  initiatives.  If this is the HST initiative:  1. It is possible to suspend then resume communication by disabling then enabling active HST FIFOs through HST_MAPPINGf [0] ENABLE bit. Transmission stops as soon as TX FIFO is disabled  (ENABLE bit equal to 0x0) and resumes as soon as TX FIFO is re-enabled (ENABLE bit equal to 0x1).  2. It is not possible to suspend then resume safely by setting HST mode to SLEEP. Writing  HST_MODE_Pp[1:0] MODE_VAL = 0x0 (SLEEP) does not have any impact on transmission that  continues.  If it is the HSR initiative:  1. It is not possible to suspend then resume communication by disabling then enabling active HSR FIFOs through HSR_MAPPINGf [0] ENABLE bit. Disabling the RX FIFO does not stop the transmission (by dropping the READY line). The data keeps being sent by HST and HSR simply discards it. By the way, no RX mapping error is generated. Transmission did not actually stop and frame is lost by HSR.  2. It is not possible to suspend then resume safely by setting HSR mode to SLEEP. Writing  HSR_MODE_Pp[1:0] MODE_VAL = 0x0 (SLEEP) stops any ongoing transfer unconditionally which  may result in loss of frame(s) once the transfer is resumed.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  55  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  DMA4 generates unexpected transaction on WR port  www.ti.com  	  Use the HW reset from the PRCM instead of the local SW reset.  	 1.38 HSI: Issue with SW reset  	  There is a bug in HSI IP;once the SW reset bit is set through the HSI_SYSCONFIG[1] SOFTRESET bit, the SW reset is not propagated well if there is an on-going reception.  If the reception never ends (synchronization loss, interrupted transmission from transmitter...), then this is a deadlock, the SW reset is not propagated and there is no OCP access possible.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  57  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  DMA4 channel fails to continue with descriptor load when Pause bit is cleared  www.ti.com  	  There is a software workaround to solve this issue  1. Work around to resolve both Data Integrity and Performance issue :  56  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DMA4 generates unexpected transaction on WR port  •  Dummy enable-disable for an aborted Channel. i.e. On abort, configure the channel as soft sync with No of frames = 0 and enable the channel by writing 0x1 into the ENABLE bitfield of register DMA4_CCRi. Wait for the Address Misaligment Interrupt. The channel is now ready for reuse.  •  Ensure that clean drain happens for a channel that is or is to be used as part of a channel chain.  i.e. ensure that the abort conditions never occur for this channel  •  If a channel gets aborted, do not reuse the channel in a chain  •  Don't use channel chaining  2. Work around to resolve the data integrity only.  Disable prefetch in all channels that are part of a channel chain  	 1.39 DMA4 generates unexpected transaction on WR port  	  The DMA4 channel generates an unexpected transaction on WR port under the following 2 scenarios :  •  Scenario 1  1. Software synchronization : Bit fields SYNCHRO_CONTROL and SYNCHRO_CONTROL_UPPER  are set to 0 in register DMA4_CCRi  Channel element number : Bit field CHANNEL_ELMNT_NBR is set to 0x9 in register DMA4_CENi  Channel frame number : Bit field CHANNEL_FRAME_NBR is set to 0x1 in register DMA4_CFNi  Element size : Bit field DATA_TYPE is set to 0x2 in register DMA4_CSDPi  Destination addressing mode : Bit field DST_AMODE is set to 0x1 in register DMA4_CCRi  Destination is packed : Bit field DST_PACKED is set to 0x1 in register DMA4_CSDPi  Destination endianism : Bit field DST_ENDIAN is set to 0x0 in register DMA4_CSDPi  Destination burst enable : Bit field DST_BURST_EN is set to 0x1 in register DMA4_CSDPi  Destination start address : Register DMA4_CDSAi is set to 0xabcd0000  Disable graphics operation : Bit fields CONSTANT_FILL_ENABLE and  TRANSPARENT_COPY_ENABLE are set to 0x0 in register DMA4_CCRi  The channel has got an ERR response on the WR port before the end of block transfer. The  channel has gone for clean abort and got disabled. The same channel has been configured with  soft-sync and included in the channel chaining (This channel is not the head of the chain). When this channel gets enabled through the link, the channel is writing the data out as soon as it fetches the data from Read side. It is expected that the channel should go with burst transfer, but it is going for single transfers  This results in a performance issue as DMA is executing single transfers instead of burst transfers.  This performance issue is also observed while using the channel with destination synchronization and prefetch enabled.  2. Destination sync with Prefetch enabled : Bit field SEL_SRC_DST_SYNC is set to 0x0 ; Bit fields SYNCRO_CONTROL_UPPER and SYNCRO_CONTROL should not be set to 0x0 ; Bit field  PREFETCH is set to 0x1 in register DMA4_CCRi The other settings remain same as in use case  #a described above  •  Scenario 2  The channel has got an ERR response on the WR port before the end of block transfer. The channel has gone for clean abort and got disabled. The same channel has been configured with destination-sync with prefetch enabled and included in the channel chaining (This channel is not the head of the chain). When this channel gets enabled through the link, the read port will start its transaction. If the HWR request to this channel comes before the channel gets its first response, the channel will start a WR transaction with byte enable 0. Also, the internal data counters get updated and the corresponding data will never come out of DMA4. The Data FIFO locations are also not recovered.  This results in a Data Integrity issue.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  58  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  MPU clock glitches at OPP change  	  The software workaround is to configure DMA4 to be in no-standby or force-standby mode before clearing the PAUSE bit. The DMA4 can be reverted back to smart-standby mode after a certain period (after detecting DMA4_CSR[15:15] of corresponding channel to be 0 or ensuring DMA4_CCR[7:7] bit of  corresponding channel to be 0. This ensures descriptor load completion or channel termination.) 	 1.40 DMA4 channel fails to continue with descriptor load when Pause bit is cleared  	"  This Bug can occur only in a channel that is part of a channel chain. If channel chaining is not used, this bug is never seen.  An exact corner case sequence of events must occur. The sequence is:  •  The channel is enabled and then aborted*.  •  This same channel is now configured as part of a channel chain (it should not be the head of the channel chain).  •  The channel is configured as ""software synchronized"" or ""hardware synchronized at destination with prefetch enabled""  •  The channel gets enabled through linking.  * Following is the subset of abort conditions for this scenario:  •  The channel is disabled in the middle of transaction and channnel is not a drain candidate.  •  The channel gets a transaction error on write port but not at the end-of-block transaction.  •  The channel gets a read transaction error and is not a drain candidate.  "	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  60  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI: DSP Swakeup generated is the same than MPU Swakeup. System can't enter in off mode due to the DSP.  	  The Software should lock the DPLL at 2 x the OPP frequency and disable the DCC for all OPPs:  •  Locking MPU DPLL at 2.4GHz for 1.2GHz unitsand at 3GHz for 1.5GHz units. (See the table below for DPLL_MPU recommended settings.) As DM never mentioned DCC used, these lock frequencies are  already documented.  •  Disabling DCC: CM_CLKSEL_DPLL_MPU[22] DCC_EN=0.  Table 1-2. DPLL_MPU Recommended Settings  SysClk  MPU OPPs  MPU DPLL  MPU  (MHz)  OPPs  VDD_MPU  DPLL  M  N  M2  M3  MPU Actual  (V)  locked  Freq  Freq  (MHz)  (MHz)  38.4  NITRO+S  1.35  2995.2  39  0  1  Use M2  0  1497.6  B  Output  NITRO  1.35  2400  125  3  1  0  1200  26  NITRO+S  1.35  2998.7  173  2  1  Use M2  0  1499.3  B  Output  NITRO  1.35  2402.4  231  4  1  0  1201.2  19.2  NITRO+S  1.35  2995.2  78  0  1  Use M2  0  1497.6  B  Output  NITRO  1.35  2400  125  1  1  0  1200  16.8  NITRO+S  1.35  3001.6  268  2  1  Use M2  0  1500.8  B  Output  NITRO  1.35  2402.4  143  1  1  0  1201.2  12  NITRO+S  1.35  3000  125  0  1  Use M2  0  1500  B  Output  NITRO  1.35  2400  100  0  1  0  1200  SWPZ017L – September 2011 – Revised September 2013  Bugs  59  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  MPU clock glitches at OPP change  www.ti.com  Units are trimmed in production to support those frequencies, new trimming bits are added to give this information: CONTROL_STD_FUSE_OPP_DPLL_1 [19:18] = 00 for 2Ghz, 01 for 2.4GHz and 11 for  3GHz.  For material trimmed at 2.0GHz only (CONTROL_STD_FUSE_OPP_DPLL_1[19:18] = 00), trimming  override at a fix value is required to achieved performances at 2.4 and 3Ghz (write 0x29 in register CONTROL_DPLL_NWELL_TRIM_0). This trimming override is needed only for non production material.  The new trimming bits CONTROL_STD_FUSE_OPP_DPLL_1 [19:18] will not give information of silicon performance type. To know the silicon performance type software sill need to read  STD_FUSE_PROD_ID_1[17:16] SILICON_TYPE.  	 1.41 MPU clock glitches at OPP change  	  CPU random hang can happen during 1.2 and 1.5 GHz OPP changes. Hang are due to MPU clock glitch or shrink pulses created at DPLL MPU enable/disable with DCC (Duty Cycle Correction) used.  DCC is required for DPLL lock frequency higher than 2Ghz.  OPPs lower than 920 MHz use DPLL clock divided by 2, DCC is not used and so there is no issue at OPP  change.  1.2 and 1.5GHz OPPs use the direct clock output from the DPLL and so this clock passes through a Duty Cycle Corrector. Random hang can happen at OPP change.  Enable signal of DCC from the PRCM is not resynchronized with the output clock of the DCC and so glitches can occur at the output of the clock switch when enable signal toggles. This can create hang of the system.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  61  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  CBUFF Ready Window Event in Write Mode  www.ti.com  	  •  While in the suspend path:  1. DSP is forced through SW to wake-up: - CM_DSP_CLKSTCTRL [1:0] CLKTRCTRL = 0x2  2. When CAWAKE signal has an activity, it will wake-up MPU and DSP; the DSP domain becomes  active  3. Program DSP through SW to transition to low power state: change the HW_AUTO, sleep and wake up are based upon hardware conditions - CM_DSP_CLKSTCTRL [1:0] CLKTRCTRL = 0x3  •  This will forcefully clear DSP wakeup-gen and will allow DSP to go idle.  •  No impact of this workaround on power/performance is seen after doing measurements  	 1.42 HSI: DSP Swakeup generated is the same than MPU Swakeup. System can't enter in  off mode due to the DSP.  	  There is a silicon bug in HSI IP.  The wakeup dependency from HSI towards DSP is by default enabled and the register bit controlling this dependency is read only. There is no option to disable this dependency.  As a result when the MPU Wakeup is generated, a false DSP wakeup is also generated.  When below scenario happens:  1. Modem interface (HSI is enabled)  2. The system is allowed to suspend  3. When CAWAKE signal has activity, it will wake-up MPU; it also wakes up DSP incorrectly.  Consequences of this bug in previous scenario is  4. The DSP is not able to handle this wake up correctly  5. Next suspend, system can't enter in off-mode because DSP remains active  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  62  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  CSI-2 Receiver Executes Software Reset Unconditionally  	  The number of CBUFF windows to use in write mode for a given context is two windows.  	 1.43 CBUFF Ready Window Event in Write Mode  	  The next CBUFF ready window event (IRQ_CTXx_READY) is generated once CPU clears the CBUFF  ready (IRQ_CTXx_READY)and after the CPU writes in the current ended window (setting the  CBUFF_CTX_CTRL_i [10] DONE bit to 0x1).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  63  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  USB Host TLL Bit-stuffing Feature Is Broken  www.ti.com  	  Software must ensure that there is no ongoing traffic before performing a software reset. In particular, the CSI-2 receiver must be reset to resume normal operation after a CSI-2 FIFO overflow. There may be remaining data in the FIFO, and therefore ongoing traffic, when the software driver receives the overflow interrupt. To avoid creating a system hang, software must either:  •  Wait for several 1000s of L3 cycles before performing the software reset after an overflow or  •  Use the ISS level software reset  	 1.44 CSI-2 Receiver Executes Software Reset Unconditionally  	  Ongoing transactions may be interrupted when a software reset is performed while there is still active traffic generated by the CSI-2 receiver. Interruption of ongoing transactions typically leads to a general OMAP hang that can only be recovered by a device reset.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  64  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ISP H3A Hangs Due to Unstable Vertical Sync Signal  	  Disable TLL bit-stuffing on all enabled TLL channels: TLL_CHANNEL_CONF_i[11] ULPINOBITSTUFF = 1  and do not use at the same time one TLL port and one ULPI port or one HSIC port.  	 1.45 USB Host TLL Bit-stuffing Feature Is Broken  	  The TLL bit-stuffing emulation feature (enabled by default after reset in the TLL_CHANNEL_CONF_i[11]  ULPINOBITSTUFF bit) is broken. It must be disabled, that is, bit-stuffing must be disabled on all enabled TLL channels.  However, disabling bit-stuffing on a TLL channel induces an asymmetry in the number of transmitted bits between the TLL channel and the other ports (ULPI or HSIC), which may result in an underrun or overrun errors. This could be the case while transferring data pattern where bit-stuffing is heavily used, like a white image (full of 11111...).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  65  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  GPIO IRQ Not Generated After MPU Idle if IRQSTATUS Bits Not Cleared  www.ti.com  	  ISP full reset is necessary to exit from H3A hang state.  	 1.46 ISP H3A Hangs Due to Unstable Vertical Sync Signal  	  If unexpected VD, Start of frame signal, caused by noise comes before finishing the previous frame statistics, the H3A module hangs.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  66  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI PLL Signal is Not available on Hardware Observability Pads  	  Note: In the below paragraph, 'x' stands for 0 or 1 being the 1st interrupt to be handled, either MPU or DSP, 'y' refers to the other interrupt line.  Upon an interrupt reported through GPIO_IRQSTATUS_x, do the following:  •  Read out GPIO_IRQSTATUS_x => status_value_x  •  Write status_value_x to GPIO_IRQSTATUS_x (clear the enabled status bits)  •  Read out GPIO_IRQSTATUS_SET_y=> enable_value_y  •  Write status_value_x and NOT enable_value_y to GPIO_IRQSTATUS_y  By doing so, user clears the unused interrupt status bits for the other interrupt line.  An extension to this workaround is to clear GPIO_IRQSTATUS_y (all the bits) when the corresponding interrupt line (most of the time the DSP, that is, 2nd interrupt line) is not used, at each time GPIO_IRQSTATUS_x is cleared.  Note: Clearing GPIO_IRQSTATUS_0 (respectively 1) is done by writing 0xFFFFFFFF to this register. It will automatically clear GPIO_IRQSTATUS_RAW_0 (respectively 1) consequently.  	 1.47 GPIO IRQ Not Generated After MPU Idle if IRQSTATUS Bits Not Cleared  	  After the GPIO is configured in smart-idle (or smart-idle with wake-up) and the system goes into MPU  inactive mode (idle), the GPIO does not generate any IRQ again if any of the register bits of both interrupt line raw status registers (GPIO_IRQSTATUS_RAW_0 or GPIO_IRQSTATUS_RAW_1) is set. In the case  of a GPIO configured in smart-idle wake-up mode (GPIO_SYSCONFIG[4:3]=0x3), the wake-up associated to the GPIO IRQ event will not even occur.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  67  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Blending Calculation Error When Premultiply Alpha is Used  www.ti.com  	  No workaround is available.  	 1.48 DSI PLL Signal is Not available on Hardware Observability Pads  	  When DSI PLL is under locking, SYS_CLK can be observed on the hardware observability but once PLL  is locked the hardware observability signal does not change and still show SYS_CLOCK. DSI PLL is not available on hardware observability.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  68  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HS USB: Multiple OFF Mode Transitions Introduce Corruption  	  No workaround is available.  	 1.49 Blending Calculation Error When Premultiply Alpha is Used  	  The equation for layer blending when upper layer is a premultiplied with a global alpha:  LYR(result) = A(global) * LYR(upper) + (1 -“ (A(global) * A(pixel))) * LYR(lower)  Where:  •  A(global) is alpha of upper layer  •  A(pixel) is pixel alpha of upper layer  •  (1 -“ (A(global) * A(pixel))) is the first complement of A(global * A(pixel))  •  When A(global) = 0  P(result) should be P(lower). Calculation leads to 0xff * P(lower) which can have 1-bit error if P(lower)  > (full range)/2 (0x80 for 8-bit)  •  When A(global) = 0xff  P(result) should be P(upper). Calculation leads to 0xff * P(upper) + (1-A(pixel)) * P(lower)  For example, 8-bit multiplication-with-rounding leading to 1-bit error in case Operand > (full range) / 2.  0x8c * 0xff = 0x8B74 final resulting after rounding is 0x8B instead of 0x8C.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	"  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  69  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  DSS Block in ""Idle Transition"" State when using RFBI I/F  www.ti.com  "	  The workaround is to only perform the SAR-save of the USB registers if the USB bus has been resumed since the last wakeup from OFF mode.  If the USB has been left untouched in-between the previous wakeup from OFF, and the next OFF mode entry, then do not perform the USB registers SAR-save. (However the regular SAR-save is still needed for PRCM and other registers. Just skip the USB part)  By doing so, the SAR-restore process is always restoring valid data.  	 1.50 HS USB: Multiple OFF Mode Transitions Introduce Corruption  	  When the system enters off mode, the save-and-restore (SAR) process comes into play. During the save sequence, the USB host content must be saved (even if the module was not in use). The saved content is automatically restored upon the next wakeup from off mode.  When the save of the USB context occurs, an extra pulse of UTMI_root clock coming from USB DPLL is entering the IP, and generates a minor corruption. This corrupted context is saved and restored later.  Upon each save thereafter, the corrupted context is corrupted further. This is a cumulative process. At least three consecutive saves (with no wakeup of USB in-between) are needed for introducing a fatal corruption.  This corruption will impact the next use of the USB module: it could be while resuming a suspended device, or it could be upon the enumeration of a new device. The exact failure is not predictable: disconnection or stalls have been observed.  TLL and external PHY modes are impacted.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  70  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Deadlock Between SmartReflex™ and Voltage Processor  	  After transfer of image completes, set the RFBI mode into bypass mode by setting the  DISPC_CONTROL1[16] GPOUT1 and DISPC_CONTROL1[15] GPOUT0 bits to 0x1.  	" 1.51 DSS Block in ""Idle Transition"" State when using RFBI I/F  "	  DISPC and RFBI are configured in smart-idle mode. After sending an image to the panel through the RFBI interface, the DISPC end-of-frame interrupt and RFBI end of transfer occur. After software sets the DSS in off state but no off state is not reached, DSS CM stays in idle transition, CM_DSS_DSS_CLKCTRL[17:16]  IDLEST = 0x1 because RFBI is not acknowledging idle request.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  71  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Refresh Rate Issue After Warm Reset  www.ti.com  	  SmartReflex must be disabled before a software-controlled warm reset.  For other warm resets, the issue cannot be avoided, but during reboot the following sequence can be performed to recover:  •  Initiate a Force Update and check TRANXDONE interrupt success (optional). If it is not successful then:  •  Initiate a software global cold reset.  	 1.52 Deadlock Between SmartReflex™ and Voltage Processor  	  A protocol violation between SmartReflex and voltage processor can happen when a global warm reset occurs during a transaction. Consequences are:  •  VP_xx_TRANXDONE_ST interrupt from the PRCM is no longer generated when a force update  voltage from VP is performed.  •  SmartReflex does not request voltage change anymore.  SmartReflex and voltage processor have a handshake protocol. SmartReflex indicates to voltage processor when voltage update is valid. Voltage processor acknowledges this request. Protocol violation appears when warm reset is asserted before acknowledge. This is because SmartReflex is warm reset-sensitive while voltage processor is cold reset-sensitive.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  72  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  System May Hang During EMIF Frequency Change  	  The workaround is to force self-refresh when coming back from the warm reset with the following sequence:  •  Set EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE to 0x2  •  Set EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM to 0x0  •  Do a dummy read (loads automatically new value of sr_tim)  This will reduce the risk of memory content corruption, but memory content can't be guaranteed after a warm reset.  When OMAP is back to active mode with correct OPP configuration, EMIF registers need to be reprogram according to the OPP and respect workaround for i735 bug.  	 1.53 Refresh Rate Issue After Warm Reset  	  The refresh rate is programmed in the EMIF_SDRAM_REF_CTRL[15:0] REG_REFRESH_RATE  parameter taking into account frequency of the device.  When a warm reset is applied on the system, the OMAP processor restarts with another frequency and so the frequency is not the same. Due to this frequency change, the refresh rate will be too low and could result in an unexpected behavior on the memory side.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  73  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  DDR Access Hang After Warm Reset  www.ti.com  	  To avoid the occurrence of the three events, the workaround is to disable the self-refresh when requesting a frequency change.  Before requesting a frequency change the software must program EMIF_PWR_MGMT_CTRL[10:8]  REG_LP_MODE to 0x0.  When the frequency change has been done, the software can reprogram EMIF_PWR_MGMT_CTRL[10:8]  REG_LP_MODE to 0x2.  	 1.54 System May Hang During EMIF Frequency Change  	  When the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field is set to 0x2, self-refresh mode is  activated. In that case, EMIF puts the SDRAM into self-refresh mode if no access is performed during EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM number of DDR clock cycles.  If during a small window the following three events occur:  •  The EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM counter expires  •  And frequency update is requested (CM_SHADOW_FREQ_CONFIG1[0] FREQ_UPDATE set to 1)  •  And OCP access is requested  Then it causes unstable clock on the DDR interface.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  74  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSS Configuration Registers Access Through the L4 Interconnect  	  In case of software warm reset, software can check that no frequency change is ongoing before initiating the warm reset.  In case of watchdog timer reset, there is no workaround to recover, a cold reset is needed.  	 1.55 DDR Access Hang After Warm Reset  	  When the EMIF is going in IDLE state and the following three events occur:  •  Frequency update is requested (CM_SHADOW_FREQ_CONFIG1[0] FREQ_UPDATE set to 1).  •  And a warm reset occurs.  •  And a system access is requested.  Then the EMIF will not properly reset internal FIFO. The EMIF may answer to the request when returning from reset not expected by the system; it creates protocol error or data corruption.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  75  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  LCD1 Gamma Correction Is Not Working When GFX Pipe Is Disabled  www.ti.com  	  DSS register access should be addressed through the L3 interconnect.  	 1.56 DSS Configuration Registers Access Through the L4 Interconnect  	  Due to wrong timings, all register accesses transitioning through the L4 interconnect toward DSS are not reliable.  DSS registers access done through the L4 interconnect are not supported  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  76  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  LCD1 Gamma Correction Is Not Working When GFX Pipe Is Disabled  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  77  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Power Management Timer Value For Self-Refresh (SR_TIM)  www.ti.com  	  There are two workaround treatments depends on the load mode for gamma correction LUT and frame data (see Table x-xx Workaround/Load mode settings )  Table 1-3. Workaround/Load mode settings  Load Mode  GFX Enable Condition  Workaround  ( DISPC_CONFIG1[2:1]LOADMODE)  0x0 (load LUT and data every frame)  Always Enabled  WA1  0x1 (load LUT for first frame and change loadmode to 2)  Enable required for first frame only  WA2  0x2 (load frame data only)  Enable required for first frame only.  WA2  0x3 (load LUT and data for first frame and change  Enable required for first frame only.  WA2  loadmode to 2)  WA1  To use gamma correction on LCD1 output, software must:  1. Enable the GFX pipeline by setting DISPC_GFX_ATTRIBUTES[0] ENABLE to 0x1.  2. Set the GFX base address (DISPC_GFX_BA_i[31:0] BA) to an accessible frame buffer.  3. Set the GFX window to minimum size by configuring the DISPC_GFX_SIZE[27:16] SIZEY and  DISPC_GFX_SIZE[11:0] SIZEX bits.  4. If the GFX pipeline is not to be displayed, set GFX LYR to bottom LYR in LCD1 overlay by setting appropriate DISPC_GFX_ATTRIBUTES[27:26] ZORDER bit field and make GFX fully transparent by  setting the global alpha of the GFX to 0x00 in the DISPC_GLOBAL_ALPHA[7:0] GFXGLOBALALPHA  bit field.  WA2  To use gamma correction on LCD1 output, software must:  1. Enable the GFX pipeline by setting DISPC_GFX_ATTRIBUTES[0] ENABLE to 0x1.  2. Set the GFX base address (DISPC_GFX_BA_i[31:0] BA) to an accessible frame buffer.  3. Set the GFX window to minimum size by configuring the DISPC_GFX_SIZE[27:16] SIZEY and  DISPC_GFX_SIZE[11:0] SIZEX bits.  4. If the GFX pipeline is not to be displayed, set GFX LYR to bottom LYR in LCD1 overlay by setting appropriate DISPC_GFX_ATTRIBUTES[27:26] ZORDER bit field and make GFX fully transparent by  setting the global alpha of the GFX to 0x00 in the DISPC_GLOBAL_ALPHA[7:0] GFXGLOBALALPHA  bit field.  5. When DISPC_IRQSTATUS[8]PALETTEGAMMALOADING_IRQ =0x1 then disable GFX pipeline  	 1.57 LCD1 Gamma Correction Is Not Working When GFX Pipe Is Disabled  	  LCD1 output supports gamma correction. The color look-up table (CLUT) is shared between the BITMAP  to RGB conversion module on GFX pipeline and Gamma correction on the LCD1 output. LUT table can be loaded by SW through DISPC slave port (interconnect) or by DISPC master port using the DISPC DMA.  However, LCD1 gamma correction LUT loading is not working properly and require to enable GFX  pipeline for LUT loading. Depending on the load mode (DISPC_CONFIG1[2:1] LOADMODE) used, GFX  pipeline can then be disabled after 1st frame.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  78  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Leakage Increase On LPDDR2 I/Os  	  Using a value of EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM >= 6 for VDD_CORE_L OPP100 and a  value of REG_SR_TIM >= 5 for VDD_CORE_L OPP50 avoid the occurrence of the issue.  	 1.58 Power Management Timer Value For Self-Refresh (SR_TIM)  	  LPDDR2 memories could be put in self-refresh mode for power savings. The number of cycles after which EMIF can start a self-refresh entry is software programmable (thanks to the power management timer for self-refresh: EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM register bit field).  When exiting self-refresh mode, it is required that at least one refresh command is issued before entry into a subsequent self-refresh (as defined in the JEDEC LPDDR2 Specification)  When this timer value is set to a value less than 0x6 (for VDD_CORE_L OPP100) or less than 0x5 (for VDD_CORE_L OPP50), the time between a self-refresh exit to the next immediate self-refresh entry does not allow the EMIF to perform a refresh command.  As a consequence, data in LPDDR2 memory is not refreshed properly, and then data is corrupted in LPDDR2.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  79  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  MMC1 Booting May Be Bypassed Depending On VDD Ramp-up Delay  www.ti.com  	  To prevent an increase in leakage, it is recommended to disable the pull logic for these I/Os except during off mode.  So the default state of the I/Os (to program at boot) will have pull logic disable:  CONTROL_LPDDR2IO1_2[18:17]LPDDR2IO1_GR10_WD = 00  CONTROL_LPDDR2IO2_2[18:17]LPDDR2IO2_GR10_WD = 00  When entering off mode, these I/Os must be configured with pulldown enable:  CONTROL_LPDDR2IO1_2[18:17]LPDDR2IO1_GR10_WD = 10  CONTROL_LPDDR2IO2_2[18:17]LPDDR2IO2_GR10_WD = 10  When resuming from off mode, pull logic must be disabled.  	 1.59 Leakage Increase On LPDDR2 I/Os  	  Following a bug in the integration of I/Os cell for LPDDR2 clocks, a leakage increase can be observed on vddca_lpddr2 when OMAP is in open switch retention mode.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  80  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Disconnect Protocol Violation  	  No  	 1.60 MMC1 Booting May Be Bypassed Depending On VDD Ramp-up Delay  	  If the sys_boot[5:0] pins are configured for booting from MMC1, then the boot on MMC1 may not happen (board dependency) and the ROM code jumps to the next device of the boot sequence.  Indeed, depending on the voltage ramp, the ROM code may not wait long enough for SDMMC1_VDDS  voltage to be stabilized at 3 V before checking the voltage level supplied to OMAP.  In that case, the ROM code checks the SDMMC1_VDDS voltage too early, reads a bad level, and then jumps to 1.8-V configuration while the PMIC was configured to 3 V.  The MMC1_PBIAS cell is in a bad state and prevents the sending of commands to the MMC1 bus.  The ROM code switches to the next boot sequence.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  81  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  ULPI RxCmds Convey the Wrong ID Bit After Save-and-Restore Sequence  www.ti.com  	  L3_CLK1 must be kept in NO-IDLE when the DSS clock domain is ON. It can be switched back to  HW_AUTO when the DSS clock domain is IDLE.  L3_CLK2 must be kept in NO-IDLE when the ISS clock domain is ON. It can be switched back to  HW_AUTO when the ISS clock domain is IDLE.  	 1.61 Disconnect Protocol Violation  	  A bug has been identified in the interconnect agent handling the connect-disconnect protocol between an initiator and interconnect. When the disconnect protocol violation occurs, there is a dead lock and a system lockup is observed.  The issue can occur in a corner case when the impacted module has started a transition to standby, for the L3 initiator on which it is attached, exactly at the time the initiator gets an event for exiting idle state.  Such a situation can occur when the impacted initiator is generating short MStandby pulses (pulse durations less than one L4 clock cycle).  DSS and ISS are the only initiators that are impacted.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  82  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  PRCM Hang at Frequency Update During DVFS  	  Ensure that the OTG_CTRL_i [0] IDPULLUP bit is set to 1 before the SAR-save. By doing so, this bit is restored to 1 after every off mode. Then the ID bit is sampled and the Rxcmd is correct.  	 1.62 ULPI RxCmds Convey the Wrong ID Bit After Save-and-Restore Sequence  	  ULPI RxCmds, from OMAP to USB device, convey the wrong ID bit after the save-and-restore sequence.  When OMAP is in a low-power mode scenario (chip-OFF), in high-speed transceiverless link (TLL) connection, after the SAR phase, every RxCmd from the TLL to the peripheral conveys wrong ID field (for example, 0x0D instead of 0x4D), that is, the ID bit is 0 instead of 1. This is due to the TLL losing the value of ID during the SAR process. As long as the peripheral does not resample the ID (by toggling OTG_CTRL_i[0] IDPULLUP) after the restore, the ID bit keeps the wrong value 0 instead of 1. This results in sending the wrong RxCmd to the peripheral.  Depending on the peripheral device design, it may consider or disregard the ID bit. The behavior and consequences depend on the device design.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  83  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Card Error Interrupt May Not Be Set Sometimes  www.ti.com  	  The recommended sequence is:  •  Update CM_SHADOW_FREQ_CONFIG2[7:3]DPLL_CORE_M5_DIV.  •  Set CM_SHADOW_FREQ_CONFIG2[0]GPMC_FREQ_UPDATE to 0x1.  •  Wait until CM_SHADOW_FREQ_CONFIG2[0]GPMC_FREQ_UPDATE becomes 0x0.  •  Update CM_SHADOW_FREQ_CONFIG1[15:11]DPLL_CORE_M2_DIV.  •  Set CM_SHADOW_FREQ_CONFIG1[0]FREQ_UPDATE to 0x1.  •  Wait until CM_SHADOW_FREQ_CONFIG1[0]FREQ_UPDATE becomes 0x0.  	 1.63 PRCM Hang at Frequency Update During DVFS  	  During DVFS transitions, the PRCM controller can hang if CORE DPLL dividers M2 and M5 are updated at once.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  84  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  In AutoCMD12 mode, the CMD12 Command Is Not Issued On Write Transfer Completion  	  After responses of type R1/R1b for all cards and responses of type R5/R5b/R6 for SD and SDIO cards, software must read two registers: MMCHS_RSP10 and MMCHS_CSRE. When a MMCHS_CSRE[i] bit is  set to 1, if the corresponding bit at the same position in the response MMCHS_RSP0[i] is set to 1, the host controller indicates a card error and software should proceed in the same way as if a CERR interrupt would have been detected in the MMCHS_STAT register.  	 1.64 Card Error Interrupt May Not Be Set Sometimes  	  Due to a bad behavior of an internal signal, the Card Error interrupt bit MMCHS_STAT[28] CERR may not be set sometimes when an error occurred in the card response.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  85  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  SRAM LDO Output Voltage Value Software Override in RETENTION is Not Functional  www.ti.com  	  Instead of setting the MMCHS_CMD[2] ACEN bit to 0x1 to enable AutoCMD12 mode, software sends the CMD12 command at the end of write transfers (after the MMCHS_STAT [1] TC bit goes High).  	 1.65 In AutoCMD12 mode, the CMD12 Command Is Not Issued On Write Transfer  Completion  	  When using AutoCMD12 mode in write transfer with ADMA and MMCHS_CMD[1] BCE is disabled, then  the CMD12 command is not issued automatically after write transfer completion.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  86  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  I/O Glitch Issue When Entering Off Mode  	  None  	 1.66 SRAM LDO Output Voltage Value Software Override in RETENTION is Not Functional  	  Software override of EFUSE SRAM LDO output voltage value in retention mode is not functional and will have no effect. Retention voltage will be the one set by the EFUSE even if:  CONTROL_LDOSRAM_xxx_VOLTAGE_CTRL[26] LDOSRAMxxx_ RETMODE_MUX _CTRL is set to 1  and CONTROL_LDOSRAM_xxx_VOLTAGE_CTRL[20:16] LDOSRAMxxx_ RETMODE_VSET_OUT  contains a valid value.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  87  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  HS USB Host HSIC Remote Wakeup Is Not Functional  www.ti.com  	  CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[25,9] OFFMODEENABLE = 1 should not be used on pad  output pins driving glitch-sensitive signals if the same value is driven during active mode and off mode and is equal to 1.  If CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[25,9] OFFMODEENABLE = 1, it is necessary to ensure  that the CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[27,11] OFFMODEOUTVALUE is equal to 0 or is  different from the value of the I/Os when going to off mode.  	 1.67 I/O Glitch Issue When Entering Off Mode  	  Following a design issue on I/O muxing compiler, a glitch can occur on I/Os when switching them from the active mode to the off-mode override value.  The glitch is present:  •  if the feature for pin state override during off mode is used  CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y [25,9] OFFMODEENABLE = 1  •  and the override value CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[27,11] OFFMODEOUTVALUE  = 1 and the IO value when going to off mode was 1.  There is no issue  •  if the override feature CONTROL_(CORE/WKUP)_PAD0_X_PAD1_Y[25,9] OFFMODEENABLE = 0 is  not used,  •  or if it is used to force a value which is different from the value before going to off mode.  •  or if it is used to force a 0 and the value before going to off mode was 0.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  88  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  I2C FIFO Draining Interrupt Not Generated  	  Do not rely on the asynchronous wake-up feature of the USB host module, but rather on the daisy-chain for detecting a remote wakeup.  Set the wakeup-enable feature of the HSIC pads and enable the daisy-chain to generate a wakeup and an interrupt to the PRCM.  Upon wakeup and interrupt from the daisy chain, if the wakeupevent bit is set for the HSIC pads, then restart the USB Host module and the UTMI_Px clock and resume the device.  	 1.68 HS USB Host HSIC Remote Wakeup Is Not Functional  	  This problem impacts the HS USB Host HSIC interface. TLL and ULPI interfaces are not impacted.  For this issue to occur, the following conditions must exist:  •  A USB device is attached to an OMAP HSIC interface.  •  The USB bus is suspended.  •  The PRCM asserts idle_req, and the USB host answers idle_ack.  •  The PRCM hardware automatically stops the interface clocks (ICLK).  •  Software disables the module by setting the  CM_L3INIT_HSUSBHOST_CLKCTRL[1:0]:MODULEMODE bit fields to 0x0.  •  The PRCM automatically stops the mandatory functional clocks (FLCK).  •  Software stops the optional FCLK.  •  The module is then idle. The clock domain can possibly enter idle, then the power domain also can enter a low-power mode, and even the full OMAP.  •  The device generates a remote wakeup.  The USB Host detects the remote wakeup condition asynchronously and generates a  USBHOST_SWAKEUP to the PRCM.  The PRCM deasserts idle_req, and restarts ICLK and mandatory FCLK, but not the optional FCLK.  However, in the case of HSIC, the optional FCLK  (CM_L3INIT_HSUSBHOST_CLKCTRL[10/9/8].OPTFCLKEN_UTMI_P3/2/1_CLK) is needed to generate  the interrupt indicating to the system that the USB HOST is the wake-up source.  Consequently, OMAP is woken up but does not acknowledge who is the wake-up source.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Bugs  89  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Read Accesses to GP Timer TCRR Can Report Random Value When In Posted Mode  www.ti.com  	  Before reconfiguring the RXTRSH (Threshold value for FIFO buffer in RX mode):  •  Disable I2C controller by setting the I2C_CON[15] I2C_EN bit to 0x0 (this puts the controller in reset, clears the FIFOs, and sets the status bits to their default value)  •  Once the I2C module reconfiguration is done, reactivate the I2C controller by setting the I2C_CON[15]  I2C_EN bit to 0x1 (module enabled).  	 1.69 I2C FIFO Draining Interrupt Not Generated  	  When I2C module is used in HS master receive mode, and when smart-idle wakeup mode is set:  •  If reconfiguration of I2C_BUF[13:8] RXTRSH value is done while I2C_CON[15] I2C_EN = 0x1, and  with no clearing of the RX buffer pointer.  •  I2C module does not wakeup from idle mode due to wrong pointers of RX Buffer (as RXTRSH was  reconfigured with no actual cleaning of RX FIFO pointers from a previous transfer).  As a consequence, I2C FIFO draining interrupt is not generated in Idle/WakeUp scenario.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  90  Bugs  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version      Chapter 2   SWPZ017L – September 2011 – Revised September 2013  Limitations  SWPZ017L – September 2011 – Revised September 2013  Limitations  91  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Issue with Transfer Of Multiple Command Packets Coming From Interconnect  www.ti.com  	  If ICLK < 4*FCLK ratio is not respected, then software should make sure that the posted mode is inactive (the GPT_TSICR[2] POSTED bit is set to 0x0) before any read access to the GPT_TCRR register.  	 1.70 Read Accesses to GP Timer TCRR Can Report Random Value When In Posted Mode  	  General-purpose (GP) timers in posted mode (GPT_TSICR[2] POSTED bit set to 0x1) with GPTi_ICLK  (timer interface clock) and GPTi_FCLK (timer functional clock) clock frequency not respecting the ICLK < 4*FCLK ratio, can periodically report a random time from read accesses to counter register GPT_TCRR.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  92  Limitations  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Nonburst Video Mode Using Sync Pulses: NO HE Packets Sent VSA, VFP, And VBP Blanking.  	  No workaround is available. The impact is minor because:  •  When interleaving is done on a vertical blanking period (VSA, VFP, VBP), as these blanking are expressed in a number of lines, the remaining packet(s) in TX FIFO are sent on HS link during the next line blanking interval within the same blanking period or during the next one.  •  When interleaving is done on a horizontal blanking period (HSA, HFP, HBP), the remaining data in TX  FIFO is sent on the next blanking period.  	 2.1  Issue with Transfer Of Multiple Command Packets Coming From Interconnect  	  In video mode, the command mode packets, provided through the DSI protocol engine OCP port, can be interleaving during the blanking periods vertical and/or horizontal blanking periods of the video stream sequence.  When TX FIFO on the OCP slave port is empty and if the first packet written to TX FIFO is less than 13  words when 1 data lane is active or 17 words when 2 data lanes are active or 25 words when 3 or 4 data lanes are active, only this packet will be sent on the HS link during the next blanking period enabled for command packet transfer.  This is the only sent packet, because this packet is the only completely written packet when the FSM has read the last location of this packet from TX FIFO. Even if more packets are written in TX FIFO before the interleaving starts, these packets will not be sent during that blanking period.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  94  Limitations  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  BITMAP1-2-4 Formats Not Supported By The Graphics Pipeline  	  NA  	 2.2  Nonburst Video Mode Using Sync Pulses: NO HE Packets Sent VSA, VFP, And VBP  Blanking.  	  The DSI protocol engine is based on the MIPI DSI ver. 1.01 specification.  However the video mode using sync pulses is implemented using the timing described in MIPI DSI ver.  1.00 and not ver. 1.01:  •  The DSI protocol engine sends only HE packets (when enabled) during VACT and not during VSA,  VFP, and VBP.  •  The DSI protocol engine sends VE (noted as VSE in MIPI DSI ver. 1.01 specification) during VSA and not during VBP.  Figure 2.1 represents actual implementation and Figure 2.2 represents MIPI DSI ver. 1.01 specification.  Figure 2-1. MIPI DSI 1.00 (Implemented) - Video Mode Interface Timing: Nonburst Transmission With Sync Start And End.  t * (VSA + VBP + VACT + VFP)  L  t  t  t  t  L  t  t  L  L  L  tL  tL  L  L  B  L  V  BL  H  BL  V  BL  H  BL  H  BL  H  BL  H  BL  H L  V  Active video area  P  S  LP  S  LP  E  LP  S  LP  S  LP  S  LP  S  LP  S L  S  M  P  VSA lines  VBP lines  VFP lines  tHBP  t  t  t  t  L  HSA  HACT  HFP  H  H  H  H  H  H  H  H  S  B  RGB  HFP  S  B  RGB  HFP  S  E  S  E  A  P  A  P  VACT lines  SWPZ017L – September 2011 – Revised September 2013  Limitations  93  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Nonburst Video Mode Using Sync Pulses: NO HE Packets Sent VSA, VFP, And VBP Blanking.  www.ti.com  Figure 2-2. MIPI DSI 1.01 ( Not Supported) - Video Mode Interface Timing: Nonburst Transmission With Sync Start And End.  t * (VSA + VBP + VACT + VFP)  L  t  t  t  t  t  t  t  t  L  L  L  L  L  L  L  L  V H H  H H H  H H H  V  H H  H H H  H H H  H H H  H H H  B  L  V  BL  BL  BL  BL  BL  BL  BL  L  S S S  S  S  S  S S S  S  S  S  S S S  Active video area  S S S  S  S S  S  S S  P  S  LP  LP  LP  LP  LP  L  LP  LP  S A E  S  A  E  S A E  E  A  E  S A E  S A E  S  A E  S  A E  P  M S  VSA lines  VBP lines  VFP lines  tHBP  t  t  t  t  L  HSA  HACT  HFP  H  H H  H  H  H  H  S  HSA  S B  RGB  HFP  S  B  RGB  HFP  S  E  S  E P  A  P  VACT lines  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Limitations  95  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Limitation On DISPC Dividers Settings When Using BITMAP Format  www.ti.com  	  No workaround is available.  	 2.3  BITMAP1-2-4 Formats Not Supported By The Graphics Pipeline  	  BITMAP1, BITMAP2, and BITMAP4 are not supported by the graphics pipeline.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  96  Limitations  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HDQ™/1-Wire® Communication Constraints  	  No workaround is available.  	 2.4  Limitation On DISPC Dividers Settings When Using BITMAP Format  	  When Graphics pipeline input pixel is in BITMAP format, it cannot output pixel at the rate of one pixel per each clock cycle when LCD = 1 and PCD = 1.  The limitation is not applicable if PCD is greater than or equal to 2.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Limitations  97  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Presence of a Floor Noise on Audio Band When Multiple McPDM Downlink Enabled  www.ti.com  	  There is a constraint in the design for the maximum allowed rise time of the wire. After writing data to the wire, the HDQ/1-Wire module samples the logic value of the wire 1 FSM (finite state machine) clock cycle later. The FSM expects to read back 1 value from the wire. This constraint must be taken into account, when calculating the pullup resistor(R) according to the capacitive load(C) of the wire.  The maximum RC (pullup resistor and capacitive load) value should be calculated as follow:  R <1200ns/(10e-12 + C)  	 2.5  HDQ™/1-Wire® Communication Constraints  	  HDQ/1-Wire protocols use a return-to-1 mechanism and it requires an external pullup resistor on the line.  There is a timing limitation on this return-to-1 mechanism that requires a constraint on the external pullup resistor(R) and the capacitive load(C) of the wire.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  98  Limitations  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Overlay Optimization Limitations  	  Case 1 workaround:  •  Set McPDM downlink FIFO threshold to 2 (floor noise goes back to ~ -130dB_fullscale)  Case 2 workaround:  •  Set McPDM downlink FIFO threshold to 4 (floor noise goes back to ~ -130dB_fullscale)  	 2.6  Presence of a Floor Noise on Audio Band When Multiple McPDM Downlink Enabled  	  Depending on McPDM FIFO value, a floor Noise in audio band at ~-80dB_fullscale may appear with one of these two following configurations:  •  Case 1: AESS is used for the McPDM transfers, 6 downlink channels of McPDM are enabled and  McPDM downlink FIFO threshold is set to 1.  •  Case 2: AESS is not used for the McPDM transfers, 4 downlink channels of McPDM are enabled and McPDM downlink FIFO threshold is set to 1 or 2.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Limitations  99  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  VID /GFX Pipeline Underflow Interrupt Generated When In WB Memory-to-memory Operation  www.ti.com  	  For optimization to occur for a particular layer, make RESIZEENABLE as 0x0. With multiple layers enabled, make RESIZEENABLE for all the layers as 0x0 for every layer to participate in overlay optimization of itself or for the layers below it.  	 2.7  Overlay Optimization Limitations  	  Overlay optimization does not work when resize processing is enabled on any 'Enabled' layer.  When any of the 'Enabled' layers has bit field DISPC_p_ATTRIBUTES.RESIZEENABLE as nonzero it will neither be optimized nor participate in optimization of layers below.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  100  Limitations  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI: Run-time Change Of HSR Counter Values Damages Communication  	  Software should disable the VID/GFX pipeline underflow interrupt by writing 0x0 in  DISPC_IRQENABLE[20-12-10-6] bit if it is connected to the WB pipeline in memory-to-memory mode.  Software should not consider the underflow interrupt generated in DISPC_IRQSTATUS[20-12-10-6] bit when in memory-to-memory mode  	 2.8  VID /GFX Pipeline Underflow Interrupt Generated When In WB Memory-to-memory  Operation  	  In memory-to-memory operation, it is possible for WB pipe to write out pixel data faster than the rate at which VID/GFX DMA is fetching the pixel data. Under such a condition, the WB pipe should slow down by itself (by inserting necessary stalls) and should not cause an underflow at the VID DMA. The required behavior is: when VID/GFX pipelines are connected to WB in memory-to-memory mode (connected either directly or through overlay), there should not be any buffer underflow and no underflow interrupt should be generated.  However the DISPC module deviates from this behavior and generates sporadic underflow interrupt. But buffer underflow never happens; there is no corruption of the data written back to the memory. Only undesired interrupts are generated due to this defect.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Limitations  101  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  HSI Does Not Send Break Frame In Some Scenario  www.ti.com  	  No workaround is identified.  	 2.9  HSI: Run-time Change Of HSR Counter Values Damages Communication  	  The MIPI HSI specification explicitly requires run-time configurability to be supported for these HSR Frame Burst, HSR Frame Time-out, and HSR Tailing Bit counters.  Update of HSR counters with new values while data traffic is ongoing results in spurious errors and/or data loss/corruption:  •  HSR Frame Burst Counter update: Spurious FT/TB errors and/or data loss/corruption  •  HSR Frame Timeout Counter update : Spurious FT/TB errors and/or data loss/corruption (observed only in pipelined flow)  •  HSR Tailing Bit Counter: Spurious FT/TB errors and/or data loss/corruption (observed only in pipelined flow)  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  102  Limitations  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  EMIF: Refresh rate programmation issue  	  No workaround is identified.  	 2.10 HSI Does Not Send Break Frame In Some Scenario  	"  From the MIPI HSI spec; the transmitter shall be able to transmit a break transmission regardless of the state of the READY signal.  •  Break frame will not be sent if the READY line is low and Tx FIFO is not empty. Inserting a break frame, in this configuration, will also override a frame in Tx FIFO. Refer to ""Break frame corrupt ongoing transfer"" errata.  •  Break frame will be sent if TX FIFO is empty and READY line is low.  "	 	Cortex A-9	Limitations
  High  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Not impacted  SWPZ017L – September 2011 – Revised September 2013  Limitations  103  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  EMIF: 8-Gbit (Single Die) Support  www.ti.com  	  For 2 Gbit and 4 Gbit, between 85C and 95C the recommendation is to use this 3x refresh rate. Most of memory vendors have confirmed that this is acceptable.  Customer must ensure the LPDDR2 junction temperature will never exceed 95C. This can be achieved by:  •  Full device level thermal simulations on the worst case thermal use case. TI can provide flotherm model to enable these types of simulations.  •  And/or instrumentation of the phone placing a thermocouple on the LPDDR2 top case and measuring the temperature thru a comprehensive set of use cases  	 2.11 EMIF: Refresh rate programmation issue  	  The refresh rate is programmed in the EMIF_SDRAM_REF_CTRL.REG_REFRESH_RATE parameter. To  ensure some bandwidth is still available to the system, a low threshold has been implemented in hardware; if the programmed value is lower than the threshold, the threshold value is programmed instead of the requested value.  Assuming 1x is the refresh rate of the LPDDR at 85C, JEDEC requirement is to have 4x refresh rate between 85C and 105C.  For die up to 1 Gb, Trefi is 15.6us or 7.8us, even with the threshold limitation OMAP will support a 4x refresh rate.  For 2Gb and 4Gb die, Trefi = 3.9us, the threshold allows only a 3x refresh rate. For 8 Gbit the threshold will limit to a 2x refresh rate.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Not impacted  Impacted  104  Limitations  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ECD3 Fails To Decode Bitstreams Having Mismatch Between CBP and CBF  	  There is no workaround.  	 2.12 EMIF: 8-Gbit (Single Die) Support  	  The refresh requirements for an LPDDR2 8-Gbit (single die) memory at high temperature (>85°C) conflicts with the current EMIF refresh policy and may result in a lock-up situation. This issue does not exist with 2-Gbit and 4-Gbit memories due to their lower t RFC(130 ns versus 210 ns).  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Limitations  105  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  TV Overlay Blending Limitation  www.ti.com  	  No Workaround  	 2.13 ECD3 Fails To Decode Bitstreams Having Mismatch Between CBP and CBF  	  ECD3 fails to decode the bitstreams having the mismatch between CBP and CBF generated by non-TI encoder. The mismatch violates the H.264 CBP rule. But the mismatch can be correct in-practice / real-life  /De-facto.  It wrongly decodes the bitstream as error stream (instead of normal stream), but it never results in hang or crash. The decoded output have visual noticeable artifacts as many good slices are concealed.  The issue occurs for H.264 MP/HP decoder decoding bitstream generated by non-TI encoder violating H.264 CBP rule. It does not occur for H.264 BP/MP/HP encoder as well as H.264 BP decoder.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  106  Limitations  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ISP Pattern Generator Is Not Functional  	  None  	 2.14 TV Overlay Blending Limitation  	  The overlay determine the blending effect by the following:  If (Ae > 0x3fc)  Result = Upper layer  Elsif (Ae == 0x0)  Result = Lower Layer  Else  Ae = Ap×(Upper layer) + (1-Ap)×(Lower layer)  where Ae represents the effective Alpha, input of overlay.  Ae is determined by two inputs parameters: Ap (pixel alpha) and Ag (global alpha). The Ap available at the input of overlay can come through two paths:  1. The scaler (in which case the highest and second highest values are 0x3ff and 0x3fb, respectively).  2. The parallel bypass path (in which case we can get pixel alpha values between 0x3fc and 0x3fe).  The effective alpha value can only be in the range of 0x3fc – 0x3fe if the global alpha value is programmed as 0xff. As an inference from the above if Ae value (resulting as a multiplication of global alpha [Ag] and pixel alpha[Ap]) inside the TV overlay is between 0x3fc and 0x3fe, the blending logic treats this layer as opaque and blending does not occur.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Limitations  107  Copyright © 2011–2013, Texas Instruments Incorporated    Public Version  Voltage Drop Observed On CSI PHY Pad In GPI mode  www.ti.com  	  None  	 2.15 ISP Pattern Generator Is Not Functional  	  The ISP pattern generator, which implements an internal data generation mechanism to test the external pins and can generate RAW data without the need for an external image sensor, is not functional.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4460	 	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Limitations  109  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version      Chapter 3   SWPZ017L – September 2011 – Revised September 2013  Cautions  The purpose of this section is to alert OMAP users about sensitive silicon concern. Items described in the following section are compliant with specification (neither bug nor limitation), but it is mandatory to carefully respect guidelines to ensure correct OMAP behavior.  110  Cautions  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  LPDDR2 High Temperature Operating Limit Exceeded  	  1. Use different pad for GPI.  2. Use the pull-up resistor value smaller than or equal to 9k Ohm. It avoids the voltage drop and keeps the signal level above VIH. However this will be at the expense of increased current (up to 70uA in the worst case), as long as DXn and DYn are opposite in polarity.  108  Limitations  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Voltage Drop Observed On CSI PHY Pad In GPI mode  	 2.16 Voltage Drop Observed On CSI PHY Pad In GPI mode  	  Voltage drop can be observed when following conditions are met:  •  csix_dx/y_ pad pair(DXn, DYn on the figure below) is used in GPI mode  (CONTROL_CAMERA_RX[20:19]/[17:16] CAMERARX_CSIx_CAMMODE=0x3)  •  One of the pair is connected to GND and another is pulled-up to High  The signal level of the pad which is pulled-up is dropped due to the leakage of the component used in the off switch for the on-die termination between DXn and DYn. The leakage current (and the voltage drop) varies depending on PVT condition.  Under the worst case condition, the leakage can be high enough to drop the signal level under VIH of the GPI buffer and causes functional failure.  Figure 2-3. CSI PHY pad in GPI mode  	 	Cortex A-9	Limitations
  The mode register MR4 gives a status of the LPDDR2 device temperature. If the value of MR4 [2:0] =  0x111 the LPDDR2 might not operate properly.  GUIDELINES  The EMIF supports automatic temperature monitoring. The temperature monitoring can be enabled per chip-select by setting the EMIF_TEMP_ALERT_CONFIG[31] REG_TA_CS1EN and  EMIF_TEMP_ALERT_CONFIG[30] REG_TA_CS0EN bits.  The EMIF periodically polls the temperature of LPDDR2 (issues an MRR command to mode register 4) every time EMIF_TEMP_ALERT_CONFIG[21:0] REG_TA_REFINTERVAL expires.  If during this read operation the value 0x111 is returned by the memory this means that temperature operating limit is exceeded. In that case, the recommendation is to do a power-off sequence to cool of the memory.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.1  LPDDR2 High Temperature Operating Limit Exceeded  	DESCRIPTION	  High  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Cautions  111  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  SDMMC1 interface latch-up issue  www.ti.com  
  GUIDELINES  To prevent latch-up on this interface customer must ensure injected current is lower than above values during SD card plug/unplug and during functional IO switching. No work around is needed if mmc1  interface supply voltage is 1.8V.  If Card Detection feature is needed to avoid card hot plug/unplug (SD card is accessible without battery removal): VDDS_SDMMC1 supply must be turned OFF before any card insertion/extraction. SDMMC1 IOs must be correctly powered down before supply ramp up/down.  Note: in case TWL6030 companion chip is used for card detection, TWL6030 automatic shutdown of VMMC LDO feature must not be used as it can't be sequenced properly with OMAP SDMMC IOs power down. Only SW sequence must be used to power down IOs then supply when card extraction is detected.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.2  SDMMC1 interface latch-up issue  	DESCRIPTION	  High  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  112  Cautions  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Undesired McBSP slave mode behavior during reset without CLKR/CLKX  
  As described in the Technical Reference Manual, the McBSP port requires two clock cycles of  CLKR/CLKX during reset to synchronize the interface configuration. When the McBSP is configured in slave mode, the necessary clock is provided by the other device (the interface master). If the master device does not provide the necessary clock before the first frame pulse then undesired behavior of the McBSP port will occur since it will only be properly initialized during the first two clock cycles of CLKR/CLKX. Impacts of this situation include:  •  McBSP port does not receive the first frame of data from the master  •  Undefined output (i.e. glitch) on McBSP transmit line during the first frame pulse  GUIDELINES  If possible, the master should provide CLKR/CLKX before the first frame pulse (during McBSP  initialization) to avoid this issue. No other workaround is available.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.3  Undesired McBSP slave mode behavior during reset without CLKR/CLKX  	DESCRIPTION	  Low  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Cautions  113  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Use Smartreflex class 1.5 for Ice Cream Sandwich  www.ti.com  
"  During Ice Cream Sandwich development, the SmartReflex Voltage Control techniques have been  reviewed.  Conclusion is that using Class 1.5 is better for power comsumption on ICS. This is also better for software stability as it is simpler to develop.  GUIDELINES  Recommendation is to use class 1.5 for Ice Cream Sandwich.  This Voltage Control Technique is explained in the TRM Chapter ""AVS Overview"". For class 1.5, as the reference value for a given OPP of the device is configured by efuse for a class 3 technique, software needs to add extra margin for the voltage requested to the power IC after calibration. The DM operating condition addendum document gives details on this extra margin per OPP and voltage domain.  "	TI	OMAP4460	Cautions	 	WORKAROUND	 3.4  Use Smartreflex class 1.5 for Ice Cream Sandwich  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  114  Cautions  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Change In OMAP4xx Off Mode Sequence For a TPS62361B-Based Platform  
  In a TPS62361B-based OMAP44xx platform used to power the VDD_MPU supply of OMAP44xx, the EN  pin of TPS62361B is driven by the SYSEN pin of the TWL6030 PMIC.  The minimum voltage at the output of TPS62361B while EN = 1 is 0.5 V.  As part of existing OMAP44xx off mode sequence the OMAP44xx voltages ramp down in the following order:  •  VDD_IVA ramps down to 0 V  •  VDD_MPU ramps down to 0.5 V  •  VDD_CORE ramps down to 0 V  This creates a window where the VDD_CORE voltage rail is 0 V and the VDD_MPU voltage is 0.5 V. This condition affects the reliability of the device, thereby reducing the lifetime of the device.  GUIDELINES  The following changes must be made in the OMAP4xx off mode sequence:  1. The OFF command value must be changed to match the RETENTION command value for the CORE  power domain (PRM_VC_VAL_CMD_VDD_CORE_L).  (a) As a consequence, OMAP sends the retention voltage I2C command to the PMIC for VDD_CORE  voltage domain during off mode entry.  (b) This ensures that VDD_CORE = 0.75 V and VDD_MPU = 0.5 V during entry into off mode.  2. VCORE1 LDO of PMIC, which supplies VDD_CORE supply of OMAP, must be associated to PREQ1  (driven by sys_pwr_req from the OMAP side) by writing 0x1 in PMIC register VCORE1_CFG_GRP.  3. The SYSEN pin of the PMIC, which controls the EN pin of TPS62361B, must be associated to PREQ1  by writing 0x1 in PMIC register SYSEN_CFG_GRP.  4. Registers VCORE1_CFG_TRANS and SYSEN_CGF_TRANS must be programmed to 0x1  5. The discharge pulldown of the VCORE1 LDO in TWL6030 must be disabled in  CFG_SMPS_PD:VCORE1, so that the ramp down curves of VDD_MPU and VDD_CORE are  matching. (When this pulldown, is enabled, it only becomes active when PREQ1 goes down. So there is no need to re-enable it after the off mode sequence.)  6. When sys_pwr_req transitions from 1 to 0, both VDD_CORE and VDD_MPU voltages ramp down to 0  V due to the association done with PREQ1 as mentioned above.  7. When OMAP wakes up from off mode, VDD_MPU and VDD_CORE ramp up automatically to 0.5 V  and 0.75 V, respectively.  8. Later VDD_CORE, VDD_MPU, and VDD_IVA ramp up to their respective ON voltage defined in  PRM_VC_VAL_CMD_VDD_MPU_L, PRM_VC_VAL_CMD_VDD_IVA_L and  PRM_VC_VAL_CMD_VDD_CORE_L registers when I2C commands are sent by OMAP to PMIC.  This helps to avoid the window where VDD_CORE = 0 V and VDD_MPU = 0.5 V during entry into and exit from OMAP off mode.  The original OMAP44xx OFF-wakeup sequence without the Guidelines is shown below.  SWPZ017L – September 2011 – Revised September 2013  Cautions  115  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Change In OMAP4xx Off Mode Sequence For a TPS62361B-Based Platform  www.ti.com  Figure 3-1. Original OMAP4xx OFF-Wakeup Sequence  vdd_mpu  0.5 V  0.5 V  0 V  vdd_core  Window where  vdd_core = 0 V and  vdd_mpu = 0.5 V  0 V  2  2  2  IVA I C cmd  MPU I C cmd  MPU I C cmd  2  2  IVA I C cmd  2  CORE I C cmd  CORE I C cmd  SR_I2C  sys_pwr_req  0 V  sysen  0 V  omapse-orig  116  Cautions  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Change In OMAP4xx Off Mode Sequence For a TPS62361B-Based Platform  Figure 3-2. Modified OMAP4xx OFF-Wakeup Sequence  vdd_mpu  0.5 V  0.5 V  0 V  vdd_core  0.75 V  0.75 V  0 V  2  2  2  IVA I C cmd  MPU I C cmd  MPU I C cmd  2  2  IVA I C cmd  2  CORE I C cmd  CORE I C cmd  SR_I2C  sys_pwr_req  0 V  sysen  0 V  omapse-mod  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.5  Change In OMAP4xx Off Mode Sequence For a TPS62361B-Based Platform  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Cautions  117  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  High-Speed Image Capture Use Case  www.ti.com  
  The data flow for High-Speed Image capture use case is as follows: CSI2 RAW10 packed -> SDRAM -> ISP RSZ -> SL2 -> SIMCOP -> SDRAM. In this use case it is mandatory not to use DPLL lock/unlocked sequence for DPLL_ IVA during CD_IVAHD clock domain sleep stage.  The clock gating management in automatic mode (CM_AUTOIDLE_DPLL_IVA[2:0] AUTO_DPLL_MODE  is different than 0x0 and HW auto mode is enabled CM_IVAHD_CLKSTCTRL[1:0] CLKTRCTRL = 0x3)  results in DPLL_IVA relocking stage when SL2 write memory accesses are needed by ISP RSZ. The lock delay, bypass clock is not supplied when DPLL is managed in automatic mode, is resulting in  backpressure for CSI2 side which leads to CSI2 overflow.  GUIDELINES  During the above use case, it is mandatory to use the DPLL_IVA in manual bypass in HW auto mode (CM_IVAHD_CLKSTCTRL[1:0] CLKTRCTRL set to 0x3); that is, CM_AUTOIDLE_DPLL_IVA[2:0]  AUTO_DPLL_MODE is set to 0x0. It is possible to select CORE_X2_CLK divisor as 1, 2, 4, or 8 for the bypass clock of DPLL_IVA as IVA-HD does not make any computation. CM_CLKSEL_DPLL_IVA[23]  DPLL_BYP_CLKSEL should be set to 1.  CORE_X2_CLK clock must be divided compliant with IVA OPP maximum clock frequency. It can be done through the CM_BYPCLK_DPLL_IVA[1:0] CLKSEL bit field.  In this way, SL2 clock can be quickly gated or ungated to meet CSI2 latency requirements.  PRCM register set configuration to allow in time the SL2 ungating clock on accesses request:  1. CM_AUTOIDLE_DPLL_IVA[2:0] AUTO_DPLL_MODE set to 0x0  2. CM_IVAHD_CLKSTCTRL[1:0] CLKTRCTRL set to 0x3  3. CM_CLKMODE_DPLL_IVA[2:0] DPLL_EN set to 0x5  4. CM_BYPCLK_DPLL_IVA[1:0] CLKSEL set to 0x1  5. CM_CLKSEL_DPLL_IVA[23] DPLL_BYP_CLKSEL set to 0x1  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.6  High-Speed Image Capture Use Case  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  118  Cautions  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  LPDDR2 Power-Down State is Not Efficient  
  The EMIF supports power-down state for low power. The EMIF automatically puts the SDRAM into power-down after the memory is not accessed for a defined number of cycles and the  EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field is set to 0x4.  As the EMIF supports automatic output impedance calibration, a ZQ calibration long command is issued every time it exits active power-down and precharge power-down modes. The EMIF waits and blocks any other command during this calibration.  The EMIF does not allow selective disabling of ZQ calibration upon exit of power-down mode. Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. On the other hand, issuing ZQ calibration long commands when exiting self-refresh is still required.  GUIDELINES  Because there is no power consumption benefit of the power-down due to the calibration and there is a performance risk, the guideline is to not allow power-down state and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.7  LPDDR2 Power-Down State is Not Efficient  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Cautions  119  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  MPU-EMIF Static Dependency Needed Around MPU WFI  www.ti.com  
  If static dependency from the MPU clock domain toward the MEMIF clock domain is disabled to save power (CM_MPU_STATICDEP[4] MEMIF_STATDEP = 0x0), the platform may lockup when exiting MPU  WFI.  GUIDELINES  Recommended software: To prevent the occurrence of this issue, static dependency from the MPU clock domain toward the MEMIF clock domain must be enabled before MPU enters WFI  (CM_MPU_STATICDEP[4] MEMIF_STATDEP set to 0x1). When exiting WFI, static dependency should  be disabled to benefit again from dynamic power savings (CM_MPU_STATICDEP[4] MEMIF_STATDEP =  0x0).  Please make sure to use the recommended sequence described in the TRM for static dependency  enabling and disabling (See Enable/Disable Software-Programmable Static Dependency section in PRCM  Chapter).  The software sequence when changing static dependency from the MPU clock domain toward the MEMIF  clock domain is:  1. Force destination domain (EMIF) to be awake by programming a forced wakeup transition:  CM_MEMIF_CLKSTCTRL[1:0] CLKTRCTRL = 0x2 :SW_WKUP.  2. Ensure that the power domain which encloses the destination domain is ON:  PM_CORE_PWRSTST[1:0] POWERSTATEST = 0x3: ON-ACTIVE.  3. Change the static dependency setting: CM_MPU_STATICDEP[4] MEMIF_STATDEP bit.  4. Put destination domain back to automatic transition mode: CM_MEMIF_CLKSTCTRL[1:0]  CLKTRCTRL = 0x3 : HW_AUTO.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.8  MPU-EMIF Static Dependency Needed Around MPU WFI  	DESCRIPTION	  High  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  120  Cautions  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  SYSEN Usage for an OMAP44xx Platform based on TWL6030/TWL6032 and TPS62361B  
  If TPS62361B is used to power the VDD_MPU supply of OMAP44xx, the EN pin of TPS62361B is driven by the SYSEN pin of the TWL6030/6032 PMIC.  The minimum voltage that can be supplied by TPS62361B while EN = 1 is 0.5 V.  The output voltage of TPS62361B is 0V only when EN = 0. Thus, when OMAP44xx enters off mode, the SYSEN pin of TWL6030/6032 toggles to 0, which ensures that VDD_MPU = 0 when OMAP44xx is in off mode. This control is required to maintain the normal OMAP44xx off mode condition where VDD_MPU =  0V.  If the SYSEN pin is used to control the reset (active low signal) or enable (active high signal) of any peripheral (for example, modem, WLAN chip and so forth) which is required to be active when OMAP44xx is in off mode, the peripheral is not active due to this implementation.  This prevents the peripheral from waking up OMAP44xx when it is in off mode.  This caution does not apply if TWL6030/6032 is used to supply the VDD_MPU rail of OMAP44xx and SYSEN is not used to control the TPS62361B EN pin.  GUIDELINES  •  If TPS62631B is used to power VDD_MPU rail in a platform, the SYSEN pin should not be used to control any peripheral reset or enable if it is one of the sources of wakeup when OMAP44xx is in off mode.  •  Instead, one should use a logical AND of an OMAP GPIO and NRESPWRON signal of TWL6030 to  drive the peripheral enable or reset pin.  The figure below shows the modem.  Figure 3-3. Original Implementation  VCC  Modem internal PU  SYSEN  AND  Reset_pwrdwn  gate  TWL6030  Modem  VCC: Modem 1.8-V supply (VRTC 1V8)  This supply is ON as long V  is present  BAT  GPIO  orig_impletn_1  SWPZ017L – September 2011 – Revised September 2013  Cautions  121  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  SYSEN Usage for an OMAP44xx Platform based on TWL6030/TWL6032 and TPS62361B  www.ti.com  Figure 3-4. Recommended Implementation  VCC  Modem internal PU  NRESPWRON  AND  Reset_pwrdwn  gate  TWL6030  100 kW  Modem  200 kW  GPIO  recom_implemtn_2  VCC: It is the modem 1.8-V VRTC supply which is ON as long as VBATis present.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.9  SYSEN Usage for an OMAP44xx Platform based on TWL6030/TWL6032 and  TPS62361B  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  122  Cautions  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Programming of CM_CLKSEL_DPLL_CORE[20]DPLL_CLKOUTHIF_CLKSEL  
  CM_CLKSEL_DPLL_CORE[20].DPLL_CLKOUTHIF_CLKSEL allows muxing in the DPLL between DPLL  oscillator and BYP_CLK_M3 (that is, DPLL_ABE for DPLL_CORE).  If CM_CLKSEL_DPLL_CORE[20].DPLL_CLKOUTHIF_CLKSEL = 1 and if BYP_CLK_M3 is gated (that is,  in case DPLL_ABE is not Locked) then update of M3 divider which is after previous mux does not complete correctly. The incorrect update of M3 divider is impacting other dividers update; this would lead to inconsistent frequency scaling from CORE DPLL versus voltage change during DVFS transitions and ultimately lead to platform crash.  The BYP_CLK_M3 is only mapped for DPLL_CORE, this issue does not impact the other DPLLs  programming.  GUIDELINES  SW should never set CM_CLKSEL_DPLL_CORE[20].DPLL_CLKOUTHIF_CLKSEL bit to 1. Having  DPLL_ABE clock as a source clock for DPLL_CORE is not necessary.  Note: This guideline applies also for  CM_CLKSEL_DPLL_CORE_RESTORE[20].DPLL_CLKOUTHIF_CLKSEL which should never set to 1.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.10 Programming of CM_CLKSEL_DPLL_CORE[20]DPLL_CLKOUTHIF_CLKSEL  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Cautions  123  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  Power Delivery Network Verification  www.ti.com  
  Operating the OMAP at OPP_NITRO or OPP_NTSB creates strict power requirements on the system  (OMAP + Power Management IC + Power Distribution Network).  The OMAP requires carefully controlled system margin validation and verification.  In GHz systems, instability could result from marginal board design, component selection, power supply transients, susceptibility to noise, and so forth.  Developers must optimize PDN board designs to ensure stable operation at GHz frequencies across all conditions and over the lifetime of the phone. The necessary steps to follow to ensure robust operation are listed in the following Guidelines section.  GUIDELINES  •  Software guidelines:  1. It is mandatory to use SmartReflex technology for the three power rails (MPU, IVA, CORE): use of AVS is required; not using AVS would lead to abnormal aging and consumption of the system.  2. For IVA and MPU power rails, ABB (adaptative body bias) must be engaged in:  •  ABB Set1 mode (PRM_LDO_ABB_MPU/IVA_SETUP[2] ACTIVE_FBB_SEL = 0x1)  or  •  ABB Set2 mode (PRM_LDO_ABB_MPU/IVA_SETUP[1] ACTIVE_RBB_SEL = 0x1)  For OPP_NITRO and OPP_NTSB, ABB Set1 must be enabled  For OPP_TURBO, ABB Set1 or ABB Set2 must be enabled.  Software should enable ABB Set2 mode or ABB Set1 mode depending on the following fused bits for OPP_TURBO:  –  CONTROL_STD_FUSE_OPP_DPLL_1[20] MPU_RBB_TB  –  CONTROL_STD_FUSE_OPP_DPLL_1[21] IVA_RBB_TB  •  PCB guidelines:  The Power Delivery Network should be optimized to match OPP_NITRO and OPP_NTSB requirements.  All PCB Design requirements for PDN optimization can be found in Appendix A of the Data Manual.  It is mandatory for the PCB developer to align the PCB with the described guidelines and to meet TI requirements.  If you do not achieve TI requirements, contact your TI representative.  If any competence or tool issue is needed to perform the verification of the simulation of the PCB, contact your TI representative.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.11 Power Delivery Network Verification  	DESCRIPTION	  High  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  124 Cautions  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Power Delivery Network Verification  SWPZ017L – September 2011 – Revised September 2013  Cautions  125  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  PRCM Voltage Controller Uses MPU Slave Address  www.ti.com  
  When MPU, IVA, and CORE voltage rails are tied together, the PRCM voltage controller uses MPU slave address programmed in the PRM_VC_SMPS_SA[22:16] SA_VDD_MPU_L bit field.  GUIDELINES  Program correct address in the PRM_VC_SMPS_SA[22:16] SA_VDD_MPU_L bit field.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.12 PRCM Voltage Controller Uses MPU Slave Address  	DESCRIPTION	  Low  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  126  Cautions  SWPZ017L – September 2011 – Revised September 2013  Copyright © 2011–2013, Texas Instruments Incorporated  Public Version  www.ti.com  McPDM Downlink Data Corrupted With TWL604x  
  Some noise issue can occur when OMAP MCPDM downlink path is used with TWL604x audio chip.  Depending on the delay between abe_clks provided by TWL604x and the loopback clock abe_pdm_lb_clk from OMAP, the data transmitted to TWL604x DACs can be corrupted. As a result, the output noise of the analog output stages can increase. Refer to TWL6040/41 silicon errata for more bug details.  GUIDELINES  An inverter is placed on the board between TWL604x.PDMCLK and the OMAP abe_clks pad. The inverter (for example, SN74AUC1G04DCK) must be placed close to TWL604x on the PCB.  	TI	OMAP4460	Cautions	 	WORKAROUND	 3.13 McPDM Downlink Data Corrupted With TWL604x  	DESCRIPTION	  High  	Cortex A-9	  OMAP4460  1.0  1.1  Impacted  Impacted  SWPZ017L – September 2011 – Revised September 2013  Cautions  127  Copyright © 2011–2013, Texas Instruments Incorporated      
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  20  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  MDR1 access can freeze UART module  	  Software has to wait at least (2 timer interface clock cycles + 1 timer functional clock cycle) after L4 clock wakeup before reading TCRR, TCAR1 or TCAR2 registers for GPTimers in POSTED internal  synchronization mode, and before reading WCRR register of the Watchdog timers . The same workaround must be applied before reading 32KSYNCNT_CR register of the 32K sync module.  	 1.1  Delay needed to read some GP timer, WD timer and sync timer registers after wakeup  	  If a General Purpose Timer (GPTimer) is in posted mode (TSICR.POSTED=1), due to internal  resynchronizations, values read in TCRR, TCAR1 and TCAR2 registers right after the timer interface clock (L4) goes from stopped to active may not return the expected values. The most common event leading to this situation occurs upon wake up from idle.  GPTimer non-posted synchronization mode is not impacted by this limitation.  This limitation also impacts read from Watchdog timers WCRR registers.  All the watchdog timers support only POSTED internal synchronization mode. There is no capability to change the internal synchronization scheme to NON-POSTED by software.  The 32KSYNCNT_CR register is also impacted by this limitation, since the 32K sync timer is always in posted synchronization mode.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  21  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DSI: Minimum Of 2 Pixels Should Be Transferred Through DISPC Video Port  www.ti.com  	  To ensure this problem does not occur, the following software initialization sequence must be used each time MDR1 must be changed:  1. If needed, setup the UART by writing the required registers, except MDR1  2. Set appropriately the MDR1.MODE_SELECT bit field  3. Wait for 5 L4 clock cycles + 5 UART functional clock cycles  4. Clear TX and RX FIFO in FCR register to reset its counter logic  5. Read RESUME register to resume the halted operation  Step 5 is for IrDA mode only and can be omitted in UART mode.  	 1.2  MDR1 access can freeze UART module  	  Because of a glitchy structure inside the UART module, accessing the MDR1 register may create a  dummy underrun condition and freeze the UART in IrDa transmission. In UART mode, this may corrupt the transferred data(received or transmitted).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  22  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI: Cancel Tearing Effect Transfer  	  If sending a single pixel is needed, the OCP L4 slave port can be used (through CPU or sDMA).  	 1.3  DSI: Minimum Of 2 Pixels Should Be Transferred Through DISPC Video Port  	  Minimum number of pixels for MIPI command mode from the video port should be greater than 1 (at least 2). Image with less than 2 pixels is not expected to be used in a real applicative use case.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  23  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DSI: RX FIFO Fullness  www.ti.com  	  Always wait for tearing effect to complete before changing any configuration.  	 1.4  DSI: Cancel Tearing Effect Transfer  	  Transfer using tearing effect cannot be cancelled (writing TE_SIZE to 0). Writing TE_SIZE would have no effect and transfer would continue.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  24  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI: Access Restriction On DSI_TIMING2 Register  	  Use only programming model provided in Programming Model section in the TRM.  	 1.5  DSI: RX FIFO Fullness  	  RX FIFO fullness can be incorrect just after a FIFO read. FIFO fullness should be read only once at the beginning of the transfer. Other accesses during a transfer are not guaranteed.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  25  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DSI: Tx FIFO Flush Is Not Supported  www.ti.com  	  User must check that the TxByteClkHS clock is activated before initiating any write access to  DSI_TIMING2 register.  To ensure the TxByteClkHS clock is active, the user must check:  1. PLL is locked (DSI_PLL_STATUS register; DSI_PLL_LOCK bit)  2. DSIPHY must be in ON power state (PWRCMDON).  3. Clock/Data lane positions are correctly set (DSI_COMPLEXIO_CFG1.xxx_POSITION).  	 1.6  DSI: Access Restriction On DSI_TIMING2 Register  	  This register must not be written twice when TxByteClkHS is stopped to avoid L4 OCP port deadlock.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  26  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  sDMA Channel Is Not Disabled After A Transaction Error  	  User must perform module software reset when a transfer is aborted.  	 1.7  DSI: Tx FIFO Flush Is Not Supported  	  Executing a FIFO flush does not properly clean the logic, thus resulting in unpredictable behavior of the module.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  27  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DSI SOF Packet Not Send  www.ti.com  	  Whenever a transaction error is detected on a transaction on the write side of the channel i, software must disable the channel(i) by setting the DMA4_CCRi[7] ENABLE bit to 0.  	 1.8  sDMA Channel Is Not Disabled After A Transaction Error  	  In case of destination synchronized transfer on the write port (or source sync with SDMA.DMA4_CCRi[25]  BUFFERING_DISABLE = 1), if a transaction error is reported at the last element of the transaction, the channel is not automatically disabled by DMA.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  28  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  SIMCOP Lens Distortion Correction issue  	  In case of command mode where DDR clock should be provided to peripheral before data, the  workaround is to program DDR_CLK_PRE =! 0. The value of DDR_CLK_PRE must take into account the  different timings: TCLK_PREPARE, TCLK_ZERO.  Sequence to enable the DSI:  1. Set the ForceTxStopMode bit to 1 (DSI_TIMING1 register). This asserts the ForceTxStopMode.  2. Enable virtual channel in command mode / Enable DSI interface.  3. Poll the ForceTxStopMode bit to 0 (DSI_TIMING1 register) until deassertion of the ForceTxStopMode bit. The hardware resets this bit at the end of the counter value.  4. Send SOF(0x00000000) packet in command mode.  	 1.9  DSI SOF Packet Not Send  	  The first packet in command mode is not sent due to inaccurate clock gating.  Root cause description: In command mode when DDR_CLK_ALWAYS_ON and IF_EN are set to 1, DDR  clock is not present immediately after the IF_EN bit is set to 1 but when the first HS packet from OCP is ready to be sent to PPI HS link.  The DDR_CLK_PRE field is used between the start of the DDR clock and the assertion of the data  request signal. After the time defined by the DDR_CLK_PRE field, the clock lane is always present until the IF_EN bit is set to 0. So, there is a delay between IF_EN set to 1 and assertion of the clock lane.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  29  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  ISS: SOFTRESET Bit Status Not Working For Circular Buffer  www.ti.com  	  Use LDC in YUV422 mode.  	 1.10 SIMCOP Lens Distortion Correction issue  	  SIMCOP LDC module doesn't reach 100 MPix/s target in bilinear mode for YUV420 data.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  30  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ISS: SOFTRESET Bit Status Not Working For Burst Translation Engine  	  Ignore status of the the SOFTRESET bit. After a software reset, wait a few cycles before using the module.  	 1.11 ISS: SOFTRESET Bit Status Not Working For Circular Buffer  	  The SOFTRESET bit of the SYSCONFIG register inside CBUFF (CBUFF_HL_SYSCONFIG[0]  SOFTRESET) is set to 0x0 (reset done state) after reset only if CBUFF is out of IDLE.  While CBUFF slave data port is in IDLE, the SOFTRESET bit is always set to 0x1 (status bit gives an ongoing reset, but reset is finished).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  31  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  ISS State Can Be Corrupted During Debug Mode  www.ti.com  	  Ignore the status of the SOFTRESET bit. After a software reset, wait a few cycles before using the module.  	 1.12 ISS: SOFTRESET Bit Status Not Working For Burst Translation Engine  	  The SOFTRESET bit of the SYSCONFIG register inside BTE (BTE_HL_SYSCONFIG[0] SOFTRESET) is  set to 0x0 (reset done state) after reset only if BTE is out of IDLE.  While BTE slave data port is in IDLE, the SOFTRESET bit is always set to 0x1 (status bit gives an ongoing reset, but reset is finished).  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  32  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI VSYNC HSYNC Detection In Video Mode  	  To avoid read access from being stalled, the CPU must have the priority. This can be configured in the ISP5_MPSR register. Dummy accesses during frame processing lead to data corruption however  response is given immediately. This register can be used to avoid stalling debug accesses. Dummy data is returned in that case but does not hurt functionality because debug accesses do not make sense while ISP5 is processing data.  	 1.13 ISS State Can Be Corrupted During Debug Mode  	  Debug read operations should not impact the internal state of the module.  That cannot be guaranteed because debug reads of some locations can impact DMA requests. Also,  some read accesses may be stalled for a long time while ISP operation is ongoing.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  33  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Dual Video Mode  www.ti.com  	  Because before first VSYNC rising edge, one HSYNC is transmitted and clock is transmitted during that HSYNC period, the workaround is to have the HSYNC period of DISPC longer than the timing described below:  •  Configuration with line buffers: 3 VP_PCLK + 6 VP_CLK + 6 DSI_CLK  •  Configuration without line buffers: 3 VP_PCLK + 2 VP_CLK  There is no need to take care of some timings related to enabling the IF_EN, VC_EN, LCD output of the DSIPC.  	 1.14 DSI VSYNC HSYNC Detection In Video Mode  	  DSI engine is not always detecting the first VSYNC HSYNC signals received on the video port in video mode.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  34  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Deadlock Between DISPC And DSI When PCD = 2, VP_CLK_RATIO = 0  	  No  	 1.15 Dual Video Mode  	  When two video ports are available at the input of the DSI protocol engine, the two streams are  interleaved by the DSI protocol engine. Only one video mode is supported by the current implementation on VP1 only. VP2 cannot be in video mode even if VP1 is not in video mode.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  35  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  I2C: In SCCB Mode, Under Specific Conditions, The Module Might Hold The Bus By Keeping SCL Low.  www.ti.com  	  DISPC_DIVISORi[7:0] PCD = 2 is not supported, where i = 1 to 3. DISPC should be set to  DISPC_DIVISORi[7:0] PCD = 3 or above and DSI_CTRLi[4] VP_CLK_RATIO to 0x1.  	 1.16 Deadlock Between DISPC And DSI When PCD = 2, VP_CLK_RATIO = 0  	  The buffer handshake feature in the DISPC avoids underflow of the DISPC DMA FIFO. The fullness of the DISPC DMA FIFO is checked before providing data to the pipeline when STALL signal is inactive. When the FIFO hand check feature is activated, the pixel transfer to the DSI module during STALL inactivity period can be stopped (no DISPC_PCLK pulse) and restarted when there is enough data in the FIFO. The DSI protocol engine is configured in command mode.  On video port 1 in command mode, when DISPC_DIVISOR1.PCD = 2,  DISPC_CONFIG1.BUFFERHANDCHECK = 1 and DSI_CTRL.VP_CLK_RATIO = 0, the FRAMEDONE  IRQ might not be triggered and TE_SIZE counter might not be decremented to 0. This is caused by a deadlock between the DISPC and DSI modules during the transfer of the last pixel of a line  On video port 2 in command mode, when DISPC_DIVISOR2.PCD = 2,  DISPC_CONFIG2.BUFFERHANDCHECK = 1 and DSI_CTRL2.VP_CLK_RATIO = 0, the FRAMEDONE  IRQ might not be triggered and TE_SIZE counter might not be decremented to 0. This is caused by a deadlock between the DISPC and DSI modules during the transfer of the last pixel of a line.  The DSI protocol engine sends a STALL to the DISPC (stall mode); in parallel the DISPC stops the pixel clock to the DSI because it is waiting for its FIFO DMA to be refilled (buffer handcheck feature). When FIFO DMA is refilled, the DISPC being in stall mode does not provide back the pixel clock to the DSI to deassert the stall and it does not send the last pixel to the DSI.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  36  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  I2C: Wrong Behavior When A Data With MSB 0 Is Put In The FIFO Before A Transfer With SBLOCK Is Started 	  None.  	 1.17 I2C: In SCCB Mode, Under Specific Conditions, The Module Might Hold The Bus By  Keeping SCL Low.  	  In SCCB mode if the XRDY/RRDY are not served during address phase, the module starts to hold the bus by keeping SCL low (FIFO empty or full).  Then, after serving these interrupts, the module does not continue the current transfer and blocks in this state.  This bug appears only in applications where the module is used in SCCB mode. The bug does not appear at all if interrupts are served before the address phase starts (quickly enough to avoid entering this context).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  37  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  I2C: After An Arbitration Is Lost, The Module Starts Incorrectly The Next Transfer Incorrectly www.ti.com  	  The scenario described is a corner case. It may very seldom happen in applications. To avoid the situation, before a transfer is started on the I2C bus, all interrupts should have been cleared, or when I2C  is a transmitter, no data should be placed in the FIFO, without receiving the request to do so from the slave.  	 1.18 I2C: Wrong Behavior When A Data With MSB 0 Is Put In The FIFO Before A Transfer  With SBLOCK Is Started  	  Expected behavior: Before starting a new transfer from another I2C device, 1 byte of data is written to TX  FIFO. The module is addressed on a 10-bit address as a slave transmitter (one of his addresses) and I2C  clock blocking is enabled. After a repeated start condition, SBLOCK is activated again for the second part of the address.  Observed behavior: Given the addressing and SBLOCK conditions defined above, if the data put in FIFO  has its MSB 0, the module makes a glitch on SDA bus on the eighth bit (SDA is set to 0 for a short period) which can be interpreted as an illegal start/stop condition.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  38  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Deep Power-Down Support During Off Mode  	  The MST and STT bits inside I2C_CON should be set to 1 at the same moment (avoid setting the MST bit to 1 while STT = 0).  	 1.19 I2C: After An Arbitration Is Lost, The Module Starts Incorrectly The Next Transfer  Incorrectly  	  Expected behavior: After a transfer on the I2C bus, where the module lost the arbitration during the address phase, a new transfer as a master is programmed in I2C_CON by setting the MST bit to 1, having the start bit STT in the I2C_CON register still unset. The STT bit can be set after a significant delay, to point the moment in which the transfer starts on the I2C bus. The module should only start the transfer on I2C after setting this STT start bit in I2C_CON.  Observed behavior: The module starts the transfer on I2C before setting STT, immediately after setting the MST bit in the I2C_CON to 1.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  39  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  RTA Feature Is Not Supported  www.ti.com  	  Software workaround:  •  Before getting into off mode, force the value stored in the control module  EMIF_SDRAM_REF_CTRL.REG_INITREF_DIS to 1.  –  This forces the value for the EMIF register to 1 when its content is restored when returning from off mode.  •  When returning from off mode, and before making any access to the memory in DPD state:  1. Put CORE PLL in MN bypass mode CM_CLKMODE_DPLL_CORE.DPLL_EN = 0x4.  2. Program the DLL override CM_DLL_CTRL.DLL_OVERRIDE = 1.  3. Force the configuration field EMIF_SDRAM_CONFIG.REG_SDRAM_TYPE register to 0x1  (reserved), then back to 0x4 (LPDDR2-S4) or 0x5 (LPDDR2-S2) according to memory  configuration. This forces the controller back into its init state instead of self-refresh state.  4. Reconfigure EMIF_SDRAM_REF_CTRL.REG_INITREF_DIS to 0.  5. Perform normal init phase as from global cold reset.  	 1.20 Deep Power-Down Support During Off Mode  	  When coming out of off mode, the memory controllers assume connected SDRAMs to be in self-refresh mode.  The EMIF receives a DEVICE_OFFWKUP_CORERSTACTST signal from the PRCM defining if an EMIF  cold reset was due to a global reset or to exiting off mode;  •  In case of a global cold reset, the full SDRAM init phase is performed.  •  In case of off mode exit, only the self-refresh exit sequence is performed and auto-refresh commands are immediately sent.  If the memory was in deep power-down state during the chip off mode, the sequence performed by EMIF  could result in an unexpected behavior on the memory side. Exit from DPD actually requires the same full init sequence as after a global cold reset.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  40  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  I/O Daisy Wakeup During Device Off Mode Transition Stalls the Device Power Transition  	  PRM_LDO_SRAM_<Memory Voltage Domain>_SETUP[0] DISABLE_RTA_EXPORT default value is  loaded by an eFuse value. Before ES2.1, this value enabled by default this RTA feature so these bits must be set to 0x1 as soon as the device is booted for correct operation. RTA should be disabled at boot time then consistently kept disabled. Starting with ES2.1 the fuse value disables this RTA feature, so these bits must be kept at default value.  	 1.21 RTA Feature Is Not Supported  	  RTA (retention till access) feature is not supported and leads to device stability issues when enabled.  The following modules are embedding memories with RTA support:  •  MPU subsystem (cache memories)  •  OCM RAM  •  SGX  •  Display subsystem  •  HS USB OTG  •  IVA-HD subsystem  •  Face detect  •  Imaging subsystem  •  DMM  •  DSP subsystem  •  AESS  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Not impacted  Not impacted  Not impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  41  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Off Mode Power Consumption On VDD_WKUP  www.ti.com  	  No  	 1.22 I/O Daisy Wakeup During Device Off Mode Transition Stalls the Device Power Transition  	  If a wakeup from I/O daisy-chain is triggered in a short time window of the off mode transition, the device does not wake-up correctly and stays locked.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Not impacted  Not impacted  Not impacted  42  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Wkup Clk Recycling Needed After Warm Reset  	  No  	 1.23 Off Mode Power Consumption On VDD_WKUP  	  In OMAP4 off mode (VDD_CORE=0V, VDD_WKUP=0.83V) VDD_WKUP power consumption exceeds  estimation budget by approximately 100 µA. This is an isolation cell issue, which creates a leakage path from VDD_WKUP to VDD_CORE.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  43  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DMM Hang Issue During Unmapped Accesses  www.ti.com  	  Software must set bit WUCLK_CTRL in PRCM register PRM_IO_PMCTRL and it must poll on bit  WUCLK_STATUS to become 1.  After this WUCLK_CTRL bit can be set back to 0 to enable/disable the wakeup feature for each pad.  	 1.24 Wkup Clk Recycling Needed After Warm Reset  	  Hardware does not recycle the I/O wake-up clock upon a global warm reset. When a warm reset is done, wakeups of daisy I/Os are disabled, but without the wake-up clock running, this change is not latched.  Hence there is a possibility of seeing unexpected I/O wake-up events after warm reset.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  44  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HS USB Host HSIC Not Functional  	  Define LISA section to have response error when unmapped addresses. Define LISA section in such a way that all transactions reach the EMIF, which will return an error response.  	 1.25 DMM Hang Issue During Unmapped Accesses  	  DMM is assigned an address range of 2GB in the system address map. Internal registers  (DMM_LISA_MAP_i) are used to program sections which define which part of the 2GB is actually mapped to external memories.  A mapped access is a request to an address which hits at least one DMM section. An unmapped access is a request to an address which does not hit any DMM section; DMM replies with an OCP error response in that case. DMM can generate unmapped access at the end of a mapped section.  A hang occurs if an unmapped access is issued after a mapped access.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  45  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  I2C SCL and SDA Glitch At Reset Release  www.ti.com  	  None  	 1.26 HS USB Host HSIC Not Functional  	  Due to timing issue, the HSIC interface of the HS USB Host is not functional.  The issue does not impact ULPI and TLL interfaces.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Not impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  47  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Retention/Sleep Voltage Transitions Ramp Time  www.ti.com  	  For proper boot up of OMAP, customers must ensure that the size of glitches on I2C1 SCL/SDA are less than the 50 ns, because it will be filtered in Phoenix Power management IC.  Board pullup resistors on SCL/SDA lines must be adjusted to respect this timing. They must be calculated in respect of system parameters (I2C1 bus loading, strength of pullup of devices connected to the I2C  bus)  The external pullup resistor value recommendation to fix the issue in most of the board configuration is:  •  ES2.1: 5KOhm for a 10-pF load, 1KOhm for a 50-pF load, 450Ohm for a 100-pF load, and 125Ohm for  400-pF load.  •  ES2.2: See table below.  Table 1-1. External Pullup Resistor for ES2.2  I2C1  Glitch<50ns  Glitch<100ns  Glitch<150ns  Glitch<200ns  Glitch w/o external PU  resistenace (ns)  10 pf  None  None  None  None  40  50 pf  870  4500  None  None  107  100 pf  520  1300  2800  None  190  400 pf  200  525  870  1100  375  I2C2  10 pf  Unacheivable  1000  1300  2000  220  50 pf  Unacheivable  670  1000  1300  600  100 pf  Unacheivable  520  670  1000  1100  400 pf  Unacheivable  200  250  300  4800  I2C3 and I2C4  10 pf  1500  2000  2500  None  168  50 pf  670  1500  2000  2500  600  100 pf  400  670  1000  1500  1100  46  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  I2C SCL and SDA Glitch At Reset Release  Table 1-1. External Pullup Resistor for ES2.2 (continued)  I2C1  400 pf  150  250  520  670  370  Unacheivable = Glitch can not be reduced to < 50 ns  Redfont = The total resistance on the I2C line is < 420 ohms which is not allowed by the I2C spec.  	 1.27 I2C SCL and SDA Glitch At Reset Release  	  OMAP4430 will not boot in SYS_BOOT configurations involving USB or MMC1 due to negative glitches generated on I2C1 SCL and SDA lines after reset (nRESPWRON) deassertion.  This can be interpreted by a START command of the I2C protocol and Phoenix power management IC  does not respond correctly to second and subsequent requests. The lack of response to the first request blocks the boot of OMAP.  Because I2C2/3/4 are impacted as well, side-effects on devices connected to those buses are possible.  This issue is caused by two things:  •  Slew on the HHV internal signal of I/O which is too high. The HHV controls the state of I/O while power on reset is active.  •  After reset release, I2C internal pullup is not activated (corrected since ES2.2).  Glitches duration is dependant on process, voltage, temperature conditions as well as the value of external pull-up resistors and can be higher than 50 ns with default OMAP pullup resistors.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  48  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Interrupt Enable Registers Not Restored  	  None  	 1.28 Retention/Sleep Voltage Transitions Ramp Time  	  In OMAP4, for each switchable voltage domain, two registers are specified:  •  PRM_VOLTSETUP_<VD name>_OFF  •  PRM_VOLTSETUP_<VD name>_RET_SLEEP  The first register specifies voltage ramp-up from OFF mode to ON mode, and ramp-down times from non-ON mode to OFF mode of the external regulator. The second register specifies voltage ramp-up from RET  or SLEEP mode to ON mode, and ramp-down from ON mode to RET or SLEEP mode times of the  external regulator. Times are specified in terms of system clock cycles through a prescaler (RAMP_*  _PRESCAL) and count (RAMP_*_COUNT) values.  In RTL, prescaler of SLEEP-RET transition is always decoded like for OFF transition making granularity on ramp-up/down times a little bigger.  Because ramp-up/down times are of the order of tens of u-seconds, impact on PRCM functionality is minor.  Prescaler is specified over 2 bits, its decoding is:  OFF transition:  •  0x0: Ramp-up/down counter is incremented every 64 system clock cycles  •  0x1: Ramp-up/down counter is incremented every 256 system clock cycles  •  0x2: Ramp-up/down counter is incremented every 512 system clock cycles  •  0x3: Ramp-up/down counter is incremented every 2048 system clock cycles  SLEEP-RET transitions:  •  0x0: Ramp-down counter is incremented every 64 system clock cycles  •  0x1: Ramp-down counter is incremented every 256 system clock cycles  •  0x2: Ramp-down counter is incremented every 512 system clock cycles  •  0x3: Ramp-down counter is incremented every 2048 system clock cycles  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Not impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  49  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  MMCHS_HCTL.HSPE Is Not Functional  www.ti.com  	  Device OFF mode cannot be used in GP device.  The user can transition to the use of non-GP devices to avoid this issue and to use off mode in the system.  The user can use a GP device but use an alternative power state (instead of off mode) which maintains the proper register settings.  	 1.29 Interrupt Enable Registers Not Restored  	  When coming back from device off mode, the Cortex-A9 WUGEN enable registers are not restored by  ROM code. The reset values are used instead.  This leads to increased/unexpected CPU1 wakeups and can prevent MPU low-power transitions.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  50  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  NRESPWRON Pin Issue While Supplies are Ramping  	  None  	 1.30 MMCHS_HCTL.HSPE Is Not Functional  	  Due to design issue MMCHS_HCTL.HSPE bit does not work as intended. This means that the  configuration must always be the normal speed mode configuration (MMCHS_HCTL.HSPE=0).  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Not impacted  52  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  I/O Glitch At Reset Release  	  As a hardware workaround, some components must be placed on board to ensure the voltage at  OMAP4430 SYS_NRESPWRON is kept below 0.5V while TWL6030 is driving low state. One example is  shown in following schematic.  SWPZ009Q – October 2010 – Revised September 2013  Bugs  51  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  NRESPWRON Pin Issue While Supplies are Ramping  www.ti.com  Figure 1-1. Buffer Implementation  VIO_1V8  100kΩ  10kΩ  OMAP4430  SYS_NRESPWRON  RDSon<10Ω  TWL6030  NRESPWRON  	 1.31 NRESPWRON Pin Issue While Supplies are Ramping  	  During OMAP4430 platform power up, the power-on reset input signal for OMAP4430 is mistakenly driven by itself. It can cause some unexpected level on OMAP output pins which are supposed to stay in their default voltage value.  Board can so fail to boot because:  •  It is impossible to ensure correct operation of the I/Os used to control external ICs involved in board power management (supply power path, battery charger circuits, etc).  •  Inrush current during power supply ramp can be higher than expected and can cause the battery  voltage to drop down.  Details:  OMAP4430 SYS_NRESPWRON is the power-on reset input. TWL6030 PMIC drives this signal low until  all voltages are ramped and the 32-kHz clock is running. OMAP SYS_NRESPWRON uses bidirectional  I/O cell with its output driver disabled by default.  Between VDDS and VDDS_1P2 I/O power rails ramp, OMAP SYS_NRESPWRON is driven high by the  output buffer in its I/O cell. This creates a conflict with TWL6030 driving low and can create an intermediate voltage. Depending on TWL6030 and OMAP silicon, this voltage can be high enough to be interpreted as a '1' by OMAP input buffer.  Internally, SYS_NRESPWRON is used to control reset of all OMAP I/Os. Therefore, OMAP CMOS I/Os  are mistakenly controlled and are potentially driven at any interim voltage level. The consequence is high-power consumption on the VDDS power supply.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Not impacted  54  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  SDRAM Access During Heavy MPU Accesses  	  Customer must ensure that glitch on those pins cannot affect system behavior, or place appropriate pull on the board to minimize glitch to an acceptable value.  	 1.32 I/O Glitch At Reset Release  	  Some OMAP4430 I/Os can glitch at SYS_NRESPWRON reset release. This can affect platform behavior  at boot. This issue is caused by the slew on the HHV internal signal which is too high. The HHV controls the state of I/O while power-on reset is active. Duration of the glitches depends on process, voltage, temperature conditions.  In worst case conditions, glitch duration can be as high as:  •  For I2c1/2/3/4 see specific errata I622  •  For other I/Os: Pins impacted are listed below as glitch size (worst case) versus external load.  Table 1-2. IOs glitch size  OMAP ball  pad state after  glitch @ 5 pf  glitch @ 10 pf  glitch @ 25 pf  glitch @ 50 pf  reset  gpmc_ad0  I  95ns  128ns  124ns  No glitch  gpmc_ad1  I  95ns  128ns  124ns  No glitch  gpmc_ad10  I  95ns  128ns  124ns  No glitch  gpmc_ad11  I  95ns  128ns  124ns  No glitch  gpmc_ad2  I  95ns  128ns  124ns  No glitch  gpmc_ad3  I  95ns  128ns  124ns  No glitch  gpmc_ad4  I  95ns  128ns  124ns  No glitch  gpmc_ad5  I  95ns  128ns  124ns  No glitch  gpmc_ad6  I  95ns  128ns  124ns  No glitch  gpmc_ad7  I  95ns  128ns  124ns  No glitch  gpmc_ad8  I  95ns  128ns  124ns  No glitch  gpmc_ad9  I  95ns  128ns  124ns  No glitch  gpmc_ncs1  I  95ns  128ns  124ns  No glitch  gpmc_ncs2  I  95ns  128ns  124ns  No glitch  gpmc_ncs3  I  95ns  128ns  124ns  No glitch  gpmc_wait1  I  95ns  128ns  124ns  No glitch  dpm_emu0  I  40ns  20ns  5ns  No glitch  dpm_emu1  I  40ns  20ns  5ns  No glitch  usbb2_ulpitll_dat0  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_dat1  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_dat2  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_dat3  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_dat4  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_dat5  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_dat6  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_dat7  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_dir  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_nxt  I  13ns  No glitch  No glitch  No glitch  usbb2_ulpitll_stp  I  13ns  No glitch  No glitch  No glitch  gpmc_ncs0  O  1ns  1ns  0.8ns  No glitch  gpmc_noe  O  1ns  1ns  0.8ns  No glitch  SWPZ009Q – October 2010 – Revised September 2013  Bugs  53  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  I/O Glitch At Reset Release  www.ti.com  Table 1-2. IOs glitch size (continued)  OMAP ball  pad state after  glitch @ 5 pf  glitch @ 10 pf  glitch @ 25 pf  glitch @ 50 pf  reset  gpmc_nwe  O  1ns  1ns  0.8ns  No glitch  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Not impacted  Not impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  55  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Wrong Access In 1D Burst For YUV4:2:0-NV12 Format  www.ti.com  	  None  	 1.33 SDRAM Access During Heavy MPU Accesses  	  Due to highest MPU priority in the system (that is, ELLA port), SDRAM accesses may be significantly slowed down or completely stalled during heavy MPU accesses.  Nonreal-time initiators are slowed down.  Heavy MPU accesses are expected to be occasional and of short duration but long enough to cause real-time initiator failure.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  56  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  LPDDR2 Corruption After OFF Mode Transition When CS1 Is Used On EMIF  	  If YUV4:2:0-1D burst is required:  •  For ES1.0: Set DISPC_VIDp_ATTRIBUTES[22]DOUBLESTRIDE to 0x0.  •  For ES2.x: Set DISPC_VIDp_ATTRIBUTES[22]DOUBLESTRIDE to 0x0 and  DISPC_VIDp_ATTRIBUTES[13:12]ROTATION to 0x1 or 0x3  	 1.34 Wrong Access In 1D Burst For YUV4:2:0-NV12 Format  	  When in YUV4:2:0 format in 1D burst, the DISPC DMA skips lines when fetching Chroma sampling.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  57  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Time-out Interrupt May Never Come When Device Is Not Detected (1-Wire Mode)  www.ti.com  	  To avoid this issue, the EMIF_SDRAM_CONFIG_2 must be reset correctly before the restore sequence.  This can be done by programming CONTROL_WKUP_PROT_EMIF*_SDRAM_CONFIG2_REG, which is  retained during off mode and use to initialize EMIF_SDRAM_CONFIG_2 during the reset.  Before going to off mode, bit 30 of the following two registers has to be set to 0:  •  CONTROL_WKUP_PROT_EMIF1_SDRAM_CONFIG2_REG (0x4A30 C114)  •  CONTROL_WKUP_PROT_EMIF2_SDRAM_CONFIG2_REG (0x4A30 C11C)  	 1.35 LPDDR2 Corruption After OFF Mode Transition When CS1 Is Used On EMIF  	  Within the restore sequence used during auto-restore process after off mode, EMIF_SDRAM_CONFIG is restored first. Because EMIF_SDRAM_CONFIG_2 is not yet restored, the register configuration setting is not done properly, therefore it is no longer possible to use memory on the second chip-select.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  58  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Usbb*_hsic Pads Pullup/Down Control Not Working As Expected  	  Do a software reset of the HDQ/1-Wire module prior to generating any initialization pulse (1-Wire mode).  Software reset (from TRM section HDQ/1-Wire Module Global Initialization):  •  Initiate software reset. Set HDQ_SYSCONFIG[bit1] (SOFTRESET=0x1)  •  Disable power-down mode. Set HDQ_CTRL_STATUS[bit5] (CLOCKENABLE=0x1).  •  Wait until reset complete. Wait until HDQ_SYSSTATUS[bit0] is set (RESETDONE=0x1).  	 1.36 Time-out Interrupt May Never Come When Device Is Not Detected (1-Wire Mode)  	  The HDQ_CTRL_STATUS.PRESENCEDETECT bit is reset only by a software or hardware reset of the  whole HDQ/1-Wire module and nothing else.  In particular, after a first presence was detected, any subsequent initialization pulses will:  •  Generate a time-out interrupt and the PRESENCEDETECT bit will be set to '1' if the slave responded (this is the expected behavior).  •  Never generate a time-out interrupt if the slave did not respond. This is rather unexpected.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  59  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  USB HOST EHCI In TLL Mode Will See The Port Being Disabled Upon Resume Or Remote Wakeup.  www.ti.com  	  There is no workaround.  Just take care that the pullup/down configuration will switch to the OFF configuration as soon as OFFMODEENABLE is set.  It is also advised to set the same pullup/down configuration in on and off mode, to avoid any glitches or transitions on the signal when the OFFMODEENABLE is set or reset.  	 1.37 Usbb*_hsic Pads Pullup/Down Control Not Working As Expected  	  For any pad of OMAP,  •  when the system is ON, the pullup/down configuration depends on the following:  –  CONTROL_PADCONF:PULLTYPESELECT  –  CONTROL_PADCONF:PULLUDENABLE.  •  When the system goes to off mode, and when CONTROL_PADCONF:OFFMODEENABLE is set, the  pullup/down capability depends on the following:  –  CONTROL_PADCONF:OFFMODEPULLTYPESELECT  –  CONTROL_PADCONF: OFFMODEPULLUDENABLE.  So the pullup/down ON configuration is normally overwritten with the OFF configuration when  OFFMODEENABLE bit is set and when the system enters off mode. The OFFMODEENABLE bit can be  set long before the system enters off mode.  In the specific case of all usbb*_hsic pads, the pullup/down OFF configuration will be wrongly taken into account as soon as OFFMODEENABLE bit is set, without waiting for the full system to enter off mode.  This issue impacts only the following pads :  •  usbb1_hsic_data - ball AF14  •  usbb1_hsic_strobe - ball AE14  •  usbb2_hsic_data - ball AF13  •  usbb1_hsic_strobe - ball AE13  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Not impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  61  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Status of DSI LDO Is Not Reported to DSI Protocol Engine  www.ti.com  	  The workaround consists of stalling the device for some time so that the host can switch to HS before the device. Because of the conception of this workaround, the workaround for i464 also needs to be applied on top of it. (even if i464 itself is not applicable)  As a consequence, the programming guide to follow when performing the suspend resume sequence will be:  If using WA1 from i464:  1. Read FRINDEX register.  2. Keep polling FRINDEX register to make sure that the register value has incremented from the value read in Step (1).  3. Set the PORTSC_i[7].SUS bit.  4. Wait for the required suspend time.  5. When software is ready to issue resume, Read FRINDEX register.  6. Keep polling FRINDEX register to make sure that the register value has incremented from the value read in Step (5).  7. Set PORTSC_i[6].FPR bit  8. Wait for at least 20ms (as specified by the USB 2.0 Spec).  9. Read FRINDEX register.  10. Keep polling FRINDEX register to make sure that the register value has incremented from the value read in Step (9).  11. Clear PORTSC_i[6].FPR bit.  12. Gate the TLL ULPI clock and thereby the device controller by PRCM control: the whole TLL is frozen, including the ULPI clock - Clear the appropriate OPTFCLKEN_USB_CHx_CLK bit in the  CM_L3INIT_HSUSBTLL_CLKCTRL register  13. Wait 3 us for the host to go to HS.  14. Restart the TLL ULPI clock and the device controller by PRCM control, to unfreeze the entire TLL, including the ULPI clock - Set back the appropriate OPTFCLKEN_USB_CHx_CLK bit in the  CM_L3INIT_HSUSBTLL_CLKCTRL register  15. Set the USBCMD[0].RS bit to 1.  If using WA2 from i464:  1. Set the PORTSC_i[7].SUS bit.  2. Wait for the required suspend time.  60  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  USB HOST EHCI In TLL Mode Will See The Port Being Disabled Upon Resume Or Remote Wakeup.  3. When software is ready to issue resume, set PORTSC_i[6].FPR bit.  4. Wait for at least 20ms (as specified by the USB 2.0 Spec).  5. Clear the USBCMD[0].RS bit to 0.  6. Wait until USBSTS[12].HCH is set to 1 by HW  7. Clear PORTSC_i[6].FPR bit.  8. Gate the TLL ULPI clock and thereby the device controller by PRCM control: the whole TLL is frozen, including the ULPI clock - Clear the appropriate OPTFCLKEN_USB_CHx_CLK bit in the  CM_L3INIT_HSUSBTLL_CLKCTRL register  9. Wait 3 us for the host to go to HS.  10. Restart the TLL ULPI clock and the device controller by PRCM control, to unfreeze the entire TLL, including the ULPI clock - Set back the appropriate OPTFCLKEN_USB_CHx_CLK bit in the  CM_L3INIT_HSUSBTLL_CLKCTRL register  11. Wait for the resume to finish : wait PORTSC_i[6].FPR=0  12. Set the USBCMD[0].RS bit to 1.  The programming guide to follow at the end of the resume sequence is:  1. The host ends the resume sequence by clearing PORTSC.FPR bit.  2. The software waits for the TLL to report the LineState change from K to SE0 on ULPI. PORTSC.LS will switch from 0x1(K) to 0x0(SE0).  3. Gate the TLL ULPI clock and thereby the device controller by PRCM control: the whole TLL is frozen, including the ULPI clock  - Clear the appropriate OPTFCLKEN_USB_CHx_CLK bit in the CM_L3INIT_HSUSBTLL_CLKCTRL  register  4. Wait 3 us for the host to go to HS.  5. Restart the TLL ULPI clock and the device controller by PRCM control, to unfreeze the entire TLL, including the ULPI clock  - Set back the appropriate OPTFCLKEN_USB_CHx_CLK bit in the CM_L3INIT_HSUSBTLL_CLKCTRL  register  6. The USB device switches to HS.  	 1.38 USB HOST EHCI In TLL Mode Will See The Port Being Disabled Upon Resume Or  Remote Wakeup.  	  This bug impacts the TLL module when used in conjunction with the EHCI part of the USB host module.  Upon resume or remote wakeup from a bus suspended state, the device will switch from full speed to high speed before the host does.This will incorrectly generate a disconnect IRQ on the host side  (USBSTS[2]:PCD=1), and the hardware will disable the port.(PORTSC_i[2]:PED=0).The peripheral will then go back to suspend because there is no more activity on the bus.  PHY mode (non-TLL) is not impacted.  OHCI is not impacted.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  62  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI Break Frame Corrupt OnGoing Transfer  	  There is no workaround to check HW status of DSI LDO.  The LDO_POWER_GOOD_IRQ should be disabled by keeping or setting  DSI_IRQENABLE.LDO_POWER_GOOD_IRQ_EN to 0x0.  	 1.39 Status of DSI LDO Is Not Reported to DSI Protocol Engine  	  The DSI-PHY has an internal LDO. This LDO is used to convert 1.8V coming from VDDS_DSI input into 1.2V for appropriate DSI voltage level.  An internal LDOPWRGOOD signal output by the DSI_PHY indicates the status of the LDO (LDO is up or is down). This signal should be connected to the DSI protocol engine for IRQ reporting  (LDO_POWER_GOOD_IRQ).  This signal is not connected to the DSI protocol engine and input of protocol engine is tied to 0x0.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  63  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  HSI Error Counters Cannot Be Disabled  www.ti.com  	  No workaround identified.  	 1.40 HSI Break Frame Corrupt OnGoing Transfer  	  When a break frame is sent in the middle of data transfers (DMA based),in pipelined flow or synchronized flow, one Tx data frame will be overwritten at the transmitter side by an all-zeros frame (break is received correctly).  Table 1-3. Data Corruption Example  Transmitted Data:  Received Data:  0x77CFA0B0  0x77CFA0B0  0xDFFC7B49  0x00000000 <- break frame and data last  0x5BE7AD07  0x5BE7AD07  0x7F7F1BC8  0x7F7F1BC8  ....  ....  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  64  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  McPDM/DMIC Issue With Software Reset With SW_xx_RST  	  To disable error reporting:  •  Set HSR_COUNTERS_Pp[19:0] FT counter to max value (0xFFFFF)  •  Set HSR_COUNTERS_Pp[23:20] TB error to min value (0x0)  	 1.41 HSI Error Counters Cannot Be Disabled  	  The counter configuration capabilities include start (begin counting), stop (halt counting), and load (set time-out period).  It is not possible to disable the frame time-out and tailing bit error counters. Setting value 0 in HSR  counters (HSR_COUNTERS_Pp[23:20]TB = 0x0 and HSR_COUNTERS_Pp[19:0]FT = 0x0) disables  those counters, whereas errors keep being generated with this value.  In transient setup phases where TX and RX data rates are still not aligned, false errors may be reported by HSR. Because HSR halts the reception upon an error (until the error is acknowledged) communication will be broken. In such circumstances, inability to disable error detection may be a critical problem.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  65  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  CM1 And CM2 OCP Interface Hangs  www.ti.com  	  Follow the programming model below to disable and enable the channels:  •  Disable the channels:  –  Set the MCPDM_CTRL.SW_xx_RST bit to 1.  –  Disable all channels.  –  Set the MCPDM_CTRL.SW_xx_RST bit to 0.  •  Enable the channels:  –  Set the MCPDM_CTRL.SW_xx_RST bit to 1  –  Enable necessary channels.  –  Set the MCPDM_CTRL.SW_xx_RST bit to 0.  Note: SW_xx_RST is either MCPDM_CTRL_SW_UP_RST, CPDM_CTRL_SW_DN_RST, or  DMIC_CTRL.SW_DMIC_RST.  	 1.42 McPDM/DMIC Issue With Software Reset With SW_xx_RST  	  When transferring a data on McPDM uplink path, if the McPDM uplink path is reset by  MCPDM_CTRL.SW_UP_RST, uplink FIFO is correctly reset but the dma pending signal is kept asserted.  This can result in an invalid access by the host DMA to uplink FIFO.  The same applies to DMIC if reset by DMIC_CTRL.SW_DMIC_RST.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Not impacted  Not impacted  66  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  UART: Extra Assertion of UARTi_DMA_TX Request  	  None  	 1.43 CM1 And CM2 OCP Interface Hangs  	  The CM1 and CM2 OCP interface can hang if warm reset occurs while accessing to CM1 CM2 registers.  Data abort will be generated.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  67  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  USB OTG Software Initiated ULPI Accesses To PHY Registers Can Halt the Bus  www.ti.com  	  Use TX_THRESHOLD+TRIGGER_LEVEL <= 63 (TX FIFO Size - 1).  	 1.44 UART: Extra Assertion of UARTi_DMA_TX Request  	  UART TX with a DMA THRESHOLD default configuration of 64 bytes would result in extra DMA Req  assertion when FIFO tx_full is switched from high to low.  This is because of the TX THRESHOLD added in ES2.0 compared to ES1.0.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  68  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ISS-SIMCOP: ISS-LSC Not Transparent After Prefetch Error Event  	  If possible do not use software initiated reads/writes to access the PHY ULPI registers. Depending on the PHY, there may be a possibility to access these registers by I2C.  If the USB OTG is host, another workaround consist in putting the bus in suspend mode with low-  power mode disabled when willing to read/write an ULPI PHY register:  •  Disable PHY low-power mode (Power:EnableSuspendM=0)  •  Execute USB SUSPEND.  •  Do the ULPI register read/write  •  Execute USB RESUME  •  Restore Power:EnableSuspendM.  If the USB OTG is peripheral, another workaround consists in using the 1-2us time frame after  reception of SOF, before any transfer begins on the bus:  •  Enable the SOF interrupt  •  Program the ULPIReg registers except the ULPIRegControl:D0 bit  •  When the SOF interrupt fires, set the ULPIRegControl:D0 bit to make the access  •  Disable the SOF interrupt  	 1.45 USB OTG Software Initiated ULPI Accesses To PHY Registers Can Halt the Bus  	  Software initiated read/write accesses to the PHY ULPI registers (that is, when using USB OTG ULPIReg registers) may be wrongly mixed up with USB OTG Tx traffic. Due to this corruption the USB OTG will detect a Vbus error or a Babble error (logged in IntrUSB register), and halts the communication.  Hardware initiated accesses to the PHY ULPI registers are not impacted because they occur during connect, disconnect, suspend, and resume, when there is no USB traffic. Only software initiated accesses are impacted, and only when there is on-going USB Tx transfers.(including SOF in host mode) Software initiated accesses during connect, disconnect, suspend, and resume are not impacted. Host and  peripheral modes are impacted.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  69  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Phoenix Registers Value Are Lost  www.ti.com  	  None  	 1.46 ISS-SIMCOP: ISS-LSC Not Transparent After Prefetch Error Event  	  The prefetch error event (PREFETCH_ERROR) is triggered when the gain table is read too slowly from SDRAM. When this event is pending the module should go into transparent mode, meaning LSC should copy input pixels to output pixels (output=input). Actually, when the prefetch error event occurs the LSC  module outputs black pixels.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Not impacted  Not impacted  70  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  MMC1 Is Wrongly Marked As Permanent Device  	  Re-write custom values after boot.  	 1.47 Phoenix Registers Value Are Lost  	  When configuring Phoenix for USB or MMC boot, values are hard-coded in Phoenix registers, overwriting previous values.  Custom values are lost. Impacted registers are:  •  VmmcCfgVoltage  •  PhoenixSeqReg  •  VbusCfgVoltage  •  Misc2  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Not impacted  Not impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  71  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Bit 7 from Tracing Vector 1 Is Wrongly Set For XIP Memory Booting  www.ti.com  	  A SW Booting configuration can be used so that MMC1 is bypassed after the next warm resets.  	 1.48 MMC1 Is Wrongly Marked As Permanent Device  	  In the SYSBOOT table, MMC1 is considered as a permanent device only when there is no other  permanent device in the list (NOR, NAND, OneNAND), else it is a non-permanent device (booting on MMC1 is bypassed after warm reset). This impacted SYSBOOT configurations 10110, 10111 and 11001.  But the way it is implemented in the ROM Code is that MMC1 is always a permanent device. After warm reset, if MMC1 is on the device list selected by SYSBOOT pins, the ROM Code will try to boot on it even if it is marked as non-permanent device.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  72  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Incorrect Pad Muxing in MMC2 Boot Mode  	  None.  	 1.49 Bit 7 from Tracing Vector 1 Is Wrongly Set For XIP Memory Booting  	  Bit 7 from Tracing Vector 1 (GP header (non-XIP) found) is wrongly set for XIP Memory Booting. This may be misleading when debugging while using the trace information (at 0x4030D040).  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Not impacted  Not impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  73  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  UART: In an RX Wake-up Mechanism, the First Received Character Can be Lost  www.ti.com  	  Possible SW workaround: if ever it represents a system issue, the pads may be reverted back to their reset value in the initial software.  	 1.50 Incorrect Pad Muxing in MMC2 Boot Mode  	  When booting with alternate muxing (Mux5) on MMC2 port (e.g. SYSBOOT=111100), wrong pads are  configured by ROM code.  It has no direct impact on the ROM Code functionality because the relevant pads are properly configured.  However, a few pads are changed into an unexpected/unnecessary configuration.  Namely, the pads sys_32k and sys_nrespwon are enabled with an internal pull up.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  74  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Platform Hangs When CPU Tries To Configure The EMIF Firewall  	  This is a known behavior and is dependant on the speed of response of the PRCM module to a wakeup.  The CTS wake-up mechanism should be preferred when it is possible.  	 1.51 UART: In an RX Wake-up Mechanism, the First Received Character Can be Lost  	  When an RX wake-up mechanism is used for the UART module, the first character received can be lost.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  75  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Observability on sdma_req64 and 65 Does Not Have Expected Behavior  www.ti.com  	  The workaround is to make sure that the other CPU is not doing external accesses through EMIF when a CPU is updating the EMIF firewall.  The issue does not occur with the other initiators because they do not share the bridge before the L3  interconnect.  	 1.52 Platform Hangs When CPU Tries To Configure The EMIF Firewall  	  The issue occurs during concurrent accesses of CPU0 and CPU1 as described below. If one CPU fetches code from external RAM while the other CPU requires the access to the EMIF firewall (configuring its register REGUPDATE_CONTROL), then both CPUs hang.  The issue occurs because when REGUPDATE_CONTROL.BUSY_REQ is activated, the interconnect  blocks the accesses. Because the two CPUs of the MPUSS use the same bridge before the L3  interconnect, this bridge is saturated if one CPU is accessing external RAM.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  76  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DDR PHY Must be Reset After Leaving OSWR  	  None  	 1.53 Observability on sdma_req64 and 65 Does Not Have Expected Behavior  	  Control module provides observability feature on sdma_req64 and sdma_req65. But due to a design issue the behavior of these signals during hardware observability is not correct. There is no impact on the functionality of these DMA requests.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Not impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  77  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  USB TLL Hold Timing Violation  www.ti.com  	  If bus keeper mode is used, issue a PHY reset after leaving OSWR, set bit [10] to 1 at the following address (using read modify write to this register to keep other bits):  •  Assert PHY reset for EMIF1 @ x 4C00 0060  •  Assert PHY reset for EMIF2 @ x 4D00 0060  Because this resets the command line, this reset must be done when memory is in self-refresh mode.  	 1.54 DDR PHY Must be Reset After Leaving OSWR  	  If bus keeper mode is used (programmed through CONTROL_LPDDR2IO*_*.LPDDR2IO*_GR*_WD) after  leaving open switch retention, it is necessary to reset the DDR PHY. Otherwise the LPDDR2 memory cannot be accessed.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  78  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Async Bridge Corruption  	  With the following workaround, there is no more problem with the USB TLL. The two following items must be applied:  1. Use a voltage for VDD_CORE that is inside the range for OPP100 suitable for production: 1.094 -  1.127 - 1.172 V  Moreover, use the Vnom for vdds_1p8V as 1.8-V minimum  2. Set the I/O drive strength to 1.  Depending which USB host subsystem is used,  •  Port B1 used: Set CONTROL.CONTROL_SMART2IO_PADCONF_2[11] USBB1_DR0_DS = 0x1  •  Port B2 used: Set CONTROL.CONTROL_SMART2IO_PADCONF_2[12] USBB2_DR0_DS = 0x1  	 1.55 USB TLL Hold Timing Violation  	  There is a timing hold violation on an internal logic on the clock USB TLL path resulting in a systematic connection failure on the TLL link under following conditions:  •  Using TLL in HS-mode  •  Using OPP100  TLL failure is sensitive to:  •  Core voltage: vdd_core increase  •  I/O voltage: vdds_1p8V decrease  •  I/O drive strength decrease  •  Clock trace length increase  •  OMAP process (strong silicon)  •  Temperature (-40C).  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  79  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Keyboard Key Up Event Can Be Missed  www.ti.com  	  All the initiators connected through async bridge must ensure that data path is properly drained before issuing WFI. This condition is met if one strongly ordered access is performed to the target right before executing the WFI.  	 1.56 Async Bridge Corruption  	  If data is stalled inside an asynchronous bridge because of back pressure, it may be accepted multiple times, thus creating pointer misalignment that corrupts next transfers on that data path until the next reset of the system (no recovery procedure once the issue is hit, the path remains consistently broken).  This situation can happen only when the idle is initiated by a master request disconnection (which is trigged by software when executing WFI).  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  80  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  USB HOST - Impossible To Attach a FS Device To An EHCI Port. Handoff To OHCI Is Not Functional 	  First thing is to program the debounce time correctly:  If X (us) is the maximum time of bounces when a key is pressed or released, and Y (us) is the minimum time of a key release that is expected to be detected, then the debounce time should be set to a value in-between X and Y.  In case it is still possible to get shorter than debounce time key-release events, then the only solution is to implement a software workaround:  Before printing a second character on the screen, the software must check if the keyboard has hit the failing condition (cf signature of the bug above) or if the key is still really pressed and then take the appropriate actions.  	 1.57 Keyboard Key Up Event Can Be Missed  	"  When a key is released for a time shorter than the debounce time, in-between 2 key press (KP1 and KP2), the keyboard state machine will go to idle mode and will never detect the key release (after KP1, and also after KP2), and thus will never generate a new IRQ indicating the key release.  From the operating system standpoint, only a key press as been detected, and the key will keep on being printed on the screen until another or the same key is pressed again.  When the failing state has been reached, the KBD_STATEMACHINE register will show ""idle state"" and the KBD_FULLCODE register won't be empty, this is the signature of the bug.There is no impact on the power consumption of the system as the state machine goes to IDLE state.  "	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  81  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  USB HOST EHCI - Port Resume Fails On Second Resume Iteration  www.ti.com  	  Only attach FS devices to OHCI ports, or use a HS hub to interface between EHCI ports and LS/FS/HS  devices.  	 1.58 USB HOST - Impossible To Attach a FS Device To An EHCI Port. Handoff To OHCI Is  Not Functional  	"  It is not possible to perform USB transactions with a FS device on port USB_B1/B2.  EHCI is able to detect the device, reset it and find that it is a FS device. SW will then hand off the port to OHCI by setting PORTSC[5]:PO (PORT OWNER) bit.  OHCI is able to detect the connection, but then cannot communicate with the device.  When the PHY switches to FsLsSerialMode, the ULPI DIR signal will go to 1 forever.  In HS mode, if DIR is 1, then the ULPI DATA switch to ""input only"" mode. This input only configuration is wrongly kept after switching to FsLsSerialMode, hence USB transactions cannot occur.  Attaching a FS device directly to an OHCI port is working fine.  "	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  82  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  System I2C hang due to miss of Bus Clear support  	  After setting the suspend bit, switch the internal clock supply from the external ULPI_CLK provided by the PHY to the internal 60 MHz clock.  This will allow the internal counter to reach 18. Then after 1ms, switch back to the external ULPI_CLK.  This switch can be done thanks to the CM_L3INIT_HSUSBHOST_CLKCTRL[25:24]:CLKSEL_UTMI_P1/2  bits.  During the application of the WA, the  CM_L3INIT_HSUSBHOST_CLKCTRL[9:8]OPTFCLKEN_UTMI_P1/2_CLK optional clocks need to be  enabled.  	 1.59 USB HOST EHCI - Port Resume Fails On Second Resume Iteration  	  When entering USB suspend mode, the EHCI will automatically ask the PHY to enter low power mode  (PHY function control register bit suspendM is reset).  The PHY will then cut the ULPI_CLK after a minimum of 5 clock cycles.(no maximum specified).  On the other hand, the EHCI embeds a counter counting up to 18 before cutting the internal clock after suspend signal is asserted.  Since the PHY cuts the clock prematurely, the counter is not reaching 18. However, the first suspend and resume will work correctly.  At the second suspend sequence, since the counter has maintained the value (thanks to retention flops), the counter reaches 18 and cuts the clock internally.  As a consequence, the internal state machine does not transition to the correct state causing the next resume to fail.  Both host initiated resume and remote wakeup are impacted by this issue.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  83  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  HSI: Issues In Suspending and Resuming Communication (HSR and HST)  www.ti.com  	  I2C SW handler could be programmed to detect such a locked situation. In this case, it will check the Bus Busy bit and issue the needed clock pulses.  	 1.60 System I2C hang due to miss of Bus Clear support  	  There is no H/W mechanism preventing violating below I2C Bus clear standard requirement.  If the data line (SDA) is stuck LOW, the master should send 9 clock pulses. The device that held the bus LOW should release it sometime within those 9 clocks. If not, then use the HW reset or cycle power to clear the bus.  Sys_Warmreset doesn't reset the I2C IP at Phoenix level, it does at IC level.  Resetting the IP at Phoenix PMIC would avoid such situation, but this is partial answer as many other I2C  slave devices could be addressed during Warm reset without any sensitivity to this sys_warmreset pin.  No other reset source possible at Phoenix level to reset the I2C controller (only Cold Reset).  So, once the situation is reached, IC is seeing bus busy status bit.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  84  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI: Issue with SW reset  	  If this is the HST initiative:  It is not possible to configure MODE_VAL bit to SLEEP with active data transfers because it has no impact.  The only way to suspend then resuming a HSI communication with HST is to disable then re-enables active TX FIFOs.  If this is the HSR initiative:  There is no way to suspend then resume the receiver without data loss.  	 1.61 HSI: Issues In Suspending and Resuming Communication (HSR and HST)  	  There are some fails while suspending then resuming on going HSI communication on both HST and HSR  initiatives.  If this is the HST initiative:  1. It is possible to suspend then resume communication by disabling then enabling active HST FIFOs through HST_MAPPINGf [0] ENABLE bit. Transmission stops as soon as TX FIFO is disabled  (ENABLE bit equal to 0x0) and resumes as soon as TX FIFO is re-enabled (ENABLE bit equal to 0x1).  2. It is not possible to suspend then resume safely by setting HST mode to SLEEP. Writing  HST_MODE_Pp[1:0] MODE_VAL = 0x0 (SLEEP) does not have any impact on transmission that  continues.  If it is the HSR initiative:  1. It is not possible to suspend then resume communication by disabling then enabling active HSR FIFOs through HSR_MAPPINGf [0] ENABLE bit. Disabling the RX FIFO does not stop the transmission (by  dropping the READY line). The data keeps being sent by HST and HSR simply discards it. By the way, no RX mapping error is generated. Transmission did not actually stop and frame is lost by HSR.  2. It is not possible to suspend then resume safely by setting HSR mode to SLEEP. Writing  HSR_MODE_Pp[1:0] MODE_VAL = 0x0 (SLEEP) stops any ongoing transfer unconditionally which  may result in loss of frame(s) once the transfer is resumed.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  85  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DMA4 generates unexpected transaction on WR port  www.ti.com  	  Use the HW reset from the PRCM instead of the local SW reset.  	 1.62 HSI: Issue with SW reset  	  There is a bug in HSI IP;once the SW reset bit is set through the HSI_SYSCONFIG[1] SOFTRESET bit, the SW reset is not propagated well if there is an on-going reception.  If the reception never ends (synchronization loss, interrupted transmission from transmitter...), then this is a deadlock, the SW reset is not propagated and there is no OCP access possible.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  87  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DMA4 channel fails to continue with descriptor load when Pause bit is cleared  www.ti.com  	  There is a software workaround to solve this issue  1. Work around to resolve both Data Integrity and Performance issue :  86  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DMA4 generates unexpected transaction on WR port  •  Dummy enable-disable for an aborted Channel. i.e. On abort, configure the channel as soft sync  with No of frames = 0 and enable the channel by writing 0x1 into the ENABLE bitfield of register DMA4_CCRi. Wait for the Address Misaligment Interrupt. The channel is now ready for reuse.  •  Ensure that clean drain happens for a channel that is or is to be used as part of a channel chain.  i.e. ensure that the abort conditions never occur for this channel  •  If a channel gets aborted, do not reuse the channel in a chain  •  Don't use channel chaining  2. Work around to resolve the data integrity only.  Disable prefetch in all channels that are part of a channel chain  	 1.63 DMA4 generates unexpected transaction on WR port  	  The DMA4 channel generates an unexpected transaction on WR port under the following 2 scenarios :  •  Scenario 1  1. Software synchronization : Bit fields SYNCHRO_CONTROL and SYNCHRO_CONTROL_UPPER  are set to 0 in register DMA4_CCRi  Channel element number : Bit field CHANNEL_ELMNT_NBR is set to 0x9 in register DMA4_CENi  Channel frame number : Bit field CHANNEL_FRAME_NBR is set to 0x1 in register DMA4_CFNi  Element size : Bit field DATA_TYPE is set to 0x2 in register DMA4_CSDPi  Destination addressing mode : Bit field DST_AMODE is set to 0x1 in register DMA4_CCRi  Destination is packed : Bit field DST_PACKED is set to 0x1 in register DMA4_CSDPi  Destination endianism : Bit field DST_ENDIAN is set to 0x0 in register DMA4_CSDPi  Destination burst enable : Bit field DST_BURST_EN is set to 0x1 in register DMA4_CSDPi  Destination start address : Register DMA4_CDSAi is set to 0xabcd0000  Disable graphics operation : Bit fields CONSTANT_FILL_ENABLE and  TRANSPARENT_COPY_ENABLE are set to 0x0 in register DMA4_CCRi  The channel has got an ERR response on the WR port before the end of block transfer. The  channel has gone for clean abort and got disabled. The same channel has been configured with  soft-sync and included in the channel chaining (This channel is not the head of the chain). When this channel gets enabled through the link, the channel is writing the data out as soon as it fetches the data from Read side. It is expected that the channel should go with burst transfer, but it is going for single transfers  This results in a performance issue as DMA is executing single transfers instead of burst transfers.  This performance issue is also observed while using the channel with destination synchronization and prefetch enabled.  2. Destination sync with Prefetch enabled : Bit field SEL_SRC_DST_SYNC is set to 0x0 ; Bit fields SYNCRO_CONTROL_UPPER and SYNCRO_CONTROL should not be set to 0x0 ; Bit field  PREFETCH is set to 0x1 in register DMA4_CCRi The other settings remain same as in use case  #a described above  •  Scenario 2  The channel has got an ERR response on the WR port before the end of block transfer. The channel has gone for clean abort and got disabled. The same channel has been configured with destination-sync with prefetch enabled and included in the channel chaining (This channel is not the head of the chain). When this channel gets enabled through the link, the read port will start its transaction. If the HWR request to this channel comes before the channel gets its first response, the channel will start a WR transaction with byte enable 0. Also, the internal data counters get updated and the corresponding data will never come out of DMA4. The Data FIFO locations are also not recovered.  This results in a Data Integrity issue.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  88  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI: DSP Swakeup generated is the same than MPU Swakeup. System can't enter in off mode due to the DSP.  	  The software workaround is to configure DMA4 to be in no-standby or force-standby mode before clearing the PAUSE bit. The DMA4 can be reverted back to smart-standby mode after a certain period (after detecting DMA4_CSR[15:15] of corresponding channel to be 0 or ensuring DMA4_CCR[7:7] bit of  corresponding channel to be 0. This ensures descriptor load completion or channel termination.)  	 1.64 DMA4 channel fails to continue with descriptor load when Pause bit is cleared  	"  This Bug can occur only in a channel that is part of a channel chain. If channel chaining is not used, this bug is never seen.  An exact corner case sequence of events must occur. The sequence is:  •  The channel is enabled and then aborted*.  •  This same channel is now configured as part of a channel chain (it should not be the head of the channel chain).  •  The channel is configured as ""software synchronized"" or ""hardware synchronized at destination with prefetch enabled""  •  The channel gets enabled through linking.  * Following is the subset of abort conditions for this scenario:  •  The channel is disabled in the middle of transaction and channnel is not a drain candidate.  •  The channel gets a transaction error on write port but not at the end-of-block transaction.  •  The channel gets a read transaction error and is not a drain candidate.  "	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  89  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  CBUFF Ready Window Event in Write Mode  www.ti.com  	  •  While in the suspend path:  1. DSP is forced through SW to wake-up: - CM_DSP_CLKSTCTRL [1:0] CLKTRCTRL = 0x2  2. When CAWAKE signal has an activity, it will wake-up MPU and DSP; the DSP domain becomes  active  3. Program DSP through SW to transition to low power state: change the HW_AUTO, sleep and wake  up are based upon hardware conditions - CM_DSP_CLKSTCTRL [1:0] CLKTRCTRL = 0x3  •  This will forcefully clear DSP wakeup-gen and will allow DSP to go idle.  •  No impact of this workaround on power/performance is seen after doing measurements  	 1.65 HSI: DSP Swakeup generated is the same than MPU Swakeup. System can't enter in  off mode due to the DSP.  	  There is a silicon bug in HSI IP.  The wakeup dependency from HSI towards DSP is by default enabled and the register bit controlling this dependency is read only. There is no option to disable this dependency.  As a result when the MPU Wakeup is generated, a false DSP wakeup is also generated.  When below scenario happens:  1. Modem interface (HSI is enabled)  2. The system is allowed to suspend  3. When CAWAKE signal has activity, it will wake-up MPU; it also wakes up DSP incorrectly.  Consequences of this bug in previous scenario is  4. The DSP is not able to handle this wake up correctly  5. Next suspend, system can't enter in off-mode because DSP remains active  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  90  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  CSI-2 Receiver Executes Software Reset Unconditionally  	  The number of CBUFF windows to use in write mode for a given context is two windows.  	 1.66 CBUFF Ready Window Event in Write Mode  	  The next CBUFF ready window event (IRQ_CTXx_READY) is generated once CPU clears the CBUFF  ready (IRQ_CTXx_READY)and after the CPU writes in the current ended window (setting the  CBUFF_CTX_CTRL_i [10] DONE bit to 0x1).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  91  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  USB Host TLL Bit-stuffing Feature Is Broken  www.ti.com  	  Software must ensure that there is no ongoing traffic before performing a software reset. In particular, the CSI-2 receiver must be reset to resume normal operation after a CSI-2 FIFO overflow. There may be remaining data in the FIFO, and therefore ongoing traffic, when the software driver receives the overflow interrupt. To avoid creating a system hang, software must either:  •  Wait for several 1000s of L3 cycles before performing the software reset after an overflow or  •  Use the ISS level software reset  	 1.67 CSI-2 Receiver Executes Software Reset Unconditionally  	  Ongoing transactions may be interrupted when a software reset is performed while there is still active traffic generated by the CSI-2 receiver. Interruption of ongoing transactions typically leads to a general OMAP hang that can only be recovered by a device reset.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  92  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ISP H3A Hangs Due to Unstable Vertical Sync Signal  	  Disable TLL bit-stuffing on all enabled TLL channels: TLL_CHANNEL_CONF_i[11] ULPINOBITSTUFF = 1  and do not use at the same time one TLL port and one ULPI port or one HSIC port.  	 1.68 USB Host TLL Bit-stuffing Feature Is Broken  	  The TLL bit-stuffing emulation feature (enabled by default after reset in the TLL_CHANNEL_CONF_i[11]  ULPINOBITSTUFF bit) is broken. It must be disabled, that is, bit-stuffing must be disabled on all enabled TLL channels.  However, disabling bit-stuffing on a TLL channel induces an asymmetry in the number of transmitted bits between the TLL channel and the other ports (ULPI or HSIC), which may result in an underrun or overrun errors. This could be the case while transferring data pattern where bit-stuffing is heavily used, like a white image (full of 11111...).  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  93  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  GPIO IRQ Not Generated After MPU Idle if IRQSTATUS Bits Not Cleared  www.ti.com  	  ISP full reset is necessary to exit from H3A hang state.  	 1.69 ISP H3A Hangs Due to Unstable Vertical Sync Signal  	  If unexpected VD, Start of frame signal, caused by noise comes before finishing the previous frame statistics, the H3A module hangs.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  94  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DSI PLL Signal is Not available on Hardware Observability Pads  	  Note: In the below paragraph, 'x' stands for 0 or 1 being the 1st interrupt to be handled, either MPU or DSP, 'y' refers to the other interrupt line.  Upon an interrupt reported through GPIO_IRQSTATUS_x, do the following:  •  Read out GPIO_IRQSTATUS_x => status_value_x  •  Write status_value_x to GPIO_IRQSTATUS_x (clear the enabled status bits)  •  Read out GPIO_IRQSTATUS_SET_y=> enable_value_y  •  Write status_value_x and NOT enable_value_y to GPIO_IRQSTATUS_y  By doing so, user clears the unused interrupt status bits for the other interrupt line.  An extension to this workaround is to clear GPIO_IRQSTATUS_y (all the bits) when the corresponding interrupt line (most of the time the DSP, that is, 2nd interrupt line) is not used, at each time GPIO_IRQSTATUS_x is cleared.  Note: Clearing GPIO_IRQSTATUS_0 (respectively 1) is done by writing 0xFFFFFFFF to this register. It will automatically clear GPIO_IRQSTATUS_RAW_0 (respectively 1) consequently.  	 1.70 GPIO IRQ Not Generated After MPU Idle if IRQSTATUS Bits Not Cleared  	  After the GPIO is configured in smart-idle (or smart-idle with wake-up) and the system goes into MPU  inactive mode (idle), the GPIO does not generate any IRQ again if any of the register bits of both interrupt line raw status registers (GPIO_IRQSTATUS_RAW_0 or GPIO_IRQSTATUS_RAW_1) is set. In the case  of a GPIO configured in smart-idle wake-up mode (GPIO_SYSCONFIG[4:3]=0x3), the wake-up associated to the GPIO IRQ event will not even occur.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  95  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Blending Calculation Error When Premultiply Alpha is Used  www.ti.com  	  No workaround is available.  	 1.71 DSI PLL Signal is Not available on Hardware Observability Pads  	  When DSI PLL is under locking, SYS_CLK can be observed on the hardware observability but once PLL  is locked the hardware observability signal does not change and still show SYS_CLOCK. DSI PLL is not available on hardware observability.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  96  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HS USB: Multiple OFF Mode Transitions Introduce Corruption  	  No workaround is available.  	 1.72 Blending Calculation Error When Premultiply Alpha is Used  	  The equation for layer blending when upper layer is a premultiplied with a global alpha:  LYR(result) = A(global) * LYR(upper) + (1 -“ (A(global) * A(pixel))) * LYR(lower)  Where:  •  A(global) is alpha of upper layer  •  A(pixel) is pixel alpha of upper layer  •  (1 -“ (A(global) * A(pixel))) is the first complement of A(global * A(pixel))  •  When A(global) = 0  P(result) should be P(lower). Calculation leads to 0xff * P(lower) which can have 1-bit error if P(lower)  > (full range)/2 (0x80 for 8-bit)  •  When A(global) = 0xff  P(result) should be P(upper). Calculation leads to 0xff * P(upper) + (1-A(pixel)) * P(lower)  For example, 8-bit multiplication-with-rounding leading to 1-bit error in case Operand > (full range) / 2.  0x8c * 0xff = 0x8B74 final resulting after rounding is 0x8B instead of 0x8C.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  97  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Presence Rate Generation Not Supported  www.ti.com  	  The workaround is to only perform the SAR-save of the USB registers if the USB bus has been resumed since the last wakeup from OFF mode.  If the USB has been left untouched in-between the previous wakeup from OFF, and the next OFF mode entry, then do not perform the USB registers SAR-save. (However the regular SAR-save is still needed for PRCM and other registers. Just skip the USB part)  By doing so, the SAR-restore process is always restoring valid data.  	 1.73 HS USB: Multiple OFF Mode Transitions Introduce Corruption  	  When the system enters off mode, the save-and-restore (SAR) process comes into play. During the save sequence, the USB host content must be saved (even if the module was not in use). The saved content is automatically restored upon the next wakeup from off mode.  When the save of the USB context occurs, an extra pulse of UTMI_root clock coming from USB DPLL is entering the IP, and generates a minor corruption. This corrupted context is saved and restored later.  Upon each save thereafter, the corrupted context is corrupted further. This is a cumulative process. At least three consecutive saves (with no wakeup of USB in-between) are needed for introducing a fatal corruption.  This corruption will impact the next use of the USB module: it could be while resuming a suspended device, or it could be upon the enumeration of a new device. The exact failure is not predictable: disconnection or stalls have been observed.  TLL and external PHY modes are impacted.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  98  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Clear Reconfiguration Feature Does Not Revert to Previous Settings on All Registers  	  No workaround is available.  	 1.74 Presence Rate Generation Not Supported  	"  OMAP is unable to generate the SLIMbus presence rate on flow-controlled SLIMbus channels (that is, using ""pushed"" protocol for TX or ""pulled"" protocol for RX).  For example: when a 44.1â€“KSPS stream must be mapped on a 48KSPS channel reserved on SLIMbus.  Flow control should ensure that only 44.1/48 ~= 92 percent of the SLIMbus bandwidth do contain data.  However, SLIMbus transmits (or requests) data as often as allowed by the local data source (or sink), either the AESS or the SDMA (at 48k).  "	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	"  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  99  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DSS Block in ""Idle Transition"" State when using RFBI I/F  www.ti.com  "	  The workaround is software. It consists of keeping a copy of the values of the nonrestore registers in memory and restoring them by software (rewriting the module registers) in case the reconfiguration clear situation is encountered.  	 1.75 Clear Reconfiguration Feature Does Not Revert to Previous Settings on All Registers  	  During a reconfiguration message sequence, the controller accumulates parameter changes to be applied at the following reconfiguration boundary. Writing 0x1 to the SLIMBUS_FL_CONTROL[7]  CLEAR_RECONFIGURATION bit should revert some registers fields to their current value; that is, the value currently used for SLIMbus operations. The value previously written in is discarded. This setting has immediate effect on the configuration registers.  The following registers do not revert to their original configuration:  •  SLIMBUS_FR_CLOCK_SOURCE [6:4] CLKSEL bit  •  SLIMBUS_FR_CLOCK_SOURCE [3:0] CLKDIV bit  •  SLIMBUS_DCT_CONFIG1_j[31]/SLIMBUS_DCR_CONFIG1_j[31] ENABLE bit  •  SLIMBUS_DCT_CONFIG1_j[15]/SLIMBUS_DCR_CONFIG1_j[15] CL bit  •  SLIMBUS_DCT_CONFIG1_j[3:0]/SLIMBUS_DCR_CONFIG1_j[3:0] TP bit field  •  SLIMBUS_DCT_CONFIG2_j[11:0]/SLIMBUS_DCR_CONFIG2_j[11:0] SD bit field  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  100  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  System Boot Hangs When Warm Reset is Applied  	  After transfer of image completes, set the RFBI mode into bypass mode by setting the  DISPC_CONTROL1[16] GPOUT1 and DISPC_CONTROL1[15] GPOUT0 bits to 0x1.  	" 1.76 DSS Block in ""Idle Transition"" State when using RFBI I/F  "	  DISPC and RFBI are configured in smart-idle mode. After sending an image to the panel through the RFBI interface, the DISPC end-of-frame interrupt and RFBI end of transfer occur. After software sets the DSS in off state but no off state is not reached, DSS CM stays in idle transition, CM_DSS_DSS_CLKCTRL[17:16]  IDLEST = 0x1 because RFBI is not acknowledging idle request.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  101  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Deadlock Between SmartReflex™ and Voltage Processor  www.ti.com  	  Need to reprogram the M and N values of DPLL_ABE (that is, register CM_CLKSEL_DPLL_ABE) at the  beginning of Linux® boot:  •  Reprogram must be done when CM_CLKMODE_DPLL_ABE[2:0]DPLL_EN is 0x7.  •  Reprogramming will not work if CM_CLKMODE_DPLL_ABE[2:0]DPLL_EN is 0x4 and PLL is in  stop/idle-bypass state.  •  Reprogramming will also work if CM_CLKMODE_DPLL_ABE[2:0]DPLL_EN is 0x4 and PLL is already  in MN bypass state.  	 1.77 System Boot Hangs When Warm Reset is Applied  	  The issue occurs when all of the following conditions are met:  •  DPLL_ABE input clock is set at 32 kHz (register CM_ABE_PLL_REF_CLKSEL = 0x1)  •  PLL is in one of the following modes:  –  Low-power stop mode  –  Fast-relock stop mode  –  Low-power idle bypass mode  –  Fast-relock idle bypass mode  If a warm reset is applied on the system, the system hangs during the boot.  This issue is not seen if either of the following conditions is true:  •  Sys_clk is used as input for DPLL_ABE.  •  PLL is in LOCKED state before the warm reset is applied.  •  PLL is in MN bypass state before the warm reset is applied.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  102  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Refresh Rate Issue After Warm Reset  	  SmartReflex must be disabled before a software-controlled warm reset.  For other warm resets, the issue cannot be avoided, but during reboot the following sequence can be performed to recover:  •  Initiate a Force Update and check TRANXDONE interrupt success (optional). If it is not successful then:  •  Initiate a software global cold reset.  	 1.78 Deadlock Between SmartReflex™ and Voltage Processor  	  A protocol violation between SmartReflex and voltage processor can happen when a global warm reset occurs during a transaction. Consequences are:  •  VP_xx_TRANXDONE_ST interrupt from the PRCM is no longer generated when a force update  voltage from VP is performed.  •  SmartReflex does not request voltage change anymore.  SmartReflex and voltage processor have a handshake protocol. SmartReflex indicates to voltage  processor when voltage update is valid. Voltage processor acknowledges this request. Protocol violation appears when warm reset is asserted before acknowledge. This is because SmartReflex is warm reset-sensitive while voltage processor is cold reset-sensitive.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  103  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  System May Hang During EMIF Frequency Change  www.ti.com  	  The workaround is to force self-refresh when coming back from the warm reset with the following  sequence:  •  Set EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE to 0x2  •  Set EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM to 0x0  •  Do a dummy read (loads automatically new value of sr_tim)  This will reduce the risk of memory content corruption, but memory content can't be guaranteed after a warm reset.  When OMAP is back to active mode with correct OPP configuration, EMIF registers need to be re-  program according to the OPP and respect workaround for i735 bug.  	 1.79 Refresh Rate Issue After Warm Reset  	  The refresh rate is programmed in the EMIF_SDRAM_REF_CTRL[15:0] REG_REFRESH_RATE  parameter taking into account frequency of the device.  When a warm reset is applied on the system, the OMAP processor restarts with another frequency and so the frequency is not the same. Due to this frequency change, the refresh rate will be too low and could result in an unexpected behavior on the memory side.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  104  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  DDR Access Hang After Warm Reset  	  To avoid the occurrence of the three events, the workaround is to disable the self-refresh when requesting a frequency change.  Before requesting a frequency change the software must program EMIF_PWR_MGMT_CTRL[10:8]  REG_LP_MODE to 0x0.  When the frequency change has been done, the software can reprogram EMIF_PWR_MGMT_CTRL[10:8]  REG_LP_MODE to 0x2.  	 1.80 System May Hang During EMIF Frequency Change  	  When the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field is set to 0x2, self-refresh mode is  activated. In that case, EMIF puts the SDRAM into self-refresh mode if no access is performed during EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM number of DDR clock cycles.  If during a small window the following three events occur:  •  The EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM counter expires  •  And frequency update is requested (CM_SHADOW_FREQ_CONFIG1[0] FREQ_UPDATE set to 1)  •  And OCP access is requested  Then it causes unstable clock on the DDR interface.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  105  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DSS Configuration Registers Access Through the L4 Interconnect  www.ti.com  	  In case of software warm reset, software can check that no frequency change is ongoing before initiating the warm reset.  In case of watchdog timer reset, there is no workaround to recover, a cold reset is needed.  	 1.81 DDR Access Hang After Warm Reset  	  When the EMIF is going in IDLE state and the following three events occur:  •  Frequency update is requested (CM_SHADOW_FREQ_CONFIG1[0] FREQ_UPDATE set to 1).  •  And a warm reset occurs.  •  And a system access is requested.  Then the EMIF will not properly reset internal FIFO. The EMIF may answer to the request when returning from reset not expected by the system; it creates protocol error or data corruption.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  106  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  LCD1 Gamma Correction Is Not Working When GFX Pipe Is Disabled  	  DSS register access should be addressed through the L3 interconnect.  	 1.82 DSS Configuration Registers Access Through the L4 Interconnect  	  Due to wrong timings, all register accesses transitioning through the L4 interconnect toward DSS are not reliable.  DSS registers access done through the L4 interconnect are not supported  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  SWPZ009Q – October 2010 – Revised September 2013  Bugs  107  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  LCD1 Gamma Correction Is Not Working When GFX Pipe Is Disabled  www.ti.com  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  108  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Power Management Timer Value For Self-Refresh (SR_TIM)  	  There are two workaround treatments depends on the load mode for gamma correction LUT and frame  data (see Table x-xx Workaround/Load mode settings )  Table 1-4. Workaround/Load mode settings  Load Mode  GFX Enable Condition  Workaround  ( DISPC_CONFIG1[2:1]LOADMODE)  0x0 (load LUT and data every frame)  Always Enabled  WA1  0x1 (load LUT for first frame and change loadmode to 2)  Enable required for first frame only  WA2  0x2 (load frame data only)  Enable required for first frame only.  WA2  0x3 (load LUT and data for first frame and change  Enable required for first frame only.  WA2  loadmode to 2)  WA1  To use gamma correction on LCD1 output, software must:  1. Enable the GFX pipeline by setting DISPC_GFX_ATTRIBUTES[0] ENABLE to 0x1.  2. Set the GFX base address (DISPC_GFX_BA_i[31:0] BA) to an accessible frame buffer.  3. Set the GFX window to minimum size by configuring the DISPC_GFX_SIZE[27:16] SIZEY and  DISPC_GFX_SIZE[11:0] SIZEX bits.  4. If the GFX pipeline is not to be displayed, set GFX LYR to bottom LYR in LCD1 overlay by setting appropriate DISPC_GFX_ATTRIBUTES[27:26] ZORDER bit field and make GFX fully transparent by  setting the global alpha of the GFX to 0x00 in the DISPC_GLOBAL_ALPHA[7:0] GFXGLOBALALPHA  bit field.  WA2  To use gamma correction on LCD1 output, software must:  1. Enable the GFX pipeline by setting DISPC_GFX_ATTRIBUTES[0] ENABLE to 0x1.  2. Set the GFX base address (DISPC_GFX_BA_i[31:0] BA) to an accessible frame buffer.  3. Set the GFX window to minimum size by configuring the DISPC_GFX_SIZE[27:16] SIZEY and  DISPC_GFX_SIZE[11:0] SIZEX bits.  4. If the GFX pipeline is not to be displayed, set GFX LYR to bottom LYR in LCD1 overlay by setting appropriate DISPC_GFX_ATTRIBUTES[27:26] ZORDER bit field and make GFX fully transparent by  setting the global alpha of the GFX to 0x00 in the DISPC_GLOBAL_ALPHA[7:0] GFXGLOBALALPHA  bit field.  5. When DISPC_IRQSTATUS[8]PALETTEGAMMALOADING_IRQ =0x1 then disable GFX pipeline  	 1.83 LCD1 Gamma Correction Is Not Working When GFX Pipe Is Disabled  	  LCD1 output supports gamma correction. The color look-up table (CLUT) is shared between the BITMAP  to RGB conversion module on GFX pipeline and Gamma correction on the LCD1 output. LUT table can be loaded by SW through DISPC slave port (interconnect) or by DISPC master port using the DISPC DMA.  However, LCD1 gamma correction LUT loading is not working properly and require to enable GFX  pipeline for LUT loading. Depending on the load mode (DISPC_CONFIG1[2:1] LOADMODE) used, GFX  pipeline can then be disabled after 1st frame.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  109  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Leakage Increase On LPDDR2 I/Os  www.ti.com  	  Using a value of EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM >= 6 for VDD_CORE_L OPP100 and a  value of REG_SR_TIM >= 5 for VDD_CORE_L OPP50 avoid the occurrence of the issue.  	 1.84 Power Management Timer Value For Self-Refresh (SR_TIM)  	  LPDDR2 memories could be put in self-refresh mode for power savings. The number of cycles after which EMIF can start a self-refresh entry is software programmable (thanks to the power management timer for self-refresh: EMIF_PWR_MGMT_CTRL[7:4] REG_SR_TIM register bit field).  When exiting self-refresh mode, it is required that at least one refresh command is issued before entry into a subsequent self-refresh (as defined in the JEDEC LPDDR2 Specification)  When this timer value is set to a value less than 0x6 (for VDD_CORE_L OPP100) or less than 0x5 (for VDD_CORE_L OPP50), the time between a self-refresh exit to the next immediate self-refresh entry does not allow the EMIF to perform a refresh command.  As a consequence, data in LPDDR2 memory is not refreshed properly, and then data is corrupted in LPDDR2.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  110  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  MMC1 Booting May Be Bypassed Depending On VDD Ramp-up Delay  	  To prevent an increase in leakage, it is recommended to disable the pull logic for these I/Os except during off mode.  So the default state of the I/Os (to program at boot) will have pull logic disable:  CONTROL_LPDDR2IO1_2[18:17]LPDDR2IO1_GR10_WD = 00  CONTROL_LPDDR2IO2_2[18:17]LPDDR2IO2_GR10_WD = 00  When entering off mode, these I/Os must be configured with pulldown enable:  CONTROL_LPDDR2IO1_2[18:17]LPDDR2IO1_GR10_WD = 10  CONTROL_LPDDR2IO2_2[18:17]LPDDR2IO2_GR10_WD = 10  When resuming from off mode, pull logic must be disabled.  	 1.85 Leakage Increase On LPDDR2 I/Os  	  Following a bug in the integration of I/Os cell for LPDDR2 clocks, a leakage increase can be observed on vddca_lpddr2 when OMAP is in open switch retention mode.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  111  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Disconnect Protocol Violation  www.ti.com  	  No  	 1.86 MMC1 Booting May Be Bypassed Depending On VDD Ramp-up Delay  	  If the sys_boot[5:0] pins are configured for booting from MMC1, then the boot on MMC1 may not happen (board dependency) and the ROM code jumps to the next device of the boot sequence.  Indeed, depending on the voltage ramp, the ROM code may not wait long enough for SDMMC1_VDDS  voltage to be stabilized at 3 V before checking the voltage level supplied to OMAP.  In that case, the ROM code checks the SDMMC1_VDDS voltage too early, reads a bad level, and then jumps to 1.8-V configuration while the PMIC was configured to 3 V.  The MMC1_PBIAS cell is in a bad state and prevents the sending of commands to the MMC1 bus.  The ROM code switches to the next boot sequence.  	 	Cortex A-9	Bugs
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  112  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  ULPI RxCmds Convey the Wrong ID Bit After Save-and-Restore Sequence  	  L3_CLK1 must be kept in NO-IDLE when the DSS clock domain is ON. It can be switched back to  HW_AUTO when the DSS clock domain is IDLE.  L3_CLK2 must be kept in NO-IDLE when the ISS clock domain is ON. It can be switched back to  HW_AUTO when the ISS clock domain is IDLE.  	 1.87 Disconnect Protocol Violation  	  A bug has been identified in the interconnect agent handling the connect-disconnect protocol between an initiator and interconnect. When the disconnect protocol violation occurs, there is a dead lock and a system lockup is observed.  The issue can occur in a corner case when the impacted module has started a transition to standby, for the L3 initiator on which it is attached, exactly at the time the initiator gets an event for exiting idle state.  Such a situation can occur when the impacted initiator is generating short MStandby pulses (pulse durations less than one L4 clock cycle).  DSS and ISS are the only initiators that are impacted.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  113  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  PRCM Hang at Frequency Update During DVFS  www.ti.com  	  Ensure that the OTG_CTRL_i [0] IDPULLUP bit is set to 1 before the SAR-save. By doing so, this bit is restored to 1 after every off mode. Then the ID bit is sampled and the Rxcmd is correct.  	 1.88 ULPI RxCmds Convey the Wrong ID Bit After Save-and-Restore Sequence  	  ULPI RxCmds, from OMAP to USB device, convey the wrong ID bit after the save-and-restore sequence.  When OMAP is in a low-power mode scenario (chip-OFF), in high-speed transceiverless link (TLL)  connection, after the SAR phase, every RxCmd from the TLL to the peripheral conveys wrong ID field (for example, 0x0D instead of 0x4D), that is, the ID bit is 0 instead of 1. This is due to the TLL losing the value of ID during the SAR process. As long as the peripheral does not resample the ID (by toggling  OTG_CTRL_i[0] IDPULLUP) after the restore, the ID bit keeps the wrong value 0 instead of 1. This results in sending the wrong RxCmd to the peripheral.  Depending on the peripheral device design, it may consider or disregard the ID bit. The behavior and consequences depend on the device design.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  114  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Card Error Interrupt May Not Be Set Sometimes  	  The recommended sequence is:  •  Update CM_SHADOW_FREQ_CONFIG2[7:3]DPLL_CORE_M5_DIV.  •  Set CM_SHADOW_FREQ_CONFIG2[0]GPMC_FREQ_UPDATE to 0x1.  •  Wait until CM_SHADOW_FREQ_CONFIG2[0]GPMC_FREQ_UPDATE becomes 0x0.  •  Update CM_SHADOW_FREQ_CONFIG1[15:11]DPLL_CORE_M2_DIV.  •  Set CM_SHADOW_FREQ_CONFIG1[0]FREQ_UPDATE to 0x1.  •  Wait until CM_SHADOW_FREQ_CONFIG1[0]FREQ_UPDATE becomes 0x0.  	 1.89 PRCM Hang at Frequency Update During DVFS  	  During DVFS transitions, the PRCM controller can hang if CORE DPLL dividers M2 and M5 are updated at once.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  115  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  SRAM LDO Output Voltage Value Software Override in RETENTION is Not Functional  www.ti.com  	  After responses of type R1/R1b for all cards and responses of type R5/R5b/R6 for SD and SDIO cards, software must read two registers: MMCHS_RSP10 and MMCHS_CSRE. When a MMCHS_CSRE[i] bit is  set to 1, if the corresponding bit at the same position in the response MMCHS_RSP0[i] is set to 1, the host controller indicates a card error and software should proceed in the same way as if a CERR interrupt would have been detected in the MMCHS_STAT register.  	 1.90 Card Error Interrupt May Not Be Set Sometimes  	  Due to a bad behavior of an internal signal, the Card Error interrupt bit MMCHS_STAT[28] CERR may not be set sometimes when an error occurred in the card response.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  116  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HS USB Host HSIC Remote Wakeup Is Not Functional  	  None  	 1.91 SRAM LDO Output Voltage Value Software Override in RETENTION is Not Functional  	  Software override of EFUSE SRAM LDO output voltage value in retention mode is not functional and will have no effect. Retention voltage will be the one set by the EFUSE even if:  CONTROL_LDOSRAM_xxx_VOLTAGE_CTRL[26] LDOSRAMxxx_ RETMODE_MUX _CTRL is set to 1  and CONTROL_LDOSRAM_xxx_VOLTAGE_CTRL[20:16] LDOSRAMxxx_ RETMODE_VSET_OUT  contains a valid value.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  117  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  I2C FIFO Draining Interrupt Not Generated  www.ti.com  	  Do not rely on the asynchronous wake-up feature of the USB host module, but rather on the daisy-chain for detecting a remote wakeup.  Set the wakeup-enable feature of the HSIC pads and enable the daisy-chain to generate a wakeup and an interrupt to the PRCM.  Upon wakeup and interrupt from the daisy chain, if the wakeupevent bit is set for the HSIC pads, then restart the USB Host module and the UTMI_Px clock and resume the device.  	 1.92 HS USB Host HSIC Remote Wakeup Is Not Functional  	  This problem impacts the HS USB Host HSIC interface. TLL and ULPI interfaces are not impacted.  For this issue to occur, the following conditions must exist:  •  A USB device is attached to an OMAP HSIC interface.  •  The USB bus is suspended.  •  The PRCM asserts idle_req, and the USB host answers idle_ack.  •  The PRCM hardware automatically stops the interface clocks (ICLK).  •  Software disables the module by setting the  CM_L3INIT_HSUSBHOST_CLKCTRL[1:0]:MODULEMODE bit fields to 0x0.  •  The PRCM automatically stops the mandatory functional clocks (FLCK).  •  Software stops the optional FCLK.  •  The module is then idle. The clock domain can possibly enter idle, then the power domain also can enter a low-power mode, and even the full OMAP.  •  The device generates a remote wakeup.  The USB Host detects the remote wakeup condition asynchronously and generates a  USBHOST_SWAKEUP to the PRCM.  The PRCM deasserts idle_req, and restarts ICLK and mandatory FCLK, but not the optional FCLK.  However, in the case of HSIC, the optional FCLK  (CM_L3INIT_HSUSBHOST_CLKCTRL[10/9/8].OPTFCLKEN_UTMI_P3/2/1_CLK) is needed to generate  the interrupt indicating to the system that the USB HOST is the wake-up source.  Consequently, OMAP is woken up but does not acknowledge who is the wake-up source.  	 	Cortex A-9	Bugs
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  118  Bugs  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Read Accesses to GP Timer TCRR Can Report Random Value When In Posted Mode  	  Before reconfiguring the RXTRSH (Threshold value for FIFO buffer in RX mode):  •  Disable I2C controller by setting the I2C_CON[15] I2C_EN bit to 0x0 (this puts the controller in reset, clears the FIFOs, and sets the status bits to their default value)  •  Once the I2C module reconfiguration is done, reactivate the I2C controller by setting the I2C_CON[15]  I2C_EN bit to 0x1 (module enabled).  	 1.93 I2C FIFO Draining Interrupt Not Generated  	  When I2C module is used in HS master receive mode, and when smart-idle wakeup mode is set:  •  If reconfiguration of I2C_BUF[13:8] RXTRSH value is done while I2C_CON[15] I2C_EN = 0x1, and  with no clearing of the RX buffer pointer.  •  I2C module does not wakeup from idle mode due to wrong pointers of RX Buffer (as RXTRSH was  reconfigured with no actual cleaning of RX FIFO pointers from a previous transfer).  As a consequence, I2C FIFO draining interrupt is not generated in Idle/WakeUp scenario.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Bugs  119  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version      Chapter 2   SWPZ009Q – October 2010 – Revised September 2013  Limitations  120  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Issue with Transfer Of Multiple Command Packets Coming From Interconnect  	  If ICLK < 4*FCLK ratio is not respected, then software should make sure that the posted mode is inactive (the GPT_TSICR[2] POSTED bit is set to 0x0) before any read access to the GPT_TCRR register.  	 1.94 Read Accesses to GP Timer TCRR Can Report Random Value When In Posted Mode  	  General-purpose (GP) timers in posted mode (GPT_TSICR[2] POSTED bit set to 0x1) with GPTi_ICLK  (timer interface clock) and GPTi_FCLK (timer functional clock) clock frequency not respecting the ICLK < 4*FCLK ratio, can periodically report a random time from read accesses to counter register GPT_TCRR.  	 	Cortex A-9	Bugs
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  121  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Nonburst Video Mode Using Sync Pulses: NO HE Packets Sent VSA, VFP, And VBP Blanking.  www.ti.com  	  No workaround is available. The impact is minor because:  •  When interleaving is done on a vertical blanking period (VSA, VFP, VBP), as these blanking are  expressed in a number of lines, the remaining packet(s) in TX FIFO are sent on HS link during the next line blanking interval within the same blanking period or during the next one.  •  When interleaving is done on a horizontal blanking period (HSA, HFP, HBP), the remaining data in TX  FIFO is sent on the next blanking period.  	 2.1  Issue with Transfer Of Multiple Command Packets Coming From Interconnect  	  In video mode, the command mode packets, provided through the DSI protocol engine OCP port, can be interleaving during the blanking periods vertical and/or horizontal blanking periods of the video stream sequence.  When TX FIFO on the OCP slave port is empty and if the first packet written to TX FIFO is less than 13  words when 1 data lane is active or 17 words when 2 data lanes are active or 25 words when 3 or 4 data lanes are active, only this packet will be sent on the HS link during the next blanking period enabled for command packet transfer.  This is the only sent packet, because this packet is the only completely written packet when the FSM has read the last location of this packet from TX FIFO. Even if more packets are written in TX FIFO before the interleaving starts, these packets will not be sent during that blanking period.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  123  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  DPLL Fast Relock Idle Bypass Mode Not Supported  www.ti.com  	  NA  	 2.2  Nonburst Video Mode Using Sync Pulses: NO HE Packets Sent VSA, VFP, And VBP  Blanking.  	  The DSI protocol engine is based on the MIPI DSI ver. 1.01 specification.  However the video mode using sync pulses is implemented using the timing described in MIPI DSI ver.  1.00 and not ver. 1.01:  •  The DSI protocol engine sends only HE packets (when enabled) during VACT and not during VSA,  VFP, and VBP.  •  The DSI protocol engine sends VE (noted as VSE in MIPI DSI ver. 1.01 specification) during VSA and not during VBP.  Figure 2.1 represents actual implementation and Figure 2.2 represents MIPI DSI ver. 1.01 specification.  Figure 2-1. MIPI DSI 1.00 (Implemented) - Video Mode Interface Timing: Nonburst Transmission With Sync Start And End.  t * (VSA + VBP + VACT + VFP)  L  t  t  t  t  t  t  t  L  L  L  L  L  tL  L  L  B  L  V  BL  H  BL  V  BL  H  BL  H  BL  H  BL  H  BL  H L  V  Active video area  P  S  LP  S  LP  E  LP  S  LP  S  LP  S  LP  S  LP  S L  S  M  P  VSA lines  VBP lines  VFP lines  tHBP  t  t  t  t  L  HSA  HACT  HFP  H  H  H  H  H  H  H  H  S  B  RGB  HFP  S  B  RGB  HFP  S  E  S  E  A  P  A  P  VACT lines  122  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Nonburst Video Mode Using Sync Pulses: NO HE Packets Sent VSA, VFP, And VBP Blanking.  Figure 2-2. MIPI DSI 1.01 ( Not Supported) - Video Mode Interface Timing: Nonburst Transmission With Sync Start And End.  t * (VSA + VBP + VACT + VFP)  L  t  t  t  t  t  t  t  t  L  L  L  L  L  L  L  L  V  H H  H H H  H H H  V  H H  H H H  H H H  H H H  H  H H  B  L  V  BL  BL  BL  BL  BL  BL  BL  L  S  S S  S  S  S  S  S S  S  S  S  S  S S  Active video area  S  S S  S  S S  S  S S  P  S  LP  LP  LP  LP  LP  L  LP  LP  S  A E  S  A  E  S  A E  E  A  E  S  A E  S  A E  S  A E  S  A E  P  M S  VSA lines  VBP lines  VFP lines  tHBP  t  t  t  t  L  HSA  HACT  HFP  H  H H  H  H  H  H  S  HSA  S  B  RGB  HFP  S  B  RGB  HFP  S  E  S  E  P  A  P  VACT lines  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  124  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  BITMAP1-2-4 Formats Not Supported By The Graphics Pipeline  	  For CORE, MPU, IVA, ABE, and PER DPLLs, the following registers programming must not be used:  •  DPLL_EN = 6  •  AUTO_DPLL_MODE = 2 or 6  For CORE DPLL, the following registers programming must not be used:  •  CM_SHADOW_FREQ_CONFIG1.DPLL_CORE_DPLL_EN = 6  •  CM_SHADOW_FREQ_CONFIG1_RESTORE.DPLL_CORE_DPLL_EN = 6  	 2.3  DPLL Fast Relock Idle Bypass Mode Not Supported  	  CORE, MPU, IVA, ABE, and PER DPLLs are incorrectly controlled when switching to idle bypass power states. The ADPLL-M instances are forced to run in low-power mode when entering in idle bypass power state. To avoid a deadlock in the DPLLCtrl state-machine, fast relock mode must not be used.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  125  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Limitation On DISPC Dividers Settings When Using BITMAP Format  www.ti.com  	  No workaround is available.  	 2.4  BITMAP1-2-4 Formats Not Supported By The Graphics Pipeline  	  BITMAP1, BITMAP2, and BITMAP4 are not supported by the graphics pipeline.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  126  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  LPDDR2 Instability  	  No workaround is available.  	 2.5  Limitation On DISPC Dividers Settings When Using BITMAP Format  	  When Graphics pipeline input pixel is in BITMAP format, it cannot output pixel at the rate of one pixel per each clock cycle when LCD = 1 and PCD = 1.  The limitation is not applicable if PCD is greater than or equal to 2.  	 	Cortex A-9	Limitations
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Not impacted  Not impacted  Not impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  127  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  HDQ™/1-Wire® Communication Constraints  www.ti.com  	"  To have stable access the EMIF must work at 200 MHz on the LPDDR2 interface. This means that  PHY_ROOT_CLK from DPLL_CORE must be programmed at 400 MHz.  Chip powerup and reset sequence begins:  •  EMIF sends precharge command followed by MRW reset to memory.  •  MPU completes EMIF configuration.  The following sequence is needed to set correctly pullup/down resistors on DQS:  1. Program the wd0/wd1 bits for the I/O as 1/1 (bus keeper mode). This ensures that the differential pads of DQS I/O cell are held at their last driven value.  •  CONTROL_LPDDR2IO1_1.LPDDR2IO1_GR6_WD = 0x11  •  CONTROL_LPDDR2IO1_1.LPDDR2IO1_GR7_WD = 0x11  •  CONTROL_LPDDR2IO1_1.LPDDR2IO1_GR8_WD = 0x11  •  CONTROL_LPDDR2IO1_2.LPDDR2IO1_GR9_WD = 0x11  •  CONTROL_LPDDR2IO2_1.LPDDR2IO2_GR6_WD = 0x11  •  CONTROL_LPDDR2IO2_1.LPDDR2IO2_GR7_WD = 0x11  •  CONTROL_LPDDR2IO2_1.LPDDR2IO2_GR8_WD = 0x11  •  CONTROL_LPDDR2IO2_2.LPDDR2IO2_GR9_WD = 0x11  2. Initialize the DQS inputs to a known value by a dummy read.  •  MR1 read for lpddr2 (dummy read for each channel) as an example  3. Issue a PHY reset to initialize FIFO pointers.  Write 1 to bit 10 at the following address(using read modify write to this register to keep other bits):  •  Assert PHY reset for EMIF1 @ x 4C00 0060  •  Assert PHY reset for EMIF2 @ x 4D00 0060  Note: Step 3 ""issue PHY reset"" must be done after leaving Open Switch Retention state.  "	 2.6  LPDDR2 Instability  	  LPDDR2 memory accesses are not stable following two design issues on DQS:  •  Improper control of the pullup/down resistors on DQS  •  Excessive skew during the enable of the DQS  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  128  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Dual Cortex-A9 Observability Signals Not Available  	  There is a constraint in the design for the maximum allowed rise time of the wire. After writing data to the wire, the HDQ/1-Wire module samples the logic value of the wire 1 FSM (finite state machine) clock cycle later. The FSM expects to read back 1 value from the wire. This constraint must be taken into account, when calculating the pullup resistor(R) according to the capacitive load(C) of the wire.  The maximum RC (pullup resistor and capacitive load) value should be calculated as follow:  R <1200ns/(10e-12 + C)  	 2.7  HDQ™/1-Wire® Communication Constraints  	  HDQ/1-Wire protocols use a return-to-1 mechanism and it requires an external pullup resistor on the line.  There is a timing limitation on this return-to-1 mechanism that requires a constraint on the external pullup resistor(R) and the capacitive load(C) of the wire.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  129  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  HW Observability Lost After Wakeup From Off Mode  www.ti.com  	  CPU0 and CPU1 states are still available during off mode and retention-OSWR through  PROFILING_EVENT2PRM bus which has hardware observability feature.  	 2.8  Dual Cortex-A9 Observability Signals Not Available  	  The Cortex-A9 MPUSS (CPU0 and CPU1) mstandby, mwait, and mwkup signals which are available  through hardware observability do not show correct value when MPU is in OFF mode or in retention-OSWR. This is due to the fact that this logic is part of PD_MPU and therefore will be shutdown during these power modes.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  130  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Presence of a Floor Noise on Audio Band When Multiple McPDM Downlink Enabled  	  None  	 2.9  HW Observability Lost After Wakeup From Off Mode  	  Hardware observability is lost when wakeup from off mode is happening. In off mode sequence, the CORE power domain is resetting so its control enable bit  HWOBS_CONTROL.HWOBS_MACRO_ENABLE would get the reset value, thus disabling hardware  observability.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  131  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  MMCHS: ADMA2 Descriptor Length Upper Than 65532 Bytes Is Not Supported  www.ti.com  	  Case 1 workaround:  •  Set McPDM downlink FIFO threshold to 2 (floor noise goes back to ~ -130dB_fullscale)  Case 2 workaround:  •  Set McPDM downlink FIFO threshold to 4 (floor noise goes back to ~ -130dB_fullscale)  	 2.10 Presence of a Floor Noise on Audio Band When Multiple McPDM Downlink Enabled  	  Depending on McPDM FIFO value, a floor Noise in audio band at ~-80dB_fullscale may appear with  one of these two following configurations:  •  Case 1: AESS is used for the McPDM transfers, 6 downlink channels of McPDM are enabled and  McPDM downlink FIFO threshold is set to 1.  •  Case 2: AESS is not used for the McPDM transfers, 4 downlink channels of McPDM are enabled and  McPDM downlink FIFO threshold is set to 1 or 2.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  132  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  OFF Mode Over Power Consumption On VDDS_1P8 and VDDS_1P8_FREF  	  To avoid transferring less number of data than desired, the descriptor length should always be less than or equal to 65532 bytes.  	 2.11 MMCHS: ADMA2 Descriptor Length Upper Than 65532 Bytes Is Not Supported  	  Due to the use of only a 14-bit bus by MMCHS instead of 15 bits used by ADMA2, then one bit is not used by MMCHS.  So, for descriptor length 0, 65535, 65534, and 65533 (16384 accesses of 32 bits in 15-bit bus), then only 8192*32 bits accesses will be transferred instead of 16384*32 bits. For accesses lower than or equal to 65532bytes, there is no impact.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Not impacted  Not impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  133  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Overlay Optimization Limitations  www.ti.com  	  When clock slicer is used, use WA of putting alternate system clock source in bypass. There is no WA when OMAP oscillator is used.  	 2.12 OFF Mode Over Power Consumption On VDDS_1P8 and VDDS_1P8_FREF  	  In Off mode, power consumption for nominal device is measured at 690µA on VDDS_1P8 and 730 µA  VDDS_1P8_FREF.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  134  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  VID /GFX Pipeline Underflow Interrupt Generated When In WB Memory-to-memory Operation  	  For optimization to occur for a particular layer, make RESIZEENABLE as 0x0. With multiple layers enabled, make RESIZEENABLE for all the layers as 0x0 for every layer to participate in overlay  optimization of itself or for the layers below it.  	 2.13 Overlay Optimization Limitations  	  Overlay optimization does not work when resize processing is enabled on any 'Enabled' layer.  When any of the 'Enabled' layers has bit field DISPC_p_ATTRIBUTES.RESIZEENABLE as nonzero it will neither be optimized nor participate in optimization of layers below.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  135  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  HDQ/1-Wire Module Is Not Suitable For Use With Interrupts Disabled  www.ti.com  	  Software should disable the VID/GFX pipeline underflow interrupt by writing 0x0 in  DISPC_IRQENABLE[20-12-10-6] bit if it is connected to the WB pipeline in memory-to-memory mode.  Software should not consider the underflow interrupt generated in DISPC_IRQSTATUS[20-12-10-6] bit when in memory-to-memory mode  	 2.14 VID /GFX Pipeline Underflow Interrupt Generated When In WB Memory-to-memory  Operation  	  In memory-to-memory operation, it is possible for WB pipe to write out pixel data faster than the rate at which VID/GFX DMA is fetching the pixel data. Under such a condition, the WB pipe should slow down by itself (by inserting necessary stalls) and should not cause an underflow at the VID DMA. The required behavior is: when VID/GFX pipelines are connected to WB in memory-to-memory mode (connected either directly or through overlay), there should not be any buffer underflow and no underflow interrupt should be generated.  However the DISPC module deviates from this behavior and generates sporadic underflow interrupt. But buffer underflow never happens; there is no corruption of the data written back to the memory. Only undesired interrupts are generated due to this defect.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  136  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  HSI: Run-time Change Of HSR Counter Values Damages Communication  	  There is no software workaround for this limitation. The HDQ/1-Wire module must be used with interrupts enabled.  	 2.15 HDQ/1-Wire Module Is Not Suitable For Use With Interrupts Disabled  	  If the HDQ/1-Wire module is used with interrupts disabled (HDQ_STATUS_CTRL. INTERRUPTMASK=0),  all operations triggered by setting the GO bit to 1 (initialization pulse, write operation, read operation) will be repeated indefinitely until software sets the GO bit back to 0.  Consequently, the HDQ/1-Wire module is not suitable for use with interrupts disabled (unless maybe in some very specific situations and with extra care).  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  137  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  HSI Does Not Send Break Frame In Some Scenario  www.ti.com  	  No workaround is identified.  	 2.16 HSI: Run-time Change Of HSR Counter Values Damages Communication  	  The MIPI HSI specification explicitly requires run-time configurability to be supported for these HSR Frame Burst, HSR Frame Time-out, and HSR Tailing Bit counters.  Update of HSR counters with new values while data traffic is ongoing results in spurious errors and/or data loss/corruption:  •  HSR Frame Burst Counter update: Spurious FT/TB errors and/or data loss/corruption  •  HSR Frame Timeout Counter update : Spurious FT/TB errors and/or data loss/corruption (observed  only in pipelined flow)  •  HSR Tailing Bit Counter: Spurious FT/TB errors and/or data loss/corruption (observed only in pipelined flow)  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  138  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  USB Boot When Cable Not Attached  	  No workaround is identified.  	 2.17 HSI Does Not Send Break Frame In Some Scenario  	"  From the MIPI HSI spec; the transmitter shall be able to transmit a break transmission regardless of the state of the READY signal.  •  Break frame will not be sent if the READY line is low and Tx FIFO is not empty. Inserting a break frame, in this configuration, will also override a frame in Tx FIFO. Refer to ""Break frame corrupt ongoing transfer"" errata.  •  Break frame will be sent if TX FIFO is empty and READY line is low.  "	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  139  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Efficiency Lost on EMIF Accesses  www.ti.com  	  To perform USB boot, the USB cable must be attached to the OMAP device before reset.  	 2.18 USB Boot When Cable Not Attached  	  The ROM Code normally keeps looping indefinitely on trying to boot on the list of boot devices until one of them succeeds.  However, when the USB cable is not attached, a bug in the ROM Code USB driver leads to the interrupt table filling up quickly. After 2 or 3 loops in the SYSBOOT table (that defines which list of devices should be looped through), the USB boot will not be tried anymore.  It is not possible to keep trying to boot with USB until the cable is attached.  	 	Cortex A-9	Limitations
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  140  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  EMIF: Refresh rate programmation issue  	  There is no workaround to avoid this lost of efficiency. The 4 word accesses have to be avoiding in the application.  	 2.19 Efficiency Lost on EMIF Accesses  	  Started with ES2.x, EMIF accesses are done using bursts of eight words which cannot be interrupted. So if the initiator requires only four words at a time, the access is not efficient.  A list of use cases potentially impacted by this limitation follows:  •  DSS and ISS (BTE) behavior in rotated view  •  SDMA, SGX or MPU line fill/writeback in 0-degree/90-degree  	 	Cortex A-9	Limitations
  High  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  141  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  ECD3 Fails To Decode Bitstreams Having Mismatch Between CBP and CBF  www.ti.com  	  For 2 Gbit and 4 Gbit, between 85C and 95C the recommendation is to use this 3x refresh rate. Most of memory vendors have confirmed that this is acceptable.  Customer must ensure the LPDDR2 junction temperature will never exceed 95C. This can be achieved by:  •  Full device level thermal simulations on the worst case thermal use case. TI can provide flotherm model to enable these types of simulations.  •  And/or instrumentation of the phone placing a thermocouple on the LPDDR2 top case and measuring  the temperature thru a comprehensive set of use cases  	 2.20 EMIF: Refresh rate programmation issue  	  The refresh rate is programmed in the EMIF_SDRAM_REF_CTRL.REG_REFRESH_RATE parameter. To  ensure some bandwidth is still available to the system, a low threshold has been implemented in  hardware; if the programmed value is lower than the threshold, the threshold value is programmed instead of the requested value.  Assuming 1x is the refresh rate of the LPDDR at 85C, JEDEC requirement is to have 4x refresh rate between 85C and 105C.  For die up to 1 Gb, Trefi is 15.6us or 7.8us, even with the threshold limitation OMAP will support a 4x refresh rate.  For 2Gb and 4Gb die, Trefi = 3.9us, the threshold allows only a 3x refresh rate. For 8 Gbit the threshold will limit to a 2x refresh rate.  	 	Cortex A-9	Limitations
  Medium  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  142  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  TV Overlay Blending Limitation  	  No Workaround  	 2.21 ECD3 Fails To Decode Bitstreams Having Mismatch Between CBP and CBF  	  ECD3 fails to decode the bitstreams having the mismatch between CBP and CBF generated by non-TI  encoder. The mismatch violates the H.264 CBP rule. But the mismatch can be correct in-practice / real-life  /De-facto.  It wrongly decodes the bitstream as error stream (instead of normal stream), but it never results in hang or crash. The decoded output have visual noticeable artifacts as many good slices are concealed.  The issue occurs for H.264 MP/HP decoder decoding bitstream generated by non-TI encoder violating H.264 CBP rule. It does not occur for H.264 BP/MP/HP encoder as well as H.264 BP decoder.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Limitations  143  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  ISP Pattern Generator Is Not Functional  www.ti.com  	  None  	 2.22 TV Overlay Blending Limitation  	  The overlay determine the blending effect by the following:  If (Ae > 0x3fc)  Result = Upper layer  Elsif (Ae == 0x0)  Result = Lower Layer  Else  Ae = Ap×(Upper layer) + (1-Ap)×(Lower layer)  where Ae represents the effective Alpha, input of overlay.  Ae is determined by two inputs parameters: Ap (pixel alpha) and Ag (global alpha). The Ap available at the input of overlay can come through two paths:  1. The scaler (in which case the highest and second highest values are 0x3ff and 0x3fb, respectively).  2. The parallel bypass path (in which case we can get pixel alpha values between 0x3fc and 0x3fe).  The effective alpha value can only be in the range of 0x3fc – 0x3fe if the global alpha value is programmed as 0xff. As an inference from the above if Ae value (resulting as a multiplication of global alpha [Ag] and pixel alpha[Ap]) inside the TV overlay is between 0x3fc and 0x3fe, the blending logic treats this layer as opaque and blending does not occur.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  144  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated    Public Version  www.ti.com  Voltage Drop Observed On CSI PHY Pad In GPI mode  	  None  	 2.23 ISP Pattern Generator Is Not Functional  	  The ISP pattern generator, which implements an internal data generation mechanism to test the external pins and can generate RAW data without the need for an external image sensor, is not functional.  	 	Cortex A-9	Limitations
  Low  	TI	OMAP4430	 	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  146  Limitations  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version      Chapter 3   SWPZ009Q – October 2010 – Revised September 2013  Cautions  The purpose of this section is to alert OMAP users about sensitive silicon concern. Items described in the following section are compliant with specification (neither bug nor limitation), but it is mandatory to carefully respect guidelines to ensure correct OMAP behavior.  SWPZ009Q – October 2010 – Revised September 2013  Cautions  147  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  I/O Incorrectly Trimmed  www.ti.com  	  1. Use different pad for GPI.  2. Use the pull-up resistor value smaller than or equal to 9k Ohm. It avoids the voltage drop and keeps the signal level above VIH. However this will be at the expense of increased current (up to 70uA in the worst case), as long as DXn and DYn are opposite in polarity.  SWPZ009Q – October 2010 – Revised September 2013  Limitations  145  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Voltage Drop Observed On CSI PHY Pad In GPI mode  www.ti.com  	 2.24 Voltage Drop Observed On CSI PHY Pad In GPI mode  	  Voltage drop can be observed when following conditions are met:  •  csix_dx/y_ pad pair(DXn, DYn on the figure below) is used in GPI mode  (CONTROL_CAMERA_RX[20:19]/[17:16] CAMERARX_CSIx_CAMMODE=0x3)  •  One of the pair is connected to GND and another is pulled-up to High  The signal level of the pad which is pulled-up is dropped due to the leakage of the component used in the off switch for the on-die termination between DXn and DYn. The leakage current (and the voltage drop) varies depending on PVT condition.  Under the worst case condition, the leakage can be high enough to drop the signal level under VIH of the GPI buffer and causes functional failure.  Figure 2-3. CSI PHY pad in GPI mode  	 	Cortex A-9	Limitations
  Due to trimming program issue and architecture limitation, the LPDDR I/O and Smart I/O cannot be trimmed correctly. The default value in CONTROL_EFUSE_2 is not correct. Units with Prod_ID[51:50] =  11 are not impacted by this issue.  GUIDELINES  For all impacted units, the value of CONTROL_EFUSE_2 must be overwritten with 0x004E 4000.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.1  I/O Incorrectly Trimmed  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  148  Cautions  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  LPDDR2 High Temperature Operating Limit Exceeded  
  The mode register MR4 gives a status of the LPDDR2 device temperature. If the value of MR4 [2:0] =  0x111 the LPDDR2 might not operate properly.  GUIDELINES  The EMIF supports automatic temperature monitoring. The temperature monitoring can be enabled per chip-select by setting the EMIF_TEMP_ALERT_CONFIG[31] REG_TA_CS1EN and  EMIF_TEMP_ALERT_CONFIG[30] REG_TA_CS0EN bits.  The EMIF periodically polls the temperature of LPDDR2 (issues an MRR command to mode register 4) every time EMIF_TEMP_ALERT_CONFIG[21:0] REG_TA_REFINTERVAL expires.  If during this read operation the value 0x111 is returned by the memory this means that temperature operating limit is exceeded. In that case, the recommendation is to do a power-off sequence to cool of the memory.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.2  LPDDR2 High Temperature Operating Limit Exceeded  	DESCRIPTION	  High  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Cautions  149  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  SDMMC1 interface latch-up issue  www.ti.com  
  GUIDELINES  To prevent latch-up on this interface customer must ensure injected current is lower than above values during SD card plug/unplug and during functional IO switching. No work around is needed if mmc1  interface supply voltage is 1.8V.  If Card Detection feature is needed to avoid card hot plug/unplug (SD card is accessible without battery removal): VDDS_SDMMC1 supply must be turned OFF before any card insertion/extraction. SDMMC1 IOs must be correctly powered down before supply ramp up/down.  Note: in case TWL6030 companion chip is used for card detection, TWL6030 automatic shutdown of  VMMC LDO feature must not be used as it can't be sequenced properly with OMAP SDMMC IOs power  down. Only SW sequence must be used to power down IOs then supply when card extraction is detected.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.3  SDMMC1 interface latch-up issue  	DESCRIPTION	  High  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  150  Cautions  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Undesired McBSP slave mode behavior during reset without CLKR/CLKX  
  As described in the Technical Reference Manual, the McBSP port requires two clock cycles of  CLKR/CLKX during reset to synchronize the interface configuration. When the McBSP is configured in slave mode, the necessary clock is provided by the other device (the interface master). If the master device does not provide the necessary clock before the first frame pulse then undesired behavior of the McBSP port will occur since it will only be properly initialized during the first two clock cycles of CLKR/CLKX. Impacts of this situation include:  •  McBSP port does not receive the first frame of data from the master  •  Undefined output (i.e. glitch) on McBSP transmit line during the first frame pulse  GUIDELINES  If possible, the master should provide CLKR/CLKX before the first frame pulse (during McBSP  initialization) to avoid this issue. No other workaround is available.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.4  Undesired McBSP slave mode behavior during reset without CLKR/CLKX  	DESCRIPTION	  Low  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Cautions  151  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Use Smartreflex class 1.5 for Ice Cream Sandwich  www.ti.com  
"  During Ice Cream Sandwich development, the SmartReflex Voltage Control techniques have been  reviewed.  Conclusion is that using Class 1.5 is better for power comsumption on ICS. This is also better for software stability as it is simpler to develop.  GUIDELINES  Recommendation is to use class 1.5 for Ice Cream Sandwich.  This Voltage Control Technique is explained in the TRM Chapter ""AVS Overview"". For class 1.5, as the reference value for a given OPP of the device is configured by efuse for a class 3 technique, software needs to add extra margin for the voltage requested to the power IC after calibration. The DM operating condition addendum document gives details on this extra margin per OPP and voltage domain.  "	TI	OMAP4430	Cautions	 	WORKAROUND	 3.5  Use Smartreflex class 1.5 for Ice Cream Sandwich  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  152  Cautions  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  MPU EMIF Static Dependency Needed  
  If MPU-EMIF static dependency is disabled to save power (CM_MPU_STATICDEP[bit4]  MEMIF_STATDEP='0'), platform may lock-up.  On exceptional basis, MPU-EMIF static dependency can remain disabled when system hits  dpll_cascading (in case of Audio Playback) with screen turned OFF and no other initiator than MPU being used. In these conditions platform lock-up is not reproduced and system can benefit from power savings associated to MPU-EMIF dependency.  GUIDELINES  Software update recommendation: To prevent the occurrence of this issue, Static Dependency from MPU  domain towards MEMIF clock domain must be enabled (CM_MPU_STATICDEP[bit4] MEMIF_STATDEP  set to '1').  Note: As a mitigation alternative to reduce power consumption around EMIF and DDR in case MPU-EMIF  static dependency is kept enabled and MPU is active, it is recommended to tune  EMIF_PWR_MGMT_CTRL in order to maximize Power Management on DDR when memory is not  accessed. In this case, goal is to identify best power/performance tradeoff implemented in inactivity timers.  These values may vary based on operating conditions and/or scenarios.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.6  MPU EMIF Static Dependency Needed  	DESCRIPTION	  High  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Cautions  153  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Change In OMAP4xx Off Mode Sequence For a TPS62361B-Based Platform  www.ti.com  
  In a TPS62361B-based OMAP44xx platform used to power the VDD_MPU supply of OMAP44xx, the EN  pin of TPS62361B is driven by the SYSEN pin of the TWL6030 PMIC.  The minimum voltage at the output of TPS62361B while EN = 1 is 0.5 V.  As part of existing OMAP44xx off mode sequence the OMAP44xx voltages ramp down in the following  order:  •  VDD_IVA ramps down to 0 V  •  VDD_MPU ramps down to 0.5 V  •  VDD_CORE ramps down to 0 V  This creates a window where the VDD_CORE voltage rail is 0 V and the VDD_MPU voltage is 0.5 V. This condition affects the reliability of the device, thereby reducing the lifetime of the device.  GUIDELINES  The following changes must be made in the OMAP4xx off mode sequence:  1. The OFF command value must be changed to match the RETENTION command value for the CORE  power domain (PRM_VC_VAL_CMD_VDD_CORE_L).  (a) As a consequence, OMAP sends the retention voltage I2C command to the PMIC for VDD_CORE  voltage domain during off mode entry.  (b) This ensures that VDD_CORE = 0.75 V and VDD_MPU = 0.5 V during entry into off mode.  2. VCORE1 LDO of PMIC, which supplies VDD_CORE supply of OMAP, must be associated to PREQ1  (driven by sys_pwr_req from the OMAP side) by writing 0x1 in PMIC register VCORE1_CFG_GRP.  3. The SYSEN pin of the PMIC, which controls the EN pin of TPS62361B, must be associated to PREQ1  by writing 0x1 in PMIC register SYSEN_CFG_GRP.  4. Registers VCORE1_CFG_TRANS and SYSEN_CGF_TRANS must be programmed to 0x1  5. The discharge pulldown of the VCORE1 LDO in TWL6030 must be disabled in  CFG_SMPS_PD:VCORE1, so that the ramp down curves of VDD_MPU and VDD_CORE are  matching. (When this pulldown, is enabled, it only becomes active when PREQ1 goes down. So there is no need to re-enable it after the off mode sequence.)  6. When sys_pwr_req transitions from 1 to 0, both VDD_CORE and VDD_MPU voltages ramp down to 0  V due to the association done with PREQ1 as mentioned above.  7. When OMAP wakes up from off mode, VDD_MPU and VDD_CORE ramp up automatically to 0.5 V  and 0.75 V, respectively.  8. Later VDD_CORE, VDD_MPU, and VDD_IVA ramp up to their respective ON voltage defined in  PRM_VC_VAL_CMD_VDD_MPU_L, PRM_VC_VAL_CMD_VDD_IVA_L and  PRM_VC_VAL_CMD_VDD_CORE_L registers when I2C commands are sent by OMAP to PMIC.  This helps to avoid the window where VDD_CORE = 0 V and VDD_MPU = 0.5 V during entry into and  exit from OMAP off mode.  The original OMAP44xx OFF-wakeup sequence without the Guidelines is shown below.  154  Cautions  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Change In OMAP4xx Off Mode Sequence For a TPS62361B-Based Platform  Figure 3-1. Original OMAP4xx OFF-Wakeup Sequence  vdd_mpu  0.5 V  0.5 V  0 V  vdd_core  Window where  vdd_core = 0 V and  vdd_mpu = 0.5 V  0 V  2  2  2  IVA I C cmd  MPU I C cmd  MPU I C cmd  2  2  IVA I C cmd  2  CORE I C cmd  CORE I C cmd  SR_I2C  sys_pwr_req  0 V  sysen  0 V  omapse-orig  SWPZ009Q – October 2010 – Revised September 2013  Cautions  155  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Change In OMAP4xx Off Mode Sequence For a TPS62361B-Based Platform  www.ti.com  Figure 3-2. Modified OMAP4xx OFF-Wakeup Sequence  vdd_mpu  0.5 V  0.5 V  0 V  vdd_core  0.75 V  0.75 V  0 V  2  2  2  IVA I C cmd  MPU I C cmd  MPU I C cmd  2  2  IVA I C cmd  2  CORE I C cmd  CORE I C cmd  SR_I2C  sys_pwr_req  0 V  sysen  0 V  omapse-mod  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.7  Change In OMAP4xx Off Mode Sequence For a TPS62361B-Based Platform  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  156  Cautions  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  High-Speed Image Capture Use Case  
  The data flow for High-Speed Image capture use case is as follows: CSI2 RAW10 packed -> SDRAM -> ISP RSZ -> SL2 -> SIMCOP -> SDRAM. In this use case it is mandatory not to use DPLL lock/unlocked sequence for DPLL_ IVA during CD_IVAHD clock domain sleep stage.  The clock gating management in automatic mode (CM_AUTOIDLE_DPLL_IVA[2:0] AUTO_DPLL_MODE  is different than 0x0 and HW auto mode is enabled CM_IVAHD_CLKSTCTRL[1:0] CLKTRCTRL = 0x3)  results in DPLL_IVA relocking stage when SL2 write memory accesses are needed by ISP RSZ. The lock delay, bypass clock is not supplied when DPLL is managed in automatic mode, is resulting in  backpressure for CSI2 side which leads to CSI2 overflow.  GUIDELINES  During the above use case, it is mandatory to use the DPLL_IVA in manual bypass in HW auto mode  (CM_IVAHD_CLKSTCTRL[1:0] CLKTRCTRL set to 0x3); that is, CM_AUTOIDLE_DPLL_IVA[2:0]  AUTO_DPLL_MODE is set to 0x0. It is possible to select CORE_X2_CLK divisor as 1, 2, 4, or 8 for the bypass clock of DPLL_IVA as IVA-HD does not make any computation. CM_CLKSEL_DPLL_IVA[23]  DPLL_BYP_CLKSEL should be set to 1.  CORE_X2_CLK clock must be divided compliant with IVA OPP maximum clock frequency. It can be done through the CM_BYPCLK_DPLL_IVA[1:0] CLKSEL bit field.  In this way, SL2 clock can be quickly gated or ungated to meet CSI2 latency requirements.  PRCM register set configuration to allow in time the SL2 ungating clock on accesses request:  1. CM_AUTOIDLE_DPLL_IVA[2:0] AUTO_DPLL_MODE set to 0x0  2. CM_IVAHD_CLKSTCTRL[1:0] CLKTRCTRL set to 0x3  3. CM_CLKMODE_DPLL_IVA[2:0] DPLL_EN set to 0x5  4. CM_BYPCLK_DPLL_IVA[1:0] CLKSEL set to 0x1  5. CM_CLKSEL_DPLL_IVA[23] DPLL_BYP_CLKSEL set to 0x1  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.8  High-Speed Image Capture Use Case  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Cautions  157  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  LPDDR2 Power-Down State is Not Efficient  www.ti.com  
  The EMIF supports power-down state for low power. The EMIF automatically puts the SDRAM into power-down after the memory is not accessed for a defined number of cycles and the  EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field is set to 0x4.  As the EMIF supports automatic output impedance calibration, a ZQ calibration long command is issued every time it exits active power-down and precharge power-down modes. The EMIF waits and blocks any other command during this calibration.  The EMIF does not allow selective disabling of ZQ calibration upon exit of power-down mode. Due to very short periods of power-down cycles, ZQ calibration overhead creates bandwidth issues and increases overall system power consumption. On the other hand, issuing ZQ calibration long commands when  exiting self-refresh is still required.  GUIDELINES  Because there is no power consumption benefit of the power-down due to the calibration and there is a performance risk, the guideline is to not allow power-down state and, therefore, to not have set the EMIF_PWR_MGMT_CTRL[10:8] REG_LP_MODE bit field to 0x4.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.9  LPDDR2 Power-Down State is Not Efficient  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  158  Cautions  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  SYSEN Usage for an OMAP44xx Platform based on TWL6030/TWL6032 and TPS62361B  
  If TPS62361B is used to power the VDD_MPU supply of OMAP44xx, the EN pin of TPS62361B is driven  by the SYSEN pin of the TWL6030/6032 PMIC.  The minimum voltage that can be supplied by TPS62361B while EN = 1 is 0.5 V.  The output voltage of TPS62361B is 0V only when EN = 0. Thus, when OMAP44xx enters off mode, the SYSEN pin of TWL6030/6032 toggles to 0, which ensures that VDD_MPU = 0 when OMAP44xx is in off  mode. This control is required to maintain the normal OMAP44xx off mode condition where VDD_MPU =  0V.  If the SYSEN pin is used to control the reset (active low signal) or enable (active high signal) of any peripheral (for example, modem, WLAN chip and so forth) which is required to be active when OMAP44xx is in off mode, the peripheral is not active due to this implementation.  This prevents the peripheral from waking up OMAP44xx when it is in off mode.  This caution does not apply if TWL6030/6032 is used to supply the VDD_MPU rail of OMAP44xx and  SYSEN is not used to control the TPS62361B EN pin.  GUIDELINES  •  If TPS62631B is used to power VDD_MPU rail in a platform, the SYSEN pin should not be used to  control any peripheral reset or enable if it is one of the sources of wakeup when OMAP44xx is in off mode.  •  Instead, one should use a logical AND of an OMAP GPIO and NRESPWRON signal of TWL6030 to  drive the peripheral enable or reset pin.  The figure below shows the modem.  Figure 3-3. Original Implementation  VCC  Modem internal PU  SYSEN  AND  Reset_pwrdwn  gate  TWL6030  Modem  VCC: Modem 1.8-V supply (VRTC 1V8)  This supply is ON as long V  is present  BAT  GPIO  orig_impletn_1  SWPZ009Q – October 2010 – Revised September 2013  Cautions  159  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  SYSEN Usage for an OMAP44xx Platform based on TWL6030/TWL6032 and TPS62361B  www.ti.com  Figure 3-4. Recommended Implementation  VCC  Modem internal PU  NRESPWRON  AND  Reset_pwrdwn  gate  TWL6030  100 kW  Modem  200 kW  GPIO  recom_implemtn_2  VCC: It is the modem 1.8-V VRTC supply which is ON as long as VBATis present.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.10 SYSEN Usage for an OMAP44xx Platform based on TWL6030/TWL6032 and  TPS62361B  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  160  Cautions  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  Programming of CM_CLKSEL_DPLL_CORE[20]DPLL_CLKOUTHIF_CLKSEL  
  CM_CLKSEL_DPLL_CORE[20].DPLL_CLKOUTHIF_CLKSEL allows muxing in the DPLL between DPLL  oscillator and BYP_CLK_M3 (that is, DPLL_ABE for DPLL_CORE).  If CM_CLKSEL_DPLL_CORE[20].DPLL_CLKOUTHIF_CLKSEL = 1 and if BYP_CLK_M3 is gated (that is,  in case DPLL_ABE is not Locked) then update of M3 divider which is after previous mux does not  complete correctly. The incorrect update of M3 divider is impacting other dividers update; this would lead to inconsistent frequency scaling from CORE DPLL versus voltage change during DVFS transitions and ultimately lead to platform crash.  The BYP_CLK_M3 is only mapped for DPLL_CORE, this issue does not impact the other DPLLs  programming.  GUIDELINES  SW should never set CM_CLKSEL_DPLL_CORE[20].DPLL_CLKOUTHIF_CLKSEL bit to 1. Having  DPLL_ABE clock as a source clock for DPLL_CORE is not necessary.  Note: This guideline applies also for  CM_CLKSEL_DPLL_CORE_RESTORE[20].DPLL_CLKOUTHIF_CLKSEL which should never set to 1.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.11 Programming of CM_CLKSEL_DPLL_CORE[20]DPLL_CLKOUTHIF_CLKSEL  	DESCRIPTION	  Medium  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Cautions  161  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  Power Delivery Network Verification  www.ti.com  
  Operating the OMAP at OPP_NITRO or OPP_NITRO1.2G creates strict power requirements on the  system (OMAP + Power Management IC + Power Distribution Network).  The OMAP requires carefully controlled system margin validation and verification.  In GHz systems, instability could result from marginal board design, component selection, power supply transients, susceptibility to noise, and so forth.  Developers must optimize PDN board designs to ensure stable operation at GHz frequencies across all conditions and over the lifetime of the phone. The necessary steps to follow to ensure robust operation are listed in the guidelines section below.  GUIDELINES  •  Software guidelines:  1. It is mandatory to use SmartReflex technology for the three power rails (MPU, IVA, CORE): use of AVS is required; not using AVS would lead to abnormal aging and consumption of the system.  2. For MPU power rails, ABB (adaptative body bias) must be engaged in:  •  ABB Set1 mode for OPP_NITRO and OPP_NITRO1.2G (PRM_LDO_ABB_MPU_SETUP [2]  ACTIVE_FBB_SEL is set to 0x1)  •  PCB guidelines:  The Power Delivery Network should be optimized to match OPP_NITRO and OPP_NITRO1.2G  requirements. All PCB Design requirements for PDN optimization can be found in Appendix A of the Data Manual.  It is mandatory for the PCB developer to align the PCB with the described guidelines and to meet TI requirements.  If you do not achieve TI requirements, contact your TI representative.  If any competence or tool issue is needed to perform the verification of the simulation of the PCB, contact your TI representative.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.12 Power Delivery Network Verification  	DESCRIPTION	  High  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  162  Cautions  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  www.ti.com  PRCM Voltage Controller Uses MPU Slave Address  
  When MPU, IVA, and CORE voltage rails are tied together, the PRCM voltage controller uses MPU slave address programmed in the PRM_VC_SMPS_SA[22:16] SA_VDD_MPU_L bit field.  GUIDELINES  Program correct address in the PRM_VC_SMPS_SA[22:16] SA_VDD_MPU_L bit field.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.13 PRCM Voltage Controller Uses MPU Slave Address  	DESCRIPTION	  Low  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  SWPZ009Q – October 2010 – Revised September 2013  Cautions  163  Copyright © 2010–2013, Texas Instruments Incorporated  Public Version  McPDM Downlink Data Corrupted With TWL604x  www.ti.com  
  Some noise issue can occur when OMAP MCPDM downlink path is used with TWL604x audio chip.  Depending on the delay between abe_clks provided by TWL604x and the loopback clock abe_pdm_lb_clk from OMAP, the data transmitted to TWL604x DACs can be corrupted. As a result, the output noise of the analog output stages can increase. Refer to TWL6040/41 silicon errata for more bug details.  GUIDELINES  An inverter is placed on the board between TWL604x.PDMCLK and the OMAP abe_clks pad. The inverter (for example, SN74AUC1G04DCK) must be placed close to TWL604x on the PCB.  	TI	OMAP4430	Cautions	 	WORKAROUND	 3.14 McPDM Downlink Data Corrupted With TWL604x  	DESCRIPTION	  High  	Cortex A-9	  OMAP4430  2.0  2.1  2.2  2.3  Impacted  Impacted  Impacted  Impacted  164  Cautions  SWPZ009Q – October 2010 – Revised September 2013  Copyright © 2010–2013, Texas Instruments Incorporated      
